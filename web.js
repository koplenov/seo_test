#!/usr/bin/env node
"use strict";
function require( path ){ return $node[ path ] };

var $node = $node || {}
void function( module ) { var exports = module.exports = this; function require( id ) { return $node[ id.replace( /^.\// , "../" ) ] }; 
;
"use strict";
Error.stackTraceLimit = 50;
var $;
(function ($) {
})($ || ($ = {}));
module.exports = $;

;

$node[ "../mam.ts" ] = $node[ "../mam.ts" ] = module.exports }.call( {} , {} )
;
var $node = $node || {} ; $node[ "/README.md" ] = "IyBNQU0KCioqTSoqYW0gb3ducyBsYW5ndWFnZS0qKkEqKmdub3N0aWMgKipNKipvZHVsZXMuClRoaXMgaXMgdGhlIGJhc2UgKipNQU0qKiBwcm9qZWN0LgoKIyBBcnRpY2xlcwoKLSBbTUFNOiDRgdCx0L7RgNC60LAg0YTRgNC+0L3RgtC10L3QtNCwINCx0LXQtyDQsdC+0LvQuF0oaHR0cHM6Ly9oYWJodWIuaHlvby5ydS8jIWF1dGhvcj1uaW4tamluL3JlcG89SGFiSHViL2FydGljbGU9MTgpIChpbiBSdXNzaWFuLCBzZWUgW2F1dG9tYXRpYyBFbmdsaXNoIHRyYW5zbGF0aW9uXShodHRwczovL3RyYW5zbGF0ZS5nb29nbGUuY29tL3RyYW5zbGF0ZT9obD1ydSZzbD1ydSZ0bD1lbiZ1PWh0dHBzOi8vaGFiaHViLmh5b28ucnUvIyFhdXRob3I9bmluLWppbi9yZXBvPUhhYkh1Yi9hcnRpY2xlPTE4KSkKLSBbU3RlcC1ieS1zdGVwIHR1dG9yaWFsXShodHRwczovL2dpdGh1Yi5jb20vaHlvby1ydS9IYWJIdWIvaXNzdWVzLzQpIChpbiBSdXNzaWFuLCBzZWUgW2F1dG9tYXRpYyBFbmdsaXNoIHRyYW5zbGF0aW9uXShodHRwczovL3RyYW5zbGF0ZS5nb29nbGUuY29tL3RyYW5zbGF0ZT9obD1ydSZzbD1ydSZ0bD1lbiZ1PWh0dHBzOi8vZ2l0aHViLmNvbS9oeW9vLXJ1L0hhYkh1Yi9pc3N1ZXMvNCkpCgojIEZlYXR1cmVzCgoqICoqQWdub3N0aWMgbW9kdWxlcy4qKiBNb2R1bGUgaXMgYSBkaXJlY3Rvcnkgd2l0aCB0aGUgbWl4ZWQgc291cmNlIGZpbGVzIChKUywgVFMsIENTUywgSlNPTiwgSFRNTCwgVHJlZSwgaW1hZ2VzLCBldGMpLgoqICoqQXV0b21hdGljIGRlcGVuZGVuY3kgdHJhY2tpbmcuKiogWW91IGRvbid0IG5lZWQgaW1wb3J0L2V4cG9ydCAtIHNpbXBseSB1c2UgdGhlIG5hbWVzcGFjZWQgbmFtZXMgYWNjb3JkaW5nIHRvIHRoZSBkaXJlY3Rvcnkgc3RydWN0dXJlLCBsaWtlIGAkbW9sX2J1dHRvbl9tYWpvcmAgLyBgJGppbi50aW1lLm1vbWVudGAgaW4gYCouSkFNLkpTYC9gKi5UU2Agb3IgYC0tbW9sX3RoZW1lX2JhY2tgIC8gYFttb2xfcGFnZV90aXRsZV1gIC8gYC5teS1oZWFkZXItYXZhdGFyYCBpbiBgKi5DU1NgLgoqICoqRGV2ZWxvcG1lbnQgc2VydmVyIHdpdGggYXV0b21hdGljIGJ1bmRsaW5nIG9uIHJlcXVlc3QqKi4gV2lsbCBiZSBidW5kbGVkIG9ubHkgaWYgeW91IHVzZSBpdC4KKiAqKkJ1aWxkIGFueSBtb2R1bGUgYXMgc3RhbmRhbG9uZSBidW5kbGUqKi4gWW91IGNhbiBkZXZlbG9wIHRob3VzYW5kIG9mIG1vZHVsZXMgaW4gb25lIHByb2plY3QuCiogKipDb3Jkb3ZhIHByb2plY3QgZ2VuZXJhdGlvbioqLiBTaW1wbHkgYWRkIGBjb25maWcueG1sYCB0byB0aGUgbW9kdWxlLCBhbmQgYC1jb3Jkb3ZhYCBkaXIgd2l0aCB0aGUgY29yZG92YSBwcm9qZWN0IHdpbGwgYmUgZ2VuZXJhdGVkLgoKIyBDbG91ZCB1c2FnZQoKWyFbR2l0cG9kIE9ubGluZSBEZXYgV29ya3NwYWNlXShodHRwczovL2ltZy5zaGllbGRzLmlvL2JhZGdlL0dpdHBvZC1PbmxpbmUtLURldi0tV29ya3NwYWNlLWJsdWU/bG9nbz1naXRwb2QpXShodHRwczovL2dpdHBvZC5pby8jaHR0cHM6Ly9naXRodWIuY29tL2h5b28tcnUvbWFtKQoKCiMgSW5zdGFsbGF0aW9uCgoqKkNoZWNrb3V0IHRoaXMgcmVwbyAofjJzKToqKgoKYGBgc2gKZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9oeW9vLXJ1L21hbS5naXQgLi9tYW0gJiYgY2QgbWFtCmBgYAoKIyMgTGludXggbGltaXRzCgpgJG1vbF9idWlsZGAgYW5kIHR5cGVzY3JpcHQgdXNlcyBpbm90aWZ5IGJ5IGRlZmF1bHQgb24gTGludXggdG8gbW9uaXRvciBkaXJlY3RvcmllcyBmb3IgY2hhbmdlcy4gSXQncyBub3QgdW5jb21tb24gdG8gZW5jb3VudGVyIGEgc3lzdGVtIGxpbWl0IG9uIHRoZSBudW1iZXIgb2YgZmlsZXMgeW91IGNhbiBtb25pdG9yLgoKL2V0Yy9zeXNjdGwuZC8yMC13YXRjaC5jb25mCgpgYGAKZnMuaW5vdGlmeS5tYXhfdXNlcl93YXRjaGVzPTUyNDI4OApmcy5maWxlLW1heD01MDAwMDAKYGBgCgojIERldmVsb3BtZW50IHNlcnZlcgoKKipJbnN0YWxsIG5vZGUgbW9kdWxlcyBhbmQgYnVpbGQgZGV2IHNlcnZlciBmcm9tIGFjdHVhbCBzb3VyY2VzKioKCmBgYHNoCm5wbSBpbnN0YWxsCmBgYAoKKipTdGFydCBkZXYgc2VydmVyOioqCgpgYGBzaApucG0gc3RhcnQKYGBgCgoqKk9wZW4gc2ltcGxlICRtb2wgYmFzZWQgVG9Eb01WQyBhcHBsaWNhdGlvbjoqKgoKYGBgc2gKc3RhcnQgaHR0cDovL2xvY2FsaG9zdDo5MDgwL2h5b28vdG9kb212Yy8tL3Rlc3QuaHRtbApgYGAKCiMgTWFudWFsIGJ1aWxkCgoqIEV4ZWN1dGUgYG5wbSBzdGFydCBoeW9vL3RvZG9tdmNgIHRvIGJ1aWxkIHN0YW5kYWxvbmUgVG9Eb01WQyBhcHBsaWNhdGlvbiBhdCBgaHlvby90b2RvbXZjLy1gLgoqIEV4ZWN1dGUgYG5wbSBzdGFydCBtb2wvcmVnZXhwYCB0byBidWlsZCBzdGFuZGFsb25lICRtb2xfcmVnZXhwIGxpYnJhcnkgYXQgYG1vbC9yZWdleHAvLWAuCgojIE5QTSBJbnRlZ3JhdGlvbgoKIyMgUHVibGlzaCB0byBOUE0KCmBgYHNoCm5wbSBzdGFydCBtb2wvcmVnZXhwCm5wbSBwdWJsaXNoIG1vbC9yZWdleHAvLQpgYGAKCiMjIFVzYWdlIGZyb20gTlBNCgojIyMgSW1wb3J0IHRvIENKUwoKYGBganMKY29uc3QgeyAkbW9sX3JlZ2V4cDogUkUgfSA9IHJlcXVpcmUoICdtb2xfcmVnZXhwJyApCmBgYAoKIyMjIEltcG9ydCB0byBFU00KCmBgYGpzCmltcG9ydCB7ICRtb2xfcmVnZXhwIGFzIFJFIH0gZnJvbSAnbW9sX3JlZ2V4cCcKYGBgCgojIyMgTm9kZUpTIGRlcGVuZGVuY2llcwoKVXNpbmcgYCRub2RlYCBuYW1lc3BhY2UgeW91IGNhbiBhdXRvLWluc3RhbGwgYW5kIGR5bmFtaWNhbGx5IGxhenkgbG9hZCBhbnkgTlBNIHBhY2thZ2VzOgoKYGBganMKY29uc3QgaXNPZGQgPSAkbm9kZVsnaXMtb2RkJ10oICcxMjMnICkKYGBgCgojIyMgQnVuZGxpbmcgTlBNIGRlcGVuZGVuY2llcwoKSWYgcG9zc2libGUsIHRyeSB0byB1c2UgdGhlIGV4aXN0aW5nIE1BTSBlY29zeXN0ZW0gaW1wbGVtZW50YXRpb25zLiBZb3UgY2FuIGJ1bmRsZSB0aGUgTlBNIHBhY2thZ2VzIGFzIHdlbGwgdmlhIGFuIGFkYXB0ZXIgbGlrZToKCmBgYHRzCi8vIGxpYi9yYW1kYS9yYW1kYS50cwpuYW1lc3BhY2UgJCB7CglleHBvcnQgbGV0ICRsaWJfcmFtZGEgPSByZXF1aXJlKCdyYW1kYS9zcmMvaW5kZXguanMnKSBhcyB0eXBlb2YgaW1wb3J0KCdyYW1kYScpCn0KYGBgCgojIEN1c3RvbSBwYWNrYWdlCgpbVmlkZW8gdHV0b3JpYWxdKGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9UHlLM2lmNXNnTjApCgoxLiBDcmVhdGUgZGlyIGZvciB5b3VyIG5hbWVzcGFjZTogYG15YCBpbiBleGFtcGxlLgoyLiBDcmVhdGUgZGlyIGZvciB5b3VyIG1vZHVsZTogYG15L2FsZXJ0YCBpbiBleGFtcGxlLgozLiBDcmVhdGUgbW9kdWxlIHNvdXJjZSBmaWxlOiBgbXkvYWxlcnQvYWxlcnQudHNgIHdpdGggY29udGVudCBgZnVuY3Rpb24gJG15X2FsZXJ0KCBtc2cgOiBzdHJpbmcgKSB7IGFsZXJ0KCBtc2cgKSB9YCBpbiBleGFtcGxlLgo0LiBDcmVhdGUgZGlyIGZvciB5b3VyIGFwcGxpY2F0aW9uIG1vZHVsZTogYG15L2FwcGAgaW4gZXhhbXBsZS4KNS4gQ3JlYXRlIGFwcGxpY2F0aW9uIHNvdXJjZSBmaWxlOiBgbXkvYXBwL2FwcC50c2Agd2l0aCBjb250ZW50IGAkbXlfYWxlcnQoICdIZWxsbywgV29ybGQhJyApYCBpbiBleGFtcGxlLgo2LiBDcmVhdGUgYXBwbGljYXRpb24gd2ViIGVudHJ5IHBvaW50OiBgbXkvYXBwL2luZGV4Lmh0bWxgIHdpdGggY29udGVudCBgPHNjcmlwdCBzcmM9Ii0vd2ViLmpzIj48L3NjcmlwdD5gIGluIGV4YW1wbGUuCjcuIFN0YXJ0IGRldmVsb3BtZW50IHNlcnZlcjogYG5wbSBzdGFydGAKOC4gT3BlbiB5b3VyIGFwcGxpY2F0aW9uOiBgaHR0cDovL2xvY2FsaG9zdDo5MDgwL215L2FwcC8tL3Rlc3QuaHRtbGAgaW4gZXhhbXBsZS4KCiMgTUFNIGJhc2VkIHByb2plY3RzCgotIFNlZSBodHRwczovL2dpdGh1Yi5jb20vaHlvby1ydT9xPWh5b28ucnUKCg=="

;
"use strict"

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	else for (var i = decorators.length - 1; i >= 0; i--) if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var $ = ( typeof module === 'object' ) ? ( module['export'+'s'] = globalThis ) : globalThis
$.$$ = $

;
var $node = $node || {} ; $node[ "/mol/readme.md" ] = ""

;
var $node = $node || {} ; $node[ "/mol/CONTRIBUTING.md" ] = "Q29tbXVuaWNhdGUgd2l0aCB1cyB0aHJvdWdoOgoKLSBodHRwczovL2dpdGh1Yi5jb20vZWlnZW5tZXRob2QvbW9sL2lzc3VlcwotIGh0dHBzOi8vdC5tZS9tYW1fbW9sCi0gbWFpbHRvOm1vbEBoeW9vLnJ1CgpVc2UgUnVzc2lhbiBvciBFbmdsaXNoLgoKV2Ugd2lsbCBoZWxwIHlvdSB3aXRoIGFsbCBxdWVzdGlvbnMuCg=="

;
var $node = $node || {} ; $node[ "/mol/CODE_OF_CONDUCT.md" ] = "QmUgc21hcnQgYW5kIGZyaWVuZGx5LiBUaGF0J3MgYWxsIDotKQo="

;
var $node = $node || {} ; $node[ "/mol/view/readme.md" ] = ""

;
var $node = $node || {} ; $node[ "/mol/ambient/readme.md" ] = "IyAkbW9sX2FtYmllbnQKClBvcHVsYXRlcyBhbWJpZW50IGNvbnRleHQuIEJ5IGRlZmF1bHQgYW1iaWVudCBjb250ZXh0IGlzIGAkYCBuYW1lc3BhY2Ugd2hpY2ggaW5oZXJpdHMgZmllbGRzIGZyb20gZ2xvYmFsIGNvbnRleHQuCgpBbGwgZ2xvYmFsbHkgZGVmaW5lZCBlbnRpdGllcyBhcmUgYWNjZXNzaWJsZSBmcm9tIGNvbnRleHQ6CgpgYGB0eXBlc2NyaXB0ClByb21pc2UgPT09ICQuUHJvbWlzZSA9PT0gJC4kJC5Qcm9taXNlCmBgYAoKQW1iaWVudCBjb250ZXh0IGNhbiBiZSBvdmVycmlkZGVuIGluIGluc3RhbmNlOgoKYGBgdHlwZXNjcmlwdApjbGFzcyBGb28gZXh0ZW5kcyAkbW9sX29iamVjdDIgewoJZ2V0IGxvZ2dlcigpIHsKCQlyZXR1cm4gdGhpcy4kLmNvbnNvbGUgLy8gdXNlIGNvbnNvbGUgZnJvbSBhbWJpZW50IGNvbnRleHQKCX0KfQoKY29uc3QgY29udGV4dF9tb2NrID0gJC4kbW9sX2FtYmllbnQoeyAvLyBhbWJpZW50IGNvbnRleHQgb3ZlcnJpZGUKCWNvbnNvbGUgOiB7IC8vIGNvbnNvbGUgb3ZlcnJpZGUKCQlsb2cgOiAoKT0+IHVuZGVmaW5lZCAvLyBub29wIGNvbnNvbGUubG9nCgl9Cn0pCgpjb25zdCBmb28gPSBGb28uY3JlYXRlKCBmb28gPT4gZm9vLiQgPSBjb250ZXh0X21vY2sgKQoKLy8gYW5vdGhlciB3YXkKY29uc3QgZm9vMiA9IG5ldyBGb28KZm9vMi4kID0gY29udGV4dF9tb2NrCmBgYAoKQ29udGV4dHMgbWF5IGJlIGluaGVyaXRlZCB0aHJvdWdoIG93bmluZyB0cmVlOgoKYGBgCmNsYXNzIEJhciBleHRlbmRzICRtb2xfb2JqZWN0MiB7CgkKCUAgJG1vbF9tZW0KCUZvbyAoKSB7IHJldHVybiBuZXcgRm9vIH0KCn0KCmNvbnN0IGJhciA9IG5ldyBCYXIKYmFyLiQgPSBjb250ZXh0X21vY2sKYmFyLkZvbygpLmxvZ2dlci5sb2coICdub29wJyApCmBgYAoKR2xvYmFsIGZ1bmN0aW9ucyBpbmhlcml0cyBjb250ZXh0IGF1dG9tYXRpY2FsbHk6CgpgYGB0eXBlc2NyaXB0CmZ1bmN0aW9uICRteV9oZWxsbyggdGhpcyA6ICQgLCBuYW1lIDogc3RyaW5nICkgewoJdGhpcy5jb25zb2xlLmxvZyggYEhlbGxvLCAkeyBuYW1lIH0hYCApCn0KCi8vIGNhbGwgaW4gY29udGV4dAokLiRteV9oZWxsbyggJ0ppbicgKQpgYGAK"

;
"use strict";
var $;
(function ($) {
    $.$mol_ambient_ref = Symbol('$mol_ambient_ref');
    function $mol_ambient(overrides) {
        return Object.setPrototypeOf(overrides, this || $);
    }
    $.$mol_ambient = $mol_ambient;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    const instances = new WeakSet();
    function $mol_delegate(proto, target) {
        const proxy = new Proxy(proto, {
            get: (_, field) => {
                const obj = target();
                let val = Reflect.get(obj, field);
                if (typeof val === 'function') {
                    val = val.bind(obj);
                }
                return val;
            },
            has: (_, field) => Reflect.has(target(), field),
            set: (_, field, value) => Reflect.set(target(), field, value),
            getOwnPropertyDescriptor: (_, field) => Reflect.getOwnPropertyDescriptor(target(), field),
            ownKeys: () => Reflect.ownKeys(target()),
            getPrototypeOf: () => Reflect.getPrototypeOf(target()),
            setPrototypeOf: (_, donor) => Reflect.setPrototypeOf(target(), donor),
            isExtensible: () => Reflect.isExtensible(target()),
            preventExtensions: () => Reflect.preventExtensions(target()),
            apply: (_, self, args) => Reflect.apply(target(), self, args),
            construct: (_, args, retarget) => Reflect.construct(target(), args, retarget),
            defineProperty: (_, field, descr) => Reflect.defineProperty(target(), field, descr),
            deleteProperty: (_, field) => Reflect.deleteProperty(target(), field),
        });
        instances.add(proxy);
        return proxy;
    }
    $.$mol_delegate = $mol_delegate;
    Reflect.defineProperty($mol_delegate, Symbol.hasInstance, {
        value: (obj) => instances.has(obj),
    });
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $.$mol_owning_map = new WeakMap();
    function $mol_owning_allow(having) {
        try {
            if (!having)
                return false;
            if (typeof having !== 'object' && typeof having !== 'function')
                return false;
            if (having instanceof $mol_delegate)
                return false;
            if (typeof having['destructor'] !== 'function')
                return false;
            return true;
        }
        catch {
            return false;
        }
    }
    $.$mol_owning_allow = $mol_owning_allow;
    function $mol_owning_get(having, Owner) {
        if (!$mol_owning_allow(having))
            return null;
        while (true) {
            const owner = $.$mol_owning_map.get(having);
            if (!owner)
                return owner;
            if (!Owner)
                return owner;
            if (owner instanceof Owner)
                return owner;
            having = owner;
        }
    }
    $.$mol_owning_get = $mol_owning_get;
    function $mol_owning_check(owner, having) {
        if (!$mol_owning_allow(having))
            return false;
        if ($.$mol_owning_map.get(having) !== owner)
            return false;
        return true;
    }
    $.$mol_owning_check = $mol_owning_check;
    function $mol_owning_catch(owner, having) {
        if (!$mol_owning_allow(having))
            return false;
        if ($.$mol_owning_map.get(having))
            return false;
        $.$mol_owning_map.set(having, owner);
        return true;
    }
    $.$mol_owning_catch = $mol_owning_catch;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_fail(error) {
        throw error;
    }
    $.$mol_fail = $mol_fail;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_fail_hidden(error) {
        throw error;
    }
    $.$mol_fail_hidden = $mol_fail_hidden;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/type/README.md" ] = "IyAkbW9sX3R5cGUKCkNvbGxlY3Rpb24gb2YgVHlwZVNjcmlwdCBtZXRhIHR5cGVzIGZvciBjb21wbGV4IGxvZ2ljLgoKIVtUeXBlIEFzc2VydHNdKGh0dHBzOi8vaS5pbWd1ci5jb20vQ05JNUt2WC5wbmcpCgojIE1BTSBVc2FnZQoKYGBgdHlwZXNjcmlwdAp0eXBlIGZpcnN0X29mX3R1cGxlID0gJG1vbF90eXBlX2Fzc2VydDwKCSRtb2xfdHlwZV9oZWFkPFsgMSAsIDIgLCAzIF0+ICwKCTEKPgpgYGAKCiMgTlBNIHVzYWdlCgpgYGBzaApucG0gaW5zdGFsbCBtb2xfdHlwZV9hbGwKYGBgCgpgYGB0eXBlc2NyaXB0CmltcG9ydCB7CgkkbW9sX3R5cGVfYXNzZXJ0IGFzIEFzc2VydCAsCgkkbW9sX3R5cGVfaGVhZCBhcyBIZWFkICwKfSBmcm9tICdtb2xfdHlwZV9hbGwnCgp0eXBlIGZpcnN0X29mX3R1cGxlID0gQXNzZXJ0PAoJSGVhZDxbIDEgLCAyICwgMyBdPiAsCgkxCj4KYGBgCgpbIVtFZGl0ICRtb2xfdHlwZSBleGFtcGxlXShodHRwczovL2NvZGVzYW5kYm94LmlvL3N0YXRpYy9pbWcvcGxheS1jb2Rlc2FuZGJveC5zdmcpXShodHRwczovL2NvZGVzYW5kYm94LmlvL3MvbW9sdHlwZS1leGFtcGxlLTFlYnhwKQoKIyBTaW1pbGFyIFByb2plY3RzCgotIFtgcGlvdHJ3aXRlay91dGlsaXR5LXR5cGVzYF0oaHR0cHM6Ly9naXRodWIuY29tL3Bpb3Ryd2l0ZWsvdXRpbGl0eS10eXBlcykgLSBDb2xsZWN0aW9uIG9mIHV0aWxpdHkgdHlwZXMsIGNvbXBsZW1lbnRpbmcgVHlwZVNjcmlwdCBidWlsdC1pbiBtYXBwZWQgdHlwZXMgYW5kIGFsaWFzZXMgKHRoaW5rICJsb2Rhc2giIGZvciBzdGF0aWMgdHlwZXMpLgotIFtgcGlyaXgtZ2gvdHMtdG9vbGJlbHRgXShodHRwczovL2dpdGh1Yi5jb20vcGlyaXgtZ2gvdHMtdG9vbGJlbHQpIC0gQWxsIHRoZSB0eXBlcyB5b3UgbmVlZCBmb3IgVHlwZVNjcmlwdC4KLSBbYGtzeG5vZGVtb2R1bGVzL3R5cGVzY3JpcHQtdHVwbGVgXShodHRwczovL2dpdGh1Yi5jb20va3N4bm9kZW1vZHVsZXMvdHlwZXNjcmlwdC10dXBsZSkgLSBHZW5lcmljcyB0byB3b3JrIHdpdGggdHVwbGVzIGluIFR5cGVTY3JpcHQgCg=="

;
"use strict";

;
"use strict";
var $;
(function ($) {
    const named = new WeakSet();
    function $mol_func_name(func) {
        let name = func.name;
        if (name?.length > 1)
            return name;
        if (named.has(func))
            return name;
        for (let key in this) {
            try {
                if (this[key] !== func)
                    continue;
                name = key;
                Object.defineProperty(func, 'name', { value: name });
                break;
            }
            catch { }
        }
        named.add(func);
        return name;
    }
    $.$mol_func_name = $mol_func_name;
    function $mol_func_name_from(target, source) {
        Object.defineProperty(target, 'name', { value: source.name });
        return target;
    }
    $.$mol_func_name_from = $mol_func_name_from;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_object2 {
        static $ = $;
        [Symbol.toStringTag];
        [$mol_ambient_ref] = null;
        get $() {
            if (this[$mol_ambient_ref])
                return this[$mol_ambient_ref];
            const owner = $mol_owning_get(this);
            return this[$mol_ambient_ref] = owner?.$ || $mol_object2.$;
        }
        set $(next) {
            if (this[$mol_ambient_ref])
                $mol_fail_hidden(new Error('Context already defined'));
            this[$mol_ambient_ref] = next;
        }
        static create(init) {
            const obj = new this;
            if (init)
                init(obj);
            return obj;
        }
        static [Symbol.toPrimitive]() {
            return this.toString();
        }
        static toString() {
            return this[Symbol.toStringTag] || this.$.$mol_func_name(this);
        }
        static toJSON() {
            return this.toString();
        }
        destructor() { }
        static destructor() { }
        toString() {
            return this[Symbol.toStringTag] || this.constructor.name + '<>';
        }
    }
    $.$mol_object2 = $mol_object2;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($_1) {
    let $$;
    (function ($$) {
        let $;
    })($$ = $_1.$$ || ($_1.$$ = {}));
    $_1.$mol_object_field = Symbol('$mol_object_field');
    class $mol_object extends $mol_object2 {
        static make(config) {
            return super.create(obj => {
                for (let key in config)
                    obj[key] = config[key];
            });
        }
    }
    $_1.$mol_object = $mol_object;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/object/readme.md" ] = "IyAkbW9sX29iamVjdAoKVGhlIGJhc2UgY2xhc3MgZm9yIGxvbmcgbGl2aW5nIG9iamVjdHMuIEV2ZXJ5IHN1Y2ggb2JqZWN0IGhhcyBhbiB1bmlxdWUgdXNlciBmcmllbmRseSBpZCBsaWtlIGAkbXlfYXBwLnJvb3QoMCkuTGlzdCgpLlRhc2soIjEyMyIpYC4gVGhpcyBpZCBpcyBhbHNvIGEgc2NyaXB0IHdpdGggd2hpY2ggd2UgY2FuIGdldCBhIGxpbmsgdG8gYW4gb2JqZWN0IGZyb20gdGhlIGJyb3dzZXIgY29uc29sZS4KVGhpcyBpcyB2ZXJ5IGhhbmR5IGZvciBkZWJ1Z2dpbmcuIFRvIGhhdmUgYSBjb3JyZWN0IGlkZW50aWZpZXJzLCBpdCdzIHJlY29tbWVuZGVkIHRvIGNyZWF0ZSBhbiBvYmplY3QgdGhyb3VnaCBhIGZhY3Rvcnkgd3JhcHBlZCBieSBkZWNvcmF0b3IgWyRtb2xfbWVtXSguLi9tZW0pIGF0ICJvd25zIiBvYmplY3Q6CgpgYGB0eXBlc2NyaXB0Cm5hbWVzcGFjZSAkIHsKCWV4cG9ydCBjbGFzcyAkbXlfYXBwIGV4dGVuZHMgJG1vbF92aWV3IHsKCQoJCUAgJG1vbF9tZW0KCQlMaXN0KCkgewoJCQlyZXR1cm4gbmV3ICRtb2xfbGlzdCgpCgkJfQoJCgl9Cn0KYGBgCgpUaGlzIGlkZW50aWZpZXIgaXMgdXNlZCBldmVyeXdoZXJlLCBpbiBwYXJ0aWN1bGFyIGlzIG91dHB1dHRlZCBhdXRvbWF0aWNhbGx5IHdoaWxlIFtsb2dnaW5nXSguLi9sb2cpOgoKYGBgCjEwOjE2OjQzICRteV9hcHAucm9vdCgwKS5MaXN0KCkgcHVsbAoxMDoxNjo0MyAkbXlfYXBwLnJvb3QoMCkuTGlzdCgpIHB1c2ggWyRteV9saXN0LCB1bmRlZmluZWRdCjEwOjE2OjQ0ICRteV9hcHAucm9vdCgwKS5MaXN0KCkuZG9tX3RyZWUoKSBwdWxsCjEwOjE2OjQ0ICRteV9hcHAucm9vdCgwKS5MaXN0KCkuZG9tX3RyZWUoKSBwdXNoIFtkaXYsIHVuZGVmaW5lZF0KYGBgCgpGb3Igb3V0cHV0dGluZyBvd24gbWVzc2FnZXMgaW50byBsb2csIGl0IGlzIHJlY29tbWVuZGVkIHRvIHVzZSBgbG9nYCBtZXRob2Q6CgpgYGB0eXBlc2NyaXB0Cm5hbWVzcGFjZSAkIHsKCWV4cG9ydCBjbGFzcyAkbXlfYXBwIGV4dGVuZHMgJG1vbF92aWV3IHsKCQoJCWNvbnN0cnVjdG9yKCkgewoJCQl0aGlzLmxvZyhbICdoZWxsbycgXSkgLy8gMTA6MTY6NDIgJG15X2FwcC5Sb290KDApIGhlbGxvCgkJfQoJCgl9Cn0KYGBgCg=="

;
"use strict";
var $;
(function ($) {
    let $mol_wire_cursor;
    (function ($mol_wire_cursor) {
        $mol_wire_cursor[$mol_wire_cursor["stale"] = -1] = "stale";
        $mol_wire_cursor[$mol_wire_cursor["doubt"] = -2] = "doubt";
        $mol_wire_cursor[$mol_wire_cursor["fresh"] = -3] = "fresh";
        $mol_wire_cursor[$mol_wire_cursor["final"] = -4] = "final";
    })($mol_wire_cursor = $.$mol_wire_cursor || ($.$mol_wire_cursor = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_wire_pub extends Object {
        data = [];
        static get [Symbol.species]() {
            return Array;
        }
        sub_from = 0;
        get sub_list() {
            const res = [];
            for (let i = this.sub_from; i < this.data.length; i += 2) {
                res.push(this.data[i]);
            }
            return res;
        }
        get sub_empty() {
            return this.sub_from === this.data.length;
        }
        sub_on(sub, pub_pos) {
            const pos = this.data.length;
            this.data.push(sub, pub_pos);
            return pos;
        }
        sub_off(sub_pos) {
            if (!(sub_pos < this.data.length)) {
                $mol_fail(new Error(`Wrong pos ${sub_pos}`));
            }
            const end = this.data.length - 2;
            if (sub_pos !== end) {
                this.peer_move(end, sub_pos);
            }
            this.data.length = end;
            if (end === this.sub_from)
                this.reap();
        }
        reap() { }
        promote() {
            $mol_wire_auto()?.track_next(this);
        }
        fresh() { }
        complete() { }
        get incompleted() {
            return false;
        }
        emit(quant = $mol_wire_cursor.stale) {
            for (let i = this.sub_from; i < this.data.length; i += 2) {
                ;
                this.data[i].absorb(quant);
            }
        }
        peer_move(from_pos, to_pos) {
            const peer = this.data[from_pos];
            const self_pos = this.data[from_pos + 1];
            this.data[to_pos] = peer;
            this.data[to_pos + 1] = self_pos;
            peer.peer_repos(self_pos, to_pos);
        }
        peer_repos(peer_pos, self_pos) {
            this.data[peer_pos + 1] = self_pos;
        }
    }
    $.$mol_wire_pub = $mol_wire_pub;
})($ || ($ = {}));

;
"use strict";

;
"use strict";
var $;
(function ($) {
    $.$mol_wire_auto_sub = null;
    function $mol_wire_auto(next = $.$mol_wire_auto_sub) {
        return $.$mol_wire_auto_sub = next;
    }
    $.$mol_wire_auto = $mol_wire_auto;
    $.$mol_wire_affected = [];
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/wire/README.md" ] = "IyAkbW9sX3dpcmUKCkEgcmVhY3Rpdml0eSBzeXN0ZW0uIEl0IGdpdmVzIGFiaWxpdHkgdG86CgotIE1ha2UgYW55IHN0YXRlIG9ic2VydmFibGUgdXNpbmcgb25seSAxLjVLQiBsaWIuIFskaHlvb19jcm93ZF0oaHR0cHM6Ly9naXRodWIuY29tL2h5b28tcnUvY3Jvd2QuaHlvby5ydSkgYXMgZXhhbXBsZS4KLSBBdXRvbWF0aWMgZHluYW1pYyB0cmFjayBydW50aW1lIHZhbHVlIGRlcGVuZGVuY2llcyBhbmQgb3B0aW1pemUgdGFzayBleGVjdXRpb24gb3JkZXIuCi0gTWVtb2l6ZSBjYWxjdWxhdGlvbnMgd2l0aCBhdXRvbWF0aWMgcmV2YWxpZGF0aW9uLiBZZXMsIGl0IGNvbXBsZXRlbHkgc29sdmVzIFt0aGUgZmlyc3Qgb2YgaGFyZCBwcm9ibGVtIGluIGNvbXB1dGVyIHNjaWVuY2VdKGh0dHBzOi8vd3d3Lmthcmx0b24ub3JnLzIwMTcvMTIvbmFtaW5nLXRoaW5ncy1oYXJkLykuCi0gQ29udmVydCBzeW5jIEFQSSB0byBhc3luYyBhbmQgdmljZSB2ZXJzYS4gWWVzLCBpdCdzIGEgYmxhY2sgbWFnaWMgb2YgaWRlbXBvdGVuY2UuCi0gTWFuYWdlIHJlc291cmNlcyBhdXRvbWF0aWNhbGx5IHdpdGggcHJlZGljdGFibGUgZGVjb25zdHJ1Y3Rpb24gbW9tZW50LiBZZXMsIHdlIGRvbid0IHJlbHkgb24gZ2FyYmFnZSBjb2xsZWN0b3IuCi0gRHJhbWF0aWNhbGx5IHJlZHVjZSBzb3VyY2UgY29kZSBzaXplIGFuZCBpbmNyZWFzZSByZWxpYWJpbGl0eSBieSBpbXBsZW1lbnRpbmcgcmVhY3RpdmUgYXJjaGl0ZWN0dXJlLgoKIyMgQXJ0aWNsZXMgYWJvdXQKCi0gW01haW4gQXNwZWN0cyBvZiBSZWFjdGl2aXR5XShodHRwczovL3BhZ2UuaHlvby5ydS8jIT12dXlwZ3hfdjU1YnB0KQotIFtEZXNpZ24gb2YgaWRlYWwgcmVhY3Rpdml0eSBzeXN0ZW1dKGh0dHBzOi8vcGFnZS5oeW9vLnJ1LyMhPXlqMGg0Ml9peHp2NHApCi0gW0pTIFByb3Bvc2FsOiBBdXRvIFdpcmVdKGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL25pbi1qaW4vNmI5NzY1ZmI5ZDBkNTBjMmUxZDM3Njg5MDA4ZjUzNTcpCgojIyBIaWdoIGxldmVsIEFQSQoKIyMjIERlY29yYXRvcnMKCi0gWyRtb2xfd2lyZV9zb2xvXShodHRwczovL2dpdGh1Yi5jb20vaHlvby1ydS9tYW1fbW9sL3RyZWUvbWFzdGVyL3dpcmUvc29sbykgLSByZWFjdGl2ZSBtZW1vaXppbmcgc29sbyBwcm9wZXJ0eSBkZWNvcmF0b3IKLSBbJG1vbF93aXJlX3BsZXhdKGh0dHBzOi8vZ2l0aHViLmNvbS9oeW9vLXJ1L21hbV9tb2wvdHJlZS9tYXN0ZXIvd2lyZS9wbGV4KSAtIHJlYWN0aXZlIG1lbW9pemluZyBtdWx0aXBsZXhlZCBwcm9wZXJ0eSBkZWNvcmF0b3IKLSBbJG1vbF93aXJlX2ZpZWxkXShodHRwczovL2dpdGh1Yi5jb20vaHlvby1ydS9tYW1fbW9sL3RyZWUvbWFzdGVyL3dpcmUvZmllbGQpIC0gcmVhY3RpdmUgbWVtb2l6aW5nIGZpZWxkIGRlY29yYXRvcgotIFskbW9sX3dpcmVfbWV0aG9kXShodHRwczovL2dpdGh1Yi5jb20vaHlvby1ydS9tYW1fbW9sL3RyZWUvbWFzdGVyL3dpcmUvbWV0aG9kKSAtIG1ldGhvZCBkZWNvcmF0b3Igd2hpY2ggcnVuIGluc2lkZSBmaWJlcgoKIyMjIFByb3hpZXMKCi0gWyRtb2xfd2lyZV9zeW5jXShodHRwczovL2dpdGh1Yi5jb20vaHlvby1ydS9tYW1fbW9sL3RyZWUvbWFzdGVyL3dpcmUvc3luYykgLSBjb252ZXJ0cyBhc3luYyBBUEkgdG8gc3luYwotIFskbW9sX3dpcmVfYXN5bmNdKGh0dHBzOi8vZ2l0aHViLmNvbS9oeW9vLXJ1L21hbV9tb2wvdHJlZS9tYXN0ZXIvd2lyZS9hc3luYykgLSBjb252ZXJ0cyBzeW5jIEFQSSB0byBhc3luYwoKIyMjIEZ1bmN0aW9ucwoKLSBbJG1vbF93aXJlX2Vhc2luZ10oaHR0cHM6Ly9naXRodWIuY29tL2h5b28tcnUvbWFtX21vbC90cmVlL21hc3Rlci93aXJlL2Vhc2luZykgLSB0cmFuc2l0aW9uIGF0b20gdmFsdWUKLSBbJG1vbF93aXJlX3Byb2JlXShodHRwczovL2dpdGh1Yi5jb20vaHlvby1ydS9tYW1fbW9sL3RyZWUvbWFzdGVyL3dpcmUvcHJvYmUpIC0gcnVuIGNvZGUgd2l0aG91dCBzdGF0ZSBjaGFuZ2VzCi0gWyRtb2xfd2lyZV9zb2xpZF0oaHR0cHM6Ly9naXRodWIuY29tL2h5b28tcnUvbWFtX21vbC90cmVlL21hc3Rlci93aXJlL3NvbGlkKSAtIG1ha2UgY3VycmVudCBmaWJlciBpbW1vcnRhbAoKIyMgU3RydWN0dXJlcwoKLSBbJG1vbF93aXJlX3NldF0oaHR0cHM6Ly9naXRodWIuY29tL2h5b28tcnUvbWFtX21vbC90cmVlL21hc3Rlci93aXJlL3NldCkgLSByZWFjdGl2ZSBTZXQKLSBbJG1vbF93aXJlX2RpY3RdKGh0dHBzOi8vZ2l0aHViLmNvbS9oeW9vLXJ1L21hbV9tb2wvdHJlZS9tYXN0ZXIvd2lyZS9kaWN0KSAtIHJlYWN0aXZlIERpY3Rpb25hcnkKLSBbJG1vbF93aXJlX2RvbV0oaHR0cHM6Ly9naXRodWIuY29tL2h5b28tcnUvbWFtX21vbC90cmVlL21hc3Rlci93aXJlL2RvbSkgLSByZWFjdGl2ZSBET00KCgojIyBMb3cgbGV2ZWwgQVBJCgojIyMgRGVidWcKCi0gWyRtb2xfd2lyZV9sb2ddKGh0dHBzOi8vZ2l0aHViLmNvbS9oeW9vLXJ1L21hbV9tb2wvdHJlZS9tYXN0ZXIvd2lyZS9sb2cpIC0gc3RhdGUgY2hhbmdlcyBsb2dnZXIKCiMjIyBQdWIvU3ViCgotIFskbW9sX3dpcmVfcHViXShodHRwczovL2dpdGh1Yi5jb20vaHlvby1ydS9tYW1fbW9sL3RyZWUvbWFzdGVyL3dpcmUvcHViKSAtIHRpbnkgcHVibGlzaGVyCi0gWyRtb2xfd2lyZV9zdWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9oeW9vLXJ1L21hbV9tb2wvdHJlZS9tYXN0ZXIvd2lyZS9zdWIpIC0gZ2VuZXJpYyBzdWJzY3JpYmVyIGludGVyZmFjZQotIFskbW9sX3dpcmVfcHViX3N1Yl0oaHR0cHM6Ly9naXRodWIuY29tL2h5b28tcnUvbWFtX21vbC90cmVlL21hc3Rlci93aXJlL3B1Yi9zdWIpIC0gc3Vic2NyaWJlciB3aXRoIHJldHJhbnNsYXRpb24gc3VwcG9ydAotIGAkbW9sX3dpcmVfYXV0b2AgLSBjdXJyZW50IHRyYWNraW5nIHN1YnNjcmliZXIKCiMjIyBSZWFjdGl2aXR5CgotIFskbW9sX3dpcmVfZmliZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9oeW9vLXJ1L21hbV9tb2wvdHJlZS9tYXN0ZXIvd2lyZS9maWJlcikgLSBhYnN0cmFjdCBwYXVzYWJsZSB0YXNrIHdpdGggKGEpc3luYyBBUEkKLSBbJG1vbF93aXJlX3Rhc2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9oeW9vLXJ1L21hbV9tb2wvdHJlZS9tYXN0ZXIvd2lyZS90YXNrKSAtIG9uZS1zaG90IGZpYmVyCi0gWyRtb2xfd2lyZV9hdG9tXShodHRwczovL2dpdGh1Yi5jb20vaHlvby1ydS9tYW1fbW9sL3RyZWUvbWFzdGVyL3dpcmUvYXRvbSkgLSByZXBlYXRhYmxlIGZpYmVyCi0gWyRtb2xfd2lyZV9jdXJzb3JdKGh0dHBzOi8vZ2l0aHViLmNvbS9oeW9vLXJ1L21hbV9tb2wvdHJlZS9tYXN0ZXIvd2lyZS9jdXJzb3IpIC0gc3Vic2NyaXB0aW9uIHN0YXR1c2VzCgojIyBOUE0gQnVuZGxlcwoKIyMjIFttb2xfd2lyZV9saWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9oeW9vLXJ1L21hbV9tb2wvdHJlZS9tYXN0ZXIvd2lyZS9saWIpCgpMaWIgd2l0aCBhbGwgcHJvZHVjdGlvbiByZWFkeSAkbW9sX3dpcmUgbW9kdWxlcy4KCmBgYHNoCm5wbSBpbnN0YWxsIG1vbF93aXJlX2xpYgpgYGAKCjdLQiBbIVtdKGh0dHBzOi8vYmFkZ2VuLm5ldC9idW5kbGVwaG9iaWEvbWluemlwL21vbF93aXJlX2xpYildKGh0dHBzOi8vYnVuZGxlcGhvYmlhLmNvbS9wYWNrYWdlL21vbF93aXJlX2xpYikKCiMjIyBUeXBlU2NyaXB0IGV4YW1wbGU6CgpgYGB0cwppbXBvcnQgewoJJG1vbF93aXJlX3NvbG8gYXMgc29sbywKCSRtb2xfd2lyZV9wbGV4IGFzIHBsZXgsCgkkbW9sX3dpcmVfbWV0aG9kIGFzIHRhc2ssCn0gZnJvbSAnbW9sX3dpcmVfbGliJwoKY2xhc3MgVXNlciB7CglAc29sbyBhZ2UoIG5leHQgPSAwICkgeyByZXR1cm4gbmV4dCB9CglAcGxleCBmaW5nZXJfZXhpc3RzKCBpZDogc3RyaW5nLCBuZXh0ID0gdHJ1ZSApIHsgcmV0dXJuIG5leHQgfQoJQHRhc2sgZmluZ2VyX2N1dCggaWQ6IHN0cmluZyApIHsgdGhpcy5maW5nZXJfZXhpc3RzKCBpZCwgZmFsc2UgKSB9Cn0KYGBgCgojIyMgSmF2YVNjcmlwdCBleGFtcGxlOgoKYGBganMKY29uc3QgJCA9IHJlcXVpcmUoICdtb2xfd2lyZV9saWInICkKCmNsYXNzIFVzZXIgewoJYWdlKCBuZXh0ID0gMCApIHsgcmV0dXJuIG5leHQgfQoJZmluZ2VyX2V4aXN0cyggaWQ6IHN0cmluZywgbmV4dCA9IHRydWUgKSB7IHJldHVybiBuZXh0IH0KCWZpbmdlcl9jdXQoIGlkOiBzdHJpbmcgKSB7IHRoaXMuZmluZ2VyX2V4aXN0cyggaWQsIGZhbHNlICkgfQp9CgokLiRtb2xfd2lyZV9zb2xvKCBVc2VyLnByb3RvdHlwZSwgJ2FnZScgKQokLiRtb2xfd2lyZV9wbGV4KCBVc2VyLnByb3RvdHlwZSwgJ2Zpbmdlcl9leGlzdHMnICkKJC4kbW9sX3dpcmVfdGFzayggVXNlci5wcm90b3R5cGUsICdmaW5nZXJfY3V0JyApCmBgYAoKIyMjIFttb2xfd2lyZV9wdWJdKGh0dHBzOi8vZ2l0aHViLmNvbS9oeW9vLXJ1L21hbV9tb2wvdHJlZS9tYXN0ZXIvd2lyZS9wdWIpCgpUaW55IGxpYiB0byBtYWtpbmcgYW55IHN0YXRlIG9ic2VydmFiZSBmb3Igb3RoZXIgJG1vbF93aXJlIGJhc2VkIGxpYnMuCgpgYGBzaApucG0gaW5zdGFsbCBtb2xfd2lyZV9wdWIKYGBgCgoxLjVLQiBbIVtdKGh0dHBzOi8vYmFkZ2VuLm5ldC9idW5kbGVwaG9iaWEvbWluemlwL21vbF93aXJlX3B1YildKGh0dHBzOi8vYnVuZGxlcGhvYmlhLmNvbS9wYWNrYWdlL21vbF93aXJlX3B1YikKCmBgYHRzCmltcG9ydCB7ICRtb2xfd2lyZV9wdWIgYXMgUHVibGlzaGVyIH0gZnJvbSAnbW9sX3dpcmVfcHViJwoKbGV0IGNvdW50ZXIgPSAwCmNvbnN0IHB1YiA9IG5ldyBQdWJsaXNoZXIKCmV4cG9ydCBmdW5jdGlvbiBzdGF0ZSgpIHsKCXB1Yi5wcm9tb3RlKCkKCXJldHVybiBjb3VudGVyCn0KCmV4cG9ydCBmdW5jdGlvbiBpbmNyZWFzZSgpIHsKCSsrIGNvdW50ZXIKCXB1Yi5lbWl0KCkKfQoKZXhwb3J0IGZ1bmN0aW9uIGRlY3JlYXNlKCkgewoJLS0gY291bnRlcgoJcHViLmVtaXQoKQp9CmBgYAoKIyMjIFttb2xfd2lyZV9kb21dKGh0dHBzOi8vZ2l0aHViLmNvbS9oeW9vLXJ1L21hbV9tb2wvdHJlZS9tYXN0ZXIvd2lyZS9kb20pCgpMaWIgdG8gbWFrZSByZWFsIERPTSByZWFjdGl2ZS4KCmBgYHNoCm5wbSBpbnN0YWxsIG1vbF93aXJlX2RvbW0KYGBgCgo3LjVLQiBbIVtdKGh0dHBzOi8vYmFkZ2VuLm5ldC9idW5kbGVwaG9iaWEvbWluemlwL21vbF93aXJlX2RvbSldKGh0dHBzOi8vYnVuZGxlcGhvYmlhLmNvbS9wYWNrYWdlL21vbF93aXJlX2RvbSkKCmBgYHRzCmltcG9ydCB7ICRtb2xfd2lyZV9kb20gYXMgcmVhY3RpdmF0ZSB9IGZyb20gJ21vbF93aXJlX2RvbScKCnJlYWN0aXZhdGUoIGRvY3VtZW50LmJvZHkgKQpgYGAKCiMjIENsb3NlIGFsdGVybmF0aXZlcwoKLSBbTW9iWF0oaHR0cHM6Ly9tb2J4LmpzLm9yZy8pCi0gW0NlbGxYXShodHRwczovL2dpdGh1Yi5jb20vUmlpbS9jZWxseCkKCiMjIyBbQXJjaGl0ZWN0dXJhbCBjb21wYXJpc29uXShodHRwczovL2dpdGh1Yi5jb20vbmluLWppbi9zbGlkZXMvdHJlZS9tYXN0ZXIvcmVhY3Rpdml0eSNyZWFjdGl2ZS1saWJyYXJpZXMpCgoKIyMgQ29yZSBjb25jZXB0cwoKSW4gYCRtb2xfd2lyZWAgd2UgYnVpbGQgcmVhY3RpdmUgc3lzdGVtcyB1c2luZyBjbGFzc2VzIHRoYXQgaGF2ZSByZWFjdGl2ZSBwcm9wZXJ0aWVzLiBXZSByZXByZXNlbnQgYSByZWFjdGl2ZSBwcm9wZXJ0eSB1c2luZyBhIGNsYXNzIG1ldGhvZCB3aXRoIGFuIGFwcHJvcHJpYXRlIGRlY29yYXRvci4KCiMjIyBDaGFubmVscwoKV2UgZGVmaW5lIHByb3BlcnRpZXMgaW4gYWNjb3JkYW5jZSB0byB0aGUgcGF0dGVybiBvZiAqKmNoYW5uZWxzKiouIEEgY2hhbm5lbCBiZWhhdmVzIGxpa2UgYSAqKmdldHRlcioqIHdoZW4gY2FsbGVkIHdpdGhvdXQgYXJndW1lbnRzIGFuZCBhcyBhICoqZ2V0dGVyLXNldHRlcioqIG90aGVyd2lzZS4gVGhpcyBhcHByb2FjaCBwcm92ZXMgdG8gYmUgbW9yZSBmbGV4aWJsZSB0aGFuIFtvdGhlcnNdKGh0dHBzOi8vbW9sLmh5b28ucnUvIyFzZWN0aW9uPWRvY3MvPXV1dWVld191NjNrbzgpLgoKSGVyZSdzIGFuIGV4YW1wbGUgb2YgYSBzaW1wbGUgY2hhbm5lbDoKCmBgYHRzCmxldCBfdGl0bGUgPSAnJwpjb25zdCB0aXRsZSA9ICggdGV4dCA9IF90aXRsZSApPT4gX3RpdGxlID0gdGV4dAoKdGl0bGUoKSAgICAgICAgICAgICAgICAgIC8vIGdldHRlciwgcmV0dXJucyAnJwp0aXRsZSggJ0J1eSBzb21lIG1pbGsnICkgLy8gZ2V0dGVyLXNldHRlciwgc2V0cyBhbmQgcmV0dXJucyAnQnV5IHNvbWUgbWlsaycKdGl0bGUoKSAgICAgICAgICAgICAgICAgIC8vIGdldHRlciwgcmV0dXJucyAnQnV5IHNvbWUgbWlsaycKYGBgCgpZb3UgY2FuIG5vdGljZSB0aGF0IHRoaXMgaXMgc2ltaWxhciB0byBzb21lIFtKUXVlcnkgbWV0aG9kc10oaHR0cHM6Ly9hcGkuanF1ZXJ5LmNvbS92YWwvKS4KCkluc3RlYWQgb2YgYSBwbGFpbiBmdW5jdGlvbiBhbmQgYSB2YXJpYWJsZSBgJG1vbF93aXJlYCB1c2VzIGNsYXNzIG1ldGhvZHMgd2l0aCBhbiBhcHByb3ByaWF0ZSBkZWNvcmF0b3I6CgpgYGB0cwppbXBvcnQgeyAkbW9sX3dpcmVfc29sbyBhcyBzb2xvIH0gZnJvbSAnbW9sX3dpcmVfbGliJwoKY2xhc3MgU3RvcmUgewoJQHNvbG8gdGl0bGUoIHRleHQgPSAnJyApIHsgcmV0dXJuIHRleHQgfQp9Cgpjb25zdCBzdG9yZSA9IG5ldyBTdG9yZSgpCgpzdG9yZS50aXRsZSgpICAgICAgICAgICAgICAgICAgLy8gZ2V0dGVyLCByZXR1cm5zICcnCnN0b3JlLnRpdGxlKCAnQnV5IHNvbWUgbWlsaycgKSAvLyBnZXR0ZXItc2V0dGVyLCBzZXRzIGFuZCByZXR1cm5zICdCdXkgc29tZSBtaWxrJwpzdG9yZS50aXRsZSgpICAgICAgICAgICAgICAgICAgLy8gZ2V0dGVyLCByZXR1cm5zICdCdXkgc29tZSBtaWxrJwpgYGAKClRoZSBkZWNvcmF0b3IgKiptZW1vaXplcyoqIHdoYXQncyBiZWVuIHJldHVybmVkIGZyb20gdGhlIG1ldGhvZCBzbyB3aGVuIHNvbWVvbmUgdXNlcyBpdCBhcyBhICoqZ2V0dGVyKiogdGhlIG1ldGhvZCBpdHNlbGYgaXMgbm90IGNhbGxlZCBhbmQgaW5zdGVhZCB0aGUgbWVtb2l6ZWQgdmFsdWUgaXMgcmV0dXJuZWQuCgpQcm9wZXJ0aWVzIGVpdGhlcjoKICAtICoqc3RvcmUqKiB2YWx1ZXMKICAtIG9yICoqY29tcHV0ZSoqIG5ldyB2YWx1ZXMgYmFzZWQgb24gKipvdGhlcioqIHByb3BlcnRpZXMuCgpUaGUgKipjb21wdXRlZCoqIHByb3BlcnRpZXMgd2lsbCBvbmx5IHJlY29tcHV0ZSB3aGVuIG9uZSBvZiB0aGVpciAqKmRlcGVuZGVuY2llcyoqIGNoYW5nZS4KCmBgYHRzCmltcG9ydCB7ICRtb2xfd2lyZV9zb2xvIGFzIHNvbG8gfSBmcm9tICdtb2xfd2lyZV9saWInCgpjbGFzcyBVc2VyIHsKCS8vIHN0b3JlcyBhIHZhbHVlCglAc29sbyBuYW1lX2ZpcnN0KCBuZXh0ID0gJ1Rob21hcycgKSB7CgkJcmV0dXJuIG5leHQKCX0KCgkvLyBzdG9yZXMgYSB2YWx1ZQoJQHNvbG8gbmFtZV9sYXN0KCBuZXh0ID0gJ0FuZGVyc29uJyApIHsKCQlyZXR1cm4gbmV4dAoJfQoKCS8vIGNvbXB1dGVzIGEgdmFsdWUgYmFzZWQgb24gb3RoZXIgY2hhbm5lbHMKCUBzb2xvIG5hbWUoKSB7CgkJY29uc29sZS5sb2coJ2NvbXB1dGUgbmFtZScpCgkJcmV0dXJuIGAke3RoaXMubmFtZV9maXJzdCgpfSAke3RoaXMubmFtZV9sYXN0KCl9YAoJfQp9Cgpjb25zdCB1c2VyID0gbmV3IFVzZXIoKQoKY29uc29sZS5sb2codXNlci5uYW1lKCkpIC8vIGxvZ3M6ICdjb21wdXRlIG5hbWUnLCAnVGhvbWFzIEFuZGVyc29uJwpjb25zb2xlLmxvZyh1c2VyLm5hbWUoKSkgLy8gbG9nczogJ1Rob21hcyBBbmRlcnNvbicKCi8vIHNldHRlciwgbWFya3MgJ25hbWUnIGFzIGEgc3ViamVjdCB0byByZWNvbXB1dGF0aW9uLAovLyBidXQgZG9lc24ndCByZWNvbXB1dGUgaW1tZWRpYXRlbHkKdXNlci5uYW1lX2xhc3QoJ1dpbGxpYW0nKQoKY29uc29sZS5sb2codXNlci5uYW1lKCkpIC8vIGxvZ3M6ICdjb21wdXRlIG5hbWUnLCAnVGhvbWFzIFdpbGxpYW0nCmNvbnNvbGUubG9nKHVzZXIubmFtZSgpKSAvLyBsb2dzOiAnVGhvbWFzIFdpbGxpYW0nCmBgYAoKIyMjIE1lbW9pemF0aW9uCgpDaGFubmVscyBtYXJrZWQgd2l0aCBhIGBAc29sb2Agb3IgYEBwbGV4YCBkZWNvcmF0b3IgYXJlIG1lbW9pemVkIHVudGlsIGEgbmV3IHZhbHVlIGlzIHNldCB0byB0aGVtIG9yIG9uZSBvZiB0aGVpciAqKmRlcGVuZGVuY2llcyoqIGNoYW5nZS4KCldlIGNhbiB1c2UgbWVtb2l6YXRpb24gdG8gZ3VhcmFudGVlIHRoYXQgYSByZWZlcmVuY2UgdG8gYW4gb2JqZWN0IHdpbGwgc3RheSB0aGUgc2FtZToKCmBgYHRzCmltcG9ydCB7ICRtb2xfd2lyZV9zb2xvIGFzIHNvbG8gfSBmcm9tICdtb2xfd2lyZV9saWInCgpjbGFzcyBUYXNrIHsKCUBzb2xvIHRpbWVzdGFtcCggdmFsdWUgPSAwICkgewoJCXJldHVybiB2YWx1ZQoJfQoKCS8vIHdvbid0IGNyZWF0ZSBuZXcgaW5zdGFuY2VzIHVudGlsIGB0aW1lc3RhbXBgIGlzIGNoYW5nZWQKCUBzb2xvIG1vbWVudCgpIHsKCQlyZXR1cm4gbmV3IE1vbWVudCh0aGlzLnRpbWVzdGFtcCgpKQoJfQp9CmBgYAoKT3Igd2l0aCBtZW1vaXphdGlvbiB3ZSBjYW4gY2FjaGUgZXhwZW5zaXZlIGNvbXB1dGF0aW9uczoKCmBgYHRzCmltcG9ydCB7ICRtb2xfd2lyZV9zb2xvIGFzIHNvbG8gfSBmcm9tICdtb2xfd2lyZV9saWInCgpjbGFzcyBUYXNrIHsKCUBzb2xvIHRpdGxlKCB0aXRsZSA9ICcnICkgewoJCXJldHVybiB0aXRsZQoJfQoKCS8vIHdvbid0IHJlY29tcHV0ZQoJQHNvbG8gc2VnbWVudGVyKCkgewoJCXJldHVybiBuZXcgSW50bC5TZWdtZW50ZXIoKQoJfQoKCS8vIHdvbid0IHJlY29tcHV0ZSB1bnRpbCBgdGl0bGVgIGlzIGNoYW5nZWQKCUBzb2xvIG1pcnJvcmVkX3RpdGxlKCkgewoJCWNvbnN0IHNlZ21lbnRlciA9IHRoaXMuc2VnbWVudGVyKCkKCQljb25zdCBzZWdtZW50cyA9IFsgLi4uIHNlZ21lbnRlci5zZWdtZW50KCB0aGlzLnRpdGxlKCkgKSBdCgkJcmV0dXJuIHNlZ21lbnRzLm1hcCggcyA9PiBzLnNlZ21lbnQgKS5yZXZlcnNlKCkuam9pbignJykKCX0KfQpgYGAKCldpdGggYCRtb2xfd2lyZV9wbGV4YCAoYXMgaW4gbXVsdGlwbGV4aW5nKSB3ZSBjYW4gc3RvcmUgbXVsdGlwbGUgdmFsdWVzOgoKYGBgdHMKaW1wb3J0IHsgJG1vbF93aXJlX3BsZXggYXMgcGxleCB9IGZyb20gJ21vbF93aXJlX2xpYicKCmNsYXNzIFByb2plY3QgewoJQHBsZXggdGFzayggaWQ6IG51bWJlciApIHsKCQlyZXR1cm4gbmV3IFRhc2soIGlkICkKCX0KfQoKY29uc3QgcHJvamVjdCA9IG5ldyBQcm9qZWN0KCkKY29uc3QgdGFzazEgPSBwcm9qZWN0LnRhc2soMSkKY29uc3QgdGFzazIgPSBwcm9qZWN0LnRhc2soMikKYGBgCgojIyMgSGFja2luZwoKQW5vdGhlciBwaWVjZSBvZiBmbGV4aWJpbGl0eSB0aGF0ICoqY2hhbm5lbHMqKiBnaXZlIGlzIHdoYXQncyBjYWxsZWQgKipoYWNraW5nKiouIEl0IGFsbG93cyB1cyB0byBpbXBvc2UgY3VzdG9tIHJ1bGVzIG9uIGhvdyBjaGFubmVscyBhcmUgcmVhZCBvciBzZXQ6CgpgYGB0cwppbXBvcnQgewoJJG1vbF93aXJlX3NvbG8gYXMgc29sbywKCSRtb2xfd2lyZV9wbGV4IGFzIHBsZXgsCn0gZnJvbSAnbW9sX3dpcmVfbGliJwoKY2xhc3MgVGFzayB7CgkvLyB0YXNrIGhhcyBhIGR1cmF0aW9uCglAc29sbyBkdXJhdGlvbiggZHVyPzogbnVtYmVyICkgewoJCXJldHVybiBkdXIKCX0KfQoKY2xhc3MgUHJvamVjdF9saW1pdGVkIHsKCS8vIHByb2plY3QgaGFzIG1hbnkgdGFza3MKCUBwbGV4IHRhc2soIGlkOiBudW1iZXIgKSB7CgkJY29uc3QgdGFzayA9IG5ldyBUYXNrKCkKCgkJLy8gdGhlICJoYWNraW5nIiB0ZWNobmlxdWU6CgkJLy8gd2hlbiBzb21lb25lIHRyaWVzIHRvIGdldCBvciBzZXQgdGhlIGR1cmF0aW9uIGZvciBhIHRhc2sKCQkvLyB3ZSBwcm94eSB0aGlzIHRocm91Z2ggb3VyIG93biBtZXRob2QgaW1wb3NpbmcgYSBsaW1pdGF0aW9uIGZvciBtYXhpbXVtIGR1cmF0aW9uCgkJdGFzay5kdXJhdGlvbiA9ICggZHVyYXRpb24gKSA9PiB0aGlzLnRhc2tfZHVyYXRpb24oIGlkLCBkdXJhdGlvbiApCgoJCXJldHVybiB0YXNrCgl9CgoJQHBsZXggdGFza19kdXJhdGlvbiggaWQ6IG51bWJlciwgZHVyYXRpb24gPSAxICkgewoJCS8vIGNsYW1wIHRoZSBkdXJhdGlvbiB0byB0aGUgbWF4aW11bSB2YWx1ZQoJCXJldHVybiBNYXRoLm1pbiggZHVyYXRpb24sIHRoaXMuZHVyYXRpb25fbWF4KCkgKQoJfQoKCWR1cmF0aW9uX21heCgpIHsKCQlyZXR1cm4gMTAKCX0KfQoKY29uc3QgcHJvamVjdF9saW1pdGVkID0gbmV3IFByb2plY3RfbGltaXRlZCgpCgpjb25zdCB0YXNrX2xpbWl0ZWQgPSBwcm9qZWN0X2xpbWl0ZWQudGFzaygxKQp0YXNrX2xpbWl0ZWQuZHVyYXRpb24oMjApIC8vIHRyeSB0byBzZXQgMjAgZm9yIHRoZSBkdXJhdGlvbgoKY29uc29sZS5sb2codGFza19saW1pdGVkLmR1cmF0aW9uKCkpIC8vIGxvZ3M6IDEwCmBgYAoKIyMjIERlc3RydWN0b3JzCgpXZSBjYW4gdGFrZSB0aGUgdXNlIG9mICoqbWVtb2l6YXRpb24qKiBldmVuIGZ1cnRoZXIgYnkgbGV2ZXJhZ2luZyAqKmRlc3RydWN0b3JzKiouCgpgJG1vbF93aXJlYCB3aWxsIGNhbGwgYSBzcGVjaWFsIG1ldGhvZCBuYW1lZCBgZGVzdHJ1Y3RvcmAgb24gYW4gb2JqZWN0IHRoYXQgaXMgbm8gbG9uZ2VyIG5lZWRlZDoKCmBgYHRzCmltcG9ydCB7ICRtb2xfd2lyZV9zb2xvIGFzIHNvbG8gfSBmcm9tICdtb2xfd2lyZV9saWInCgpjbGFzcyBFeGFtcGxlQVBJIHsKCXNvY2tldDogV2ViU29ja2V0CgoJY29uc3RydWN0b3IgKAoJCXB1YmxpYyBhcGlfa2V5IDogc3RyaW5nICwKCSkgewoJCXRoaXMuc29ja2V0ID0gbmV3IFdlYlNvY2tldChgd3NzOi8vZXhhbXBsZS5jb20/YXBpX2tleT0ke2FwaV9rZXl9YCkKCX0KCgkvLyB0aGUgc3BlY2lhbCBtZXRob2QKCWRlc3RydWN0b3IoKSB7CgkJdGhpcy5zb2NrZXQuY2xvc2UoKQoJfQp9CgpjbGFzcyBBcHAgewoJQHNvbG8gYXBpX2tleSggdmFsdWUgPSAnJyApIHsKCQlyZXR1cm4gdmFsdWUKCX0KCglAc29sbyBhcGkoKSB7CgkJcmV0dXJuIG5ldyBFeGFtcGxlQVBJKCB0aGlzLmFwaV9rZXkoKSApCgl9Cn0KCmNvbnN0IGFwcCA9IG5ldyBBcHAoKQoKLy8gc2V0IGFuIGFwaSBrZXkKYXBwLmFwaV9rZXkoJ3Rlc3RrZXkxJykKCi8vIGNyZWF0ZSBhbiBpbnN0YW5jZSBvZiBXZWJTb2NrZXQsIGVzdGFibGlzaCBhIGNvbm5lY3Rpb24KYXBwLmFwaSgpCgovLyBjaGFuZ2UgdGhlIGFwaSBrZXkKLy8gdGhpcyB3aWxsIHRyaWdnZXIgY3JlYXRpb24gb2YgYSBuZXcgd2ViIHNvY2tldAovLyBhbmQgdGhlIG9sZCBvbmUgd2lsbCBnZXQgZGVzdHJ1Y3R1cmVkCmFwcC5hcGlfa2V5KCd0ZXN0a2V5MicpCmBgYAoKIyMjIEFzeW5jaHJvbm91cyBjb21wdXRlZCB2YWx1ZXMKClVubGlrZSBtYW55IG90aGVyIHJlYWN0aXZpdHkgc3lzdGVtcywgYCRtb2xfd2lyZWAgYWxsb3dzIHlvdSB0byBoYXZlIGNvbXB1dGVkcyB0aGF0IGRlcGVuZCBvbiBhc3luY2hyb25vdXMgdmFsdWVzLgoKYCRtb2xfd2lyZWAgbWFrZXMgaXQgcG9zc2libGUgYnkgdXNpbmcgYW4gaW1wbGVtZW50YWlvbiBvZiBTdXNwZW5zZSBBUEkgd2hlcmUgYW4gYXN5bmNocm9ub3VzIHRhc2sgdGhyb3dzIGFuIGV4Y2VwdGlvbiB0byBwYXVzZSB0aGUgY29tcHV0YXRpb24gdW50aWwgdGhlIHRhc2sgcmVzb2x2ZXMuIFlvdSBjYW4gcmVhZCBtb3JlIGFib3V0IGl0IFtoZXJlXShodHRwczovL21vbC5oeW9vLnJ1LyMhc2VjdGlvbj1kb2NzLz1oNXJnMnJfbW1sZzE1KS4KCmBgYHRzCmltcG9ydCB7CgkkbW9sX3dpcmVfc29sbyBhcyBzb2xvLAoJJG1vbF93aXJlX3N5bmMsCgkkbW9sX3dpcmVfYXN5bmMsCn0gZnJvbSAnbW9sX3dpcmVfbGliJwoKLy8gcHJvZHVjZSBhIHZhbHVlIHdpdGggMSBzZWNvbmQgZGVsYXkKZnVuY3Rpb24gdmFsdWVfYXN5bmMoKTogUHJvbWlzZTxudW1iZXI+IHsKCXJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewoJCWNvbnN0IHZhbHVlID0gMjUKCQlzZXRUaW1lb3V0KCgpID0+IHJlc29sdmUodmFsdWUpLCAxMDAwKQoJfSkKfQoKY2xhc3MgQXBwIHsKCUBzb2xvIHZhbHVlKCkgewoJCS8vIGNvbnZlcnQgYXN5bmNocm9ub3VzIGZ1bmN0aW9uIHRvIGEgc3luY2hyb25vdXMgb25lCgkJLy8gTk9URSBjbG9zdXJlcyB3b24ndCB3b3JrIGhlcmUsCgkJLy8gTk9URSBvbmx5IHVzZSByZWZlcmVuY2VzIHRvIHByZS1kZWZpbmVkIGZ1bmN0aW9ucyBvciBvYmplY3QgbWV0aG9kcwoJCWNvbnN0IHZhbHVlX3N5bmMgPSAkbW9sX3dpcmVfc3luYyh2YWx1ZV9hc3luYykKCgkJLy8gdHJlYXQgdGhlIHZhbHVlIGFzIGl0IGlzIGFscmVhZHkgdGhlcmUKCQlyZXR1cm4gdmFsdWVfc3luYygpICogMgoJfQoKCXJ1bigpIHsKCQljb25zb2xlLmxvZyh0aGlzLnZhbHVlKCkpCgl9Cn0KCmNvbnN0IGFwcCA9IG5ldyBBcHAoKQoKLy8gcnVuIHRoZSBhcHBsaWNhdGlvbiBpbiBhIFN1c3BlbnNlIGVudmlyb25tZW50CiRtb2xfd2lyZV9hc3luYyhhcHApLnJ1bigpCgovLyBsb2dzOiA1MApgYGAKCiMjIyBTaWRlIGVmZmVjdHMgaW4gYXN5bmNocm9ub3VzIGNvbXB1dGF0aW9ucwoKSW4gYCRtb2xfd2lyZWAgd2UgdHJlYXQgdmFsdWVzIHRoYXQgYXJlIGNvbXB1dGVkICoqYXN5bmNocm9ub3VzbHkqKiBhcyB0aGV5J3JlICoqYWxyZWFkeSB0aGVyZSoqLiBUaGlzIGlzIHRoYW5rcyB0byAqKlN1c3BlbnNlIEFQSSoqOiB3aGVuIGFuIGFzeW5jaHJvbm91cyB0YXNrIHN0YXJ0cyBpbiBhICoqbWV0aG9kKiogaXQgdGhyb3dzIGFuIGV4Y2VwdGlvbiBhbmQgd2hlbiBpdCBmaW5pc2hlcyB0aGUgKiptZXRob2QqKiBpcyAqKmNhbGxlZCBhZ2FpbioqLiBBIG1vcmUgZGV0YWlsZWQgZGVzY3JpcHRpb24gaXMgW2hlcmVdKGh0dHBzOi8vbW9sLmh5b28ucnUvIyFzZWN0aW9uPWRvY3MvPTNiNGV1YV8zMWMwMjUpLgoKQmVjYXVzZSBvZiB0aGF0IHdlIGhhdmUgdG8gYmUgYSBsaXR0bGUgY2FyZWZ1bCBhYm91dCBob3cgd2UgbWFrZSAqKnNpZGUgZWZmZWN0cyoqIGluc2lkZSBvdXIgbWV0aG9kcy4KClRoZSBgQCRtb2xfd2lyZV9tZXRob2RgIGRlY29yYXRvciAod2hpY2ggaXMgdXN1YWxseSBhbGlhc2VkIHRvIGBAYWN0aW9uYCkgcHJldmVudHMgbWV0aG9kcyBmcm9tIGJlaW5nIGNhbGxlZCBtdWx0aXBsZSB0aW1lczoKCmBgYHRzCmltcG9ydCB7CgkkbW9sX3dpcmVfbWV0aG9kIGFzIGFjdGlvbiwKCSRtb2xfd2lyZV9zeW5jLAp9IGZyb20gJ21vbF93aXJlX2xpYicKCmNsYXNzIEFwcCB7CgkvLyBBdXRvIHdyYXAgbWV0aG9kIHRvIHRhc2sKCUBhY3Rpb24gbWFpbigpIHsKCQkvLyBDb252ZXJ0IGFzeW5jIGFwaSB0byBzeW5jCgkJY29uc3Qgc3luY0ZldGNoID0gJG1vbF93aXJlX3N5bmMoIGZldGNoICkKCgkJdGhpcy5sb2coICdSZXF1ZXN0JyApIC8vIDMgY2FsbHMsIDEgbG9nCgkJY29uc3QgcmVzcG9uc2UgPSBzeW5jRmV0Y2goICdodHRwczovL2V4YW1wbGUub3JnJyApIC8vIFN5bmMgYnV0IG5vbi1ibG9ja2luZwoJCWNvbnN0IHN5bmNSZXNwb25zZSA9ICRtb2xfd2lyZV9zeW5jKCByZXNwb25zZSApCgoJCXRoaXMubG9nKCAnUGFyc2UnICkgLy8gMiBjYWxscywgMSBsb2cKCQljb25zdCByZXNwb25zZSA9IHN5bmNSZXNwb25zZS5qc29uKCkgLy8gU3luYyBidXQgbm9uLWJsb2NraW5nCgoJCXRoaXMubG9nKCAnRG9uZScgKSAvLyAxIGNhbGwsIDEgbG9nCgl9CgoJLy8gQXV0byB3cmFwIG1ldGhvZCB0byBzdWItdGFzawoJQGFjdGlvbiBsb2coIC4uLiBhcmdzOiBhbnlbXSApIHsKCQljb25zb2xlLmxvZyggLi4uIGFyZ3MgKQoJCS8vIE5vIHJlc3RhcnRzIHdpdGhpbiBhIHBvcnRpb24gb2YgYSB0YXNrCgl9Cn0KYGBgCgojIyMgQ2FuY2VsbGluZyBhc3luY2hyb25vdXMgdGFza3MKCldlIGNhbiBjYW5jZWwgYXN5bmNocm9ub3VzIHRhc2tzIHdoZW4gd2Ugbm8gbG9uZ2VyIG5lZWQgdGhlbSBieSB1c2luZyAqKmRlc3RydWN0b3JzKiogYWdhaW4uCgpIZXJlJ3MgYW4gZXhhbXBsZSBvZiBhIGNhbmNlbGFibGUgYGZldGNoYDoKCmBgYHRzCmltcG9ydCB7ICRtb2xfd2lyZV9zeW5jIH0gZnJvbSAnbW9sX3dpcmVfbGliJwoKY29uc3QgZmV0Y2hKU09OID0gJG1vbF93aXJlX3N5bmMoIGZ1bmN0aW9uIGZldGNoX2Fib3J0YWJsZSgKCWlucHV0OiBSZXF1ZXN0SW5mbywKCWluaXQ6IFJlcXVlc3RJbml0ID0ge30KKSB7Cgljb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcgoJaW5pdC5zaWduYWwgfHw9IGNvbnRyb2xsZXIuc2lnbmFsCgoJY29uc3QgcHJvbWlzZSA9IGZldGNoKCBpbnB1dCwgaW5pdCApCgkJLnRoZW4oIHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSApCgoJLy8gYXNzaWduIGEgZGVzdHJ1Y3RvciB0byBjYW5jZWwgdGhlIHJlcXVlc3QKCWNvbnN0IGRlc3RydWN0b3IgPSAoKT0+IGNvbnRyb2xsZXIuYWJvcnQoKQoJcmV0dXJuIE9iamVjdC5hc3NpZ24oIHByb21pc2UsIHsgZGVzdHJ1Y3RvciB9ICkKfSApCmBgYAoKVGhlbiwgd2UgY2FuIHVzZSBpdCBpbiBvdXIgY29tcHV0ZWRzOgoKYGBgdHMKaW1wb3J0IHsgJG1vbF93aXJlX3BsZXggYXMgcGxleCB9IGZyb20gJ21vbF93aXJlX2xpYicKCmNsYXNzIEdpdEh1YiB7CglAcGxleCBzdGF0aWMgaXNzdWUoIGlkOiBudW1iZXIgKSB7CgkJcmV0dXJuIGZldGNoSlNPTiggYGh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vcmVwb3MvbmluLWppbi9IYWJIdWIvaXNzdWVzLyR7aWR9YCApCgl9Cn0KYGBgCgpvciBhIG1vcmUgaW50ZXJlc3RpbmcgdXNlIGNhc2UgY291bGQgbG9vayBsaWtlIHRoaXM6CgpgYGB0cwppbXBvcnQgeyAkbW9sX3dpcmVfYXN5bmMgfSBmcm9tICdtb2xfd2lyZV9saWInCgpidXR0b24ub25jbGljayA9ICRtb2xfd2lyZV9hc3luYyggZnVuY3Rpb24oKSB7Cgljb25zdCB7IHByb2ZpbGUgfSA9IGZldGNoSlNPTiggJ2h0dHBzOi8vZXhhbXBsZS5vcmcvaW5wdXQnICkKCWNvbnNvbGUubG9nKCBwcm9maWxlICkKfSApCmBgYAoKSW4gdGhlIGFib3ZlIGV4YW1wbGUgY2xpY2tpbmcgdGhlIGJ1dHRvbiB3aWxsIHRyaWdnZXIgYW4gSFRUUCByZXF1ZXN0LiBJZiBpdCBkb2Vzbid0IHJlc29sdmUgdW50aWwgdGhlIHVzZXIgY2xpY2tzIGFnYWluLCBhIG5ldyByZXF1ZXN0IHdpbGwgYmUgc2VudCBhbmQgdGhlIHByZXZpb3VzIG9uZSB3aWxsIGdldCAqKmNhbmNlbGxlZCoqLgoKQW5kIHRoaXMgaXMgaG93IGVhc3kgaXQgaXMgdG8gYWRkIGRlYm91bmNlIHRvIHRoaXMgZnVuY3Rpb246CgpgYGBkaWZmCmJ1dHRvbi5vbmNsaWNrID0gJG1vbF93aXJlX2FzeW5jKCBmdW5jdGlvbigpIHsKKwkvLyBzY2hlZHVsZSBhIHRpbWVyCisJLy8gdGhlIGV4ZWN1dGlvbiB3b24ndCBnbyBwYXN0IHRoaXMgcG9pbnQgdW50aWwgaXQgcmVzb2x2ZXMKKwkvLyBpZiBvbmNsaWNrIGlzIGNhbGxlZCBhZ2FpbiB0aGUgdGltZXIgZ2V0cyByZXNjaGVkdWxlZAorCSRtb2xfd2FpdF90aW1lb3V0KCAxMDAwICkKCWNvbnN0IHsgcHJvZmlsZSB9ID0gZmV0Y2hKU09OKCAnaHR0cHM6Ly9leGFtcGxlLm9yZy9pbnB1dCcgKQoJY29uc29sZS5sb2coIHByb2ZpbGUgKQp9ICkKYGBgCg=="

;
"use strict";
var $;
(function ($) {
    $['devtoolsFormatters'] ||= [];
    function $mol_dev_format_register(config) {
        $['devtoolsFormatters'].push(config);
    }
    $.$mol_dev_format_register = $mol_dev_format_register;
    $.$mol_dev_format_head = Symbol('$mol_dev_format_head');
    $.$mol_dev_format_body = Symbol('$mol_dev_format_body');
    $mol_dev_format_register({
        header: (val, config = false) => {
            if (config)
                return null;
            if (!val)
                return null;
            if ($.$mol_dev_format_head in val) {
                try {
                    return val[$.$mol_dev_format_head]();
                }
                catch (error) {
                    return $.$mol_dev_format_accent($mol_dev_format_native(val), '💨', $mol_dev_format_native(error), '');
                }
            }
            if (typeof val === 'function') {
                return $mol_dev_format_native(val);
            }
            if (Symbol.toStringTag in val) {
                return $mol_dev_format_native(val);
            }
            return null;
        },
        hasBody: val => val[$.$mol_dev_format_body],
        body: val => val[$.$mol_dev_format_body](),
    });
    function $mol_dev_format_native(obj) {
        if (typeof obj === 'undefined')
            return $.$mol_dev_format_shade('undefined');
        return [
            'object',
            {
                object: obj,
                config: true,
            },
        ];
    }
    $.$mol_dev_format_native = $mol_dev_format_native;
    function $mol_dev_format_auto(obj) {
        if (obj == null)
            return $.$mol_dev_format_shade(String(obj));
        return [
            'object',
            {
                object: obj,
                config: false,
            },
        ];
    }
    $.$mol_dev_format_auto = $mol_dev_format_auto;
    function $mol_dev_format_element(element, style, ...content) {
        const styles = [];
        for (let key in style)
            styles.push(`${key} : ${style[key]}`);
        return [
            element,
            {
                style: styles.join(' ; '),
            },
            ...content,
        ];
    }
    $.$mol_dev_format_element = $mol_dev_format_element;
    function $mol_dev_format_span(style, ...content) {
        return $mol_dev_format_element('span', {
            ...style,
        }, ...content);
    }
    $.$mol_dev_format_span = $mol_dev_format_span;
    $.$mol_dev_format_div = $mol_dev_format_element.bind(null, 'div');
    $.$mol_dev_format_ol = $mol_dev_format_element.bind(null, 'ol');
    $.$mol_dev_format_li = $mol_dev_format_element.bind(null, 'li');
    $.$mol_dev_format_table = $mol_dev_format_element.bind(null, 'table');
    $.$mol_dev_format_tr = $mol_dev_format_element.bind(null, 'tr');
    $.$mol_dev_format_td = $mol_dev_format_element.bind(null, 'td');
    $.$mol_dev_format_accent = $mol_dev_format_span.bind(null, {
        'color': 'magenta',
    });
    $.$mol_dev_format_strong = $mol_dev_format_span.bind(null, {
        'font-weight': 'bold',
    });
    $.$mol_dev_format_string = $mol_dev_format_span.bind(null, {
        'color': 'green',
    });
    $.$mol_dev_format_shade = $mol_dev_format_span.bind(null, {
        'color': 'gray',
    });
    $.$mol_dev_format_indent = $.$mol_dev_format_div.bind(null, {
        'margin-left': '13px'
    });
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_wire_pub_sub extends $mol_wire_pub {
        pub_from = 0;
        cursor = $mol_wire_cursor.stale;
        get temp() {
            return false;
        }
        get pub_list() {
            const res = [];
            const max = this.cursor >= 0 ? this.cursor : this.sub_from;
            for (let i = this.pub_from; i < max; i += 2) {
                if (this.data[i])
                    res.push(this.data[i]);
            }
            return res;
        }
        track_on() {
            this.cursor = this.pub_from;
            const sub = $mol_wire_auto();
            $mol_wire_auto(this);
            return sub;
        }
        promote() {
            if (this.cursor >= this.pub_from) {
                $mol_fail(new Error('Circular subscription'));
            }
            super.promote();
        }
        track_next(pub) {
            if (this.cursor < 0)
                $mol_fail(new Error('Promo to non begun sub'));
            if (this.cursor < this.sub_from) {
                const next = this.data[this.cursor];
                if (pub === undefined)
                    return next ?? null;
                if (next === pub) {
                    this.cursor += 2;
                    return next;
                }
                if (next) {
                    if (this.sub_from < this.data.length) {
                        this.peer_move(this.sub_from, this.data.length);
                    }
                    this.peer_move(this.cursor, this.sub_from);
                    this.sub_from += 2;
                }
            }
            else {
                if (pub === undefined)
                    return null;
                if (this.sub_from < this.data.length) {
                    this.peer_move(this.sub_from, this.data.length);
                }
                this.sub_from += 2;
            }
            this.data[this.cursor] = pub;
            this.data[this.cursor + 1] = pub.sub_on(this, this.cursor);
            this.cursor += 2;
            return pub;
        }
        track_off(sub) {
            $mol_wire_auto(sub);
            if (this.cursor < 0) {
                $mol_fail(new Error('End of non begun sub'));
            }
            for (let cursor = this.pub_from; cursor < this.cursor; cursor += 2) {
                const pub = this.data[cursor];
                pub.fresh();
            }
            this.cursor = $mol_wire_cursor.fresh;
        }
        pub_off(sub_pos) {
            this.data[sub_pos] = undefined;
            this.data[sub_pos + 1] = undefined;
        }
        destructor() {
            for (let cursor = this.data.length - 2; cursor >= this.sub_from; cursor -= 2) {
                const sub = this.data[cursor];
                const pos = this.data[cursor + 1];
                sub.pub_off(pos);
            }
            this.data.length = this.sub_from;
            this.cursor = this.pub_from;
            this.track_cut();
            this.cursor = $mol_wire_cursor.final;
        }
        track_cut() {
            if (this.cursor < this.pub_from) {
                $mol_fail(new Error('Cut of non begun sub'));
            }
            let end = this.data.length;
            for (let cursor = this.cursor; cursor < this.sub_from; cursor += 2) {
                const pub = this.data[cursor];
                pub?.sub_off(this.data[cursor + 1]);
                end -= 2;
                if (this.sub_from <= end)
                    this.peer_move(end, cursor);
            }
            this.data.length = end;
            this.sub_from = this.cursor;
        }
        complete() { }
        complete_pubs() {
            const limit = this.cursor < 0 ? this.sub_from : this.cursor;
            for (let cursor = this.pub_from; cursor < limit; cursor += 2) {
                const pub = this.data[cursor];
                if (pub?.incompleted)
                    return;
            }
            for (let cursor = this.pub_from; cursor < limit; cursor += 2) {
                const pub = this.data[cursor];
                pub?.complete();
            }
        }
        absorb(quant = $mol_wire_cursor.stale) {
            if (this.cursor === $mol_wire_cursor.final)
                return;
            if (this.cursor >= quant)
                return;
            this.cursor = quant;
            this.emit($mol_wire_cursor.doubt);
        }
        [$mol_dev_format_head]() {
            return $mol_dev_format_native(this);
        }
        get pub_empty() {
            return this.sub_from === this.pub_from;
        }
    }
    $.$mol_wire_pub_sub = $mol_wire_pub_sub;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/wire/pub/sub/README.md" ] = "IyAkbW9sX3dpcmVfcHViX3N1YgoKVGlueSBwdWIvc3ViIHdpdGggYXV0b21hdGljIHdpcmluZyBzdXBwb3J0LgoKLSBBbGwgdHJhY2tpbmcgb3BlcmF0aW9ucyBoYXZlIE8oMSkgY29tcGxleGl0eS4KLSBDaXJjdWxhciBzdWJzY3JpcHRpb24gdGhyb3dzIGV4Y2VwdGlvbi4KLSBTdWJzY3JpYmVyIGlzIHB1Ymxpc2hlciB0b28gYW5kIHJldHJhbnNtaXRzIGV2ZW50cy4KCiMjIEhhbmRsaW5nIGV2ZW50cwoKYGBgdHMKY2xhc3MgTG9nZ2VyIGV4dGVuZHMgJG1vbF93aXJlX3B1Yl9zdWIgewoJCglhZmZlY3QoIHF1YW50PzogbnVtYmVyICkgewoJCQoJCS8vIGN1c3RvbSBsb2dpYywgcXVhbnQgPSAkbW9sX3dpcmVfY3Vyc29yCgkJY29uc29sZS5sb2coIHF1YW50ICkKCQkKCQkvLyBkZWZhdWx0IGxvZ2ljIChyZXRyYW5zbWl0KQoJCXN1cGVyLmFmZmVjdCggcXVhbnQgKQoJCQoJfQoJCn0KCmNvbnN0IHN1c2kgPSBuZXcgTG9nZ2VyCmBgYAoKIyMgQXV0byB3aXJlCgpgYGB0cwpjb25zdCBzdXNpID0gbmV3ICRtb2xfd2lyZV9wdWJfc3ViCmNvbnN0IHBlcGUgPSBuZXcgJG1vbF93aXJlX3B1YgoKY29uc3QgYmFja3VwID0gc3VzaS50cmFja19vbigpIC8vIEJlZ2luIGF1dG8gd2lyZQp0cnkgewoJcGVwZS5wcm9tb3RlKCkgLy8gQXV0byBzdWJzY3JpYmUgU3VzaSB0byBQZXBlCn0gZmluYWxseSB7CglzdXNpLnRyYWNrX2N1dCgpIC8vIFVuc3Vic2NyaWJlIFN1c2kgZnJvbSB1bnByb21vdGVkIHB1YnMKCXN1c2kudHJhY2tfb2ZmKCBiYWNrdXAgKSAvLyBTdG9wIGF1dG8gd2lyZQp9CmBgYAoKIyMgRmlyaW5nIGV2ZW50cwoKYGBgdHMKcGVwZS5lbWl0KCkgLy8gTm90aWZ5IHN1YnNjcmliZXJzIGFib3V0IGNoYW5nZXMKYGBgCg=="

;
"use strict";
var $;
(function ($) {
    class $mol_after_tick extends $mol_object2 {
        task;
        static promise = null;
        cancelled = false;
        constructor(task) {
            super();
            this.task = task;
            if (!$mol_after_tick.promise)
                $mol_after_tick.promise = Promise.resolve().then(() => {
                    $mol_after_tick.promise = null;
                });
            $mol_after_tick.promise.then(() => {
                if (this.cancelled)
                    return;
                task();
            });
        }
        destructor() {
            this.cancelled = true;
        }
    }
    $.$mol_after_tick = $mol_after_tick;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_promise_like(val) {
        try {
            return val && typeof val === 'object' && 'then' in val && typeof val.then === 'function';
        }
        catch {
            return false;
        }
    }
    $.$mol_promise_like = $mol_promise_like;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    const wrappers = new WeakMap();
    class $mol_wire_fiber extends $mol_wire_pub_sub {
        task;
        host;
        static warm = true;
        static planning = new Set();
        static reaping = new Set();
        static plan_task = null;
        static plan() {
            if (this.plan_task)
                return;
            this.plan_task = new $mol_after_tick(() => {
                try {
                    this.sync();
                }
                finally {
                    $mol_wire_fiber.plan_task = null;
                }
            });
        }
        static sync() {
            while (this.planning.size) {
                for (const fiber of this.planning) {
                    this.planning.delete(fiber);
                    if (fiber.cursor >= 0)
                        continue;
                    if (fiber.cursor === $mol_wire_cursor.final)
                        continue;
                    fiber.fresh();
                }
            }
            while (this.reaping.size) {
                const fibers = this.reaping;
                this.reaping = new Set;
                for (const fiber of fibers) {
                    if (!fiber.sub_empty)
                        continue;
                    fiber.destructor();
                }
            }
        }
        [Symbol.toStringTag];
        cache = undefined;
        get args() {
            return this.data.slice(0, this.pub_from);
        }
        result() {
            if ($mol_promise_like(this.cache))
                return;
            if (this.cache instanceof Error)
                return;
            return this.cache;
        }
        get incompleted() {
            return $mol_promise_like(this.cache);
        }
        field() {
            return this.task.name + '()';
        }
        constructor(id, task, host, args) {
            super();
            this.task = task;
            this.host = host;
            if (args)
                this.data.push(...args);
            this.pub_from = this.sub_from = args?.length ?? 0;
            this[Symbol.toStringTag] = id;
        }
        plan() {
            $mol_wire_fiber.planning.add(this);
            $mol_wire_fiber.plan();
            return this;
        }
        reap() {
            $mol_wire_fiber.reaping.add(this);
            $mol_wire_fiber.plan();
        }
        toString() {
            return this[Symbol.toStringTag];
        }
        toJSON() {
            return this[Symbol.toStringTag];
        }
        [$mol_dev_format_head]() {
            const cursor = {
                [$mol_wire_cursor.stale]: '🔴',
                [$mol_wire_cursor.doubt]: '🟡',
                [$mol_wire_cursor.fresh]: '🟢',
                [$mol_wire_cursor.final]: '🔵',
            }[this.cursor] ?? this.cursor.toString();
            return $mol_dev_format_div({}, $mol_owning_check(this, this.cache)
                ? $mol_dev_format_auto({
                    [$mol_dev_format_head]: () => $mol_dev_format_shade(cursor),
                    [$mol_dev_format_body]: () => $mol_dev_format_native(this),
                })
                : $mol_dev_format_shade($mol_dev_format_native(this), cursor), $mol_dev_format_auto(this.cache));
        }
        get $() {
            return (this.host ?? this.task)['$'];
        }
        emit(quant = $mol_wire_cursor.stale) {
            if (this.sub_empty)
                this.plan();
            else
                super.emit(quant);
        }
        fresh() {
            if (this.cursor === $mol_wire_cursor.fresh)
                return;
            if (this.cursor === $mol_wire_cursor.final)
                return;
            check: if (this.cursor === $mol_wire_cursor.doubt) {
                for (let i = this.pub_from; i < this.sub_from; i += 2) {
                    ;
                    this.data[i]?.fresh();
                    if (this.cursor !== $mol_wire_cursor.doubt)
                        break check;
                }
                this.cursor = $mol_wire_cursor.fresh;
                return;
            }
            const bu = this.track_on();
            let result;
            try {
                switch (this.pub_from) {
                    case 0:
                        result = this.task.call(this.host);
                        break;
                    case 1:
                        result = this.task.call(this.host, this.data[0]);
                        break;
                    default:
                        result = this.task.call(this.host, ...this.args);
                        break;
                }
                if ($mol_promise_like(result)) {
                    if (wrappers.has(result)) {
                        result = wrappers.get(result).then(a => a);
                    }
                    else {
                        const put = (res) => {
                            if (this.cache === result)
                                this.put(res);
                            return res;
                        };
                        wrappers.set(result, result = Object.assign(result.then(put, put), { destructor: result.destructor || (() => { }) }));
                        wrappers.set(result, result);
                        const error = new Error(`Promise in ${this}`);
                        Object.defineProperty(result, 'stack', { get: () => error.stack });
                    }
                }
            }
            catch (error) {
                if (error instanceof Error || $mol_promise_like(error)) {
                    result = error;
                }
                else {
                    result = new Error(String(error), { cause: error });
                }
                if ($mol_promise_like(result)) {
                    if (wrappers.has(result)) {
                        result = wrappers.get(result);
                    }
                    else {
                        wrappers.set(result, result = Object.assign(result.finally(() => {
                            if (this.cache === result)
                                this.absorb();
                        }), { destructor: result.destructor || (() => { }) }));
                        const error = new Error(`Promise in ${this}`);
                        Object.defineProperty(result, 'stack', { get: () => error.stack });
                    }
                }
            }
            if (!$mol_promise_like(result)) {
                this.track_cut();
            }
            this.track_off(bu);
            this.put(result);
            return this;
        }
        refresh() {
            this.cursor = $mol_wire_cursor.stale;
            this.fresh();
        }
        sync() {
            if (!$mol_wire_fiber.warm) {
                return this.result();
            }
            this.promote();
            this.fresh();
            if (this.cache instanceof Error) {
                return $mol_fail_hidden(this.cache);
            }
            if ($mol_promise_like(this.cache)) {
                return $mol_fail_hidden(this.cache);
            }
            return this.cache;
        }
        async async_raw() {
            while (true) {
                this.fresh();
                if (this.cache instanceof Error) {
                    $mol_fail_hidden(this.cache);
                }
                if (!$mol_promise_like(this.cache))
                    return this.cache;
                await Promise.race([this.cache, this.step()]);
                if (!$mol_promise_like(this.cache))
                    return this.cache;
                if (this.cursor === $mol_wire_cursor.final) {
                    await new Promise(() => { });
                }
            }
        }
        async() {
            const promise = this.async_raw();
            if (!promise.destructor)
                promise.destructor = () => this.destructor();
            return promise;
        }
        step() {
            return new Promise(done => {
                const sub = new $mol_wire_pub_sub;
                const prev = sub.track_on();
                sub.track_next(this);
                sub.track_off(prev);
                sub.absorb = () => {
                    done(null);
                    setTimeout(() => sub.destructor());
                };
            });
        }
        destructor() {
            super.destructor();
            if (!$mol_owning_check(this, this.cache))
                return;
            try {
                this.cache.destructor();
            }
            catch (result) {
                if ($mol_promise_like(result)) {
                    const error = new Error(`Promise in ${this}.destructor()`);
                    Object.defineProperty(result, 'stack', { get: () => error.stack });
                }
                $mol_fail_hidden(result);
            }
        }
    }
    $.$mol_wire_fiber = $mol_wire_fiber;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/wire/fiber/readme.md" ] = "IyAkbW9sX3dpcmVfZmliZXIKClBhdXNhYmxlIHN5bmNocm9ub3VzIGV4ZWN1dGlvbi4gVGlueSBTdXNwZW5zZUFQSSBpbXBsZW1lbnRhdGlvbi4KCkNvZGUgaW5zaWRlIGZpYmVycyB3aGljaCBjYWxscyBvdGhlciBmaWJlcnMgbXVzdCBiZSBpZGVtcG90ZW50IGJlY2F1c2UgaXQgbWF5IGJlIHJlc3RhcnRlZCBmb3IgY29udGludWF0aW9uLiBTbyBhbGwgdW5pZGVtcG90ZW50IGNvZGUgc2hvdWxkIGJlIHdyYXBwZWQgdG8gZmliZXIuCgpJbnN0ZWFkIG9mIGRpcmVjdCB1c2FnZSBpdCdzIHByZWZlciB0byB1c2U6CgogLSBEZWNvcmF0b3JzOiBbJG1vbF93aXJlX21ldGhvZF0oLi4vbWV0aG9kKSwgWyRtb2xfd2lyZV9zb2xvXSguLi9zb2xvKSwgWyRtb2xfd2lyZV9wbGV4XSguLi9wbGV4KQogLSBQcm94aWVzOiBbJG1vbF93aXJlX3N5bmNdKC4uL3N5bmMpLCBbJG1vbF93aXJlX2FzeW5jXSguLi9hc3luYykKCiMjIEVycm9yIGhhbmRsaW5nCgpKdXN0IHVzZSBgdHJ5LWNhdGNoYCB0byBoYW5kbGUgZXhjZXB0aW9ucy4gRmliZXJzIHJldHVybnMgZnJlc2ggdmFsdWUsIG9yIHRocm93cyBzb21lIGVycm9yLCBvciB0aHJvd3MgYSBgUHJvbWlzZWAgd2hpY2ggd2lsbCBiZSByZXNvbHZlZCBhZnRlciBmaWJlciBiZWNhbWUgZnJlc2guCgpJZiB5b3UgZG9uJ3Qgd2FudCB0byBoaWRlIGF3YXRpbmcgKG1vc3QgY2FzZXMpLCB1c2UgWyRtb2xfZmFpbF9oaWRkZW5dKC4uLy4uL2ZhaWwpIHRvIHJldGhyb3cgcHJvbWlzZS4KCmBgYHR5cGVzY3JpcHQKdHJ5IHsKCS8vIHRvdWNoIG90aGVyIGZpYmVycwp9IGNhdGNoKCBlcnJvcjogdW5rbm93biApIHsKCQoJaWYoICRtb2xfcHJvbWlzZV9saWtlKCBlcnJvciApICkgewoJCSRtb2xfZmFpbF9oaWRkZW4oIGVycm9yICkKCX0KCQoJJG1vbF9mYWlsX2xvZyggZXJyb3IgKSAvLyBMb2cgb25jZSB0byBjb25zb2xlCgkKCXJldHVybiAnRGVmYXVsdCB2YWx1ZScKfSAKYGBgCgojIyBFbmZvcmNlIHdob2xlIGZpYmVyIGdyYXBoIHN5bmMKCkJ5IGRlZmF1bHQgc3luY2luZyBkZWZlcnJlZCB0byBuZXh0IGFuaW1hdGlvbiBmcmFtZSBhbmQgeW91IGRvbid0IG5lZWQgdG8gZW5mb3JjZSBpdC4gV2hlbiB5b3UgYWNjZXNzaW5nIHRvIHRoZSBub24gZnJlc2ggZmliZXIsIGl0IGluc3RhbnRseSBzeW5jcyBhbmQgcmV0dXJucyBmcmVzaCB2YWx1ZS4KCkJ1dCBzb21ldGltZXMgeW91IG5lZWQgdG8gZW5mb3JjZSBhbGwgZGVmZXJyZWQgdGFza3MgKGluIHRlc3RzIGZvciBleGFtcGxlKS4KCmBgYHR5cGVzY3JpcHQKJG1vbF93aXJlX2ZpYmVyLnN5bmMoKQovLyBObyBwbGFubmVkIGZpYmVycyBoZXJlCmBgYAo="

;
"use strict";
var $;
(function ($) {
    function $mol_guid(length = 8, exists = () => false) {
        for (;;) {
            let id = Math.random().toString(36).substring(2, length + 2).toUpperCase();
            if (exists(id))
                continue;
            return id;
        }
    }
    $.$mol_guid = $mol_guid;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $.$mol_key_store = new WeakMap();
    const TypedArray = Object.getPrototypeOf(Uint8Array);
    function $mol_key(value) {
        if (typeof value === 'bigint')
            return value.toString() + 'n';
        if (typeof value === 'symbol')
            return value.description;
        if (!value)
            return JSON.stringify(value);
        if (typeof value !== 'object' && typeof value !== 'function')
            return JSON.stringify(value);
        return JSON.stringify(value, (field, value) => {
            if (typeof value === 'bigint')
                return value.toString() + 'n';
            if (typeof value === 'symbol')
                return value.description;
            if (!value)
                return value;
            if (typeof value !== 'object' && typeof value !== 'function')
                return value;
            if (Array.isArray(value))
                return value;
            const proto = Reflect.getPrototypeOf(value);
            if (!proto)
                return value;
            if (Reflect.getPrototypeOf(proto) === null)
                return value;
            if ('toJSON' in value)
                return value;
            if (value instanceof RegExp)
                return value.toString();
            if (value instanceof TypedArray)
                return [...value];
            let key = $.$mol_key_store.get(value);
            if (key)
                return key;
            key = $mol_guid();
            $.$mol_key_store.set(value, key);
            return key;
        });
    }
    $.$mol_key = $mol_key;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/key/README.md" ] = "IyAkbW9sX2tleQoKUmV0dXJucyBzdHJpbmcga2V5IGZvciBhbnkgdmFsdWUuCgotIFByaW1pdGl2ZXMgYXJlIHJldHVybmVkIGFzIEpTT04gKGB0cnVlYCwgYDEyLjM0YCkuCi0gUE9KTydzIGFyZSByZXR1cm5lZCBhcyBKU09OIHdpdGggcmVjdXJzaXZlIGAkbW9sX2tleWAgYXBwbHlpbmcgKGBbMTIzLHsiZm9vIjoiQTFCMkMzRDQifV1gLCBgeyJmb28iOlsxMjMsIkExQjJDM0Q0Il19ImApLgotIFJlc3VsdCBvZiBgdG9KU09OYCBjYWxsaW5nIGlzIHJldHVybmVkIGZvciBvYmplY3RzIHdpdGggdGhpcyBtZXRob2QuCi0gR1VJRCBnZW5lcmF0ZWQvcmV1c2VkIGZvciBvdGhlciBvYmplY3RzIChgIkExQjJDM0Q0ImApLgoKIyMgTlBNIFVzYWdlCgpgYGB0cwpucG0gaW5zdGFsbCBtb2xfa2V5CmBgYAoKMUtCIFshW10oaHR0cHM6Ly9iYWRnZW4ubmV0L2J1bmRsZXBob2JpYS9taW56aXAvbW9sX2tleSldKGh0dHBzOi8vYnVuZGxlcGhvYmlhLmNvbS9wYWNrYWdlL21vbF9rZXkpCgpgYGB0cwppbXBvcnQgeyAkbW9sX2tleSBhcyBrZXkgfSBmcm9tICdtb2xfa2V5JwoKLy8geyJyZWdleHAiOiIvZm9vLyIsImVsZW1zIjpbIjA0WTdMTFNUIiwiWE1TUFdBS1kiXX0Ka2V5KHsgcmVnZXhwOiAvZm9vLywgZWxlbXM6IFsgZG9jdW1lbnQuaGVhZCwgZG9jdW1lbnQuYm9keSBdIH0pCmBgYAo="

;
"use strict";
var $;
(function ($) {
    class $mol_after_frame extends $mol_object2 {
        task;
        static _promise = null;
        static get promise() {
            if (this._promise)
                return this._promise;
            return this._promise = new Promise(done => {
                const complete = () => {
                    this._promise = null;
                    done();
                };
                if (typeof requestAnimationFrame === 'function') {
                    requestAnimationFrame(complete);
                }
                else {
                    setTimeout(complete, 16);
                }
            });
        }
        cancelled = false;
        promise;
        constructor(task) {
            super();
            this.task = task;
            this.promise = $mol_after_frame.promise.then(() => {
                if (this.cancelled)
                    return;
                task();
            });
        }
        destructor() {
            this.cancelled = true;
        }
    }
    $.$mol_after_frame = $mol_after_frame;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $.$mol_compare_deep_cache = new WeakMap();
    function $mol_compare_deep(left, right) {
        if (Object.is(left, right))
            return true;
        if (left === null)
            return false;
        if (right === null)
            return false;
        if (typeof left !== 'object')
            return false;
        if (typeof right !== 'object')
            return false;
        const left_proto = Reflect.getPrototypeOf(left);
        const right_proto = Reflect.getPrototypeOf(right);
        if (left_proto !== right_proto)
            return false;
        if (left instanceof Boolean)
            return Object.is(left.valueOf(), right['valueOf']());
        if (left instanceof Number)
            return Object.is(left.valueOf(), right['valueOf']());
        if (left instanceof String)
            return Object.is(left.valueOf(), right['valueOf']());
        if (left instanceof Date)
            return Object.is(left.valueOf(), right['valueOf']());
        if (left instanceof RegExp)
            return left.source === right.source && left.flags === right.flags;
        if (left instanceof Error)
            return left.message === right.message && left.stack === right.stack;
        let left_cache = $.$mol_compare_deep_cache.get(left);
        if (left_cache) {
            const right_cache = left_cache.get(right);
            if (typeof right_cache === 'boolean')
                return right_cache;
        }
        else {
            left_cache = new WeakMap();
            $.$mol_compare_deep_cache.set(left, left_cache);
        }
        left_cache.set(right, true);
        let result;
        try {
            if (!left_proto)
                result = compare_pojo(left, right);
            else if (!Reflect.getPrototypeOf(left_proto))
                result = compare_pojo(left, right);
            else if (Symbol.toPrimitive in left)
                result = compare_primitive(left, right);
            else if (Array.isArray(left))
                result = compare_array(left, right);
            else if (left instanceof Set)
                result = compare_set(left, right);
            else if (left instanceof Map)
                result = compare_map(left, right);
            else if (ArrayBuffer.isView(left))
                result = compare_buffer(left, right);
            else if (Symbol.iterator in left)
                result = compare_iterator(left[Symbol.iterator](), right[Symbol.iterator]());
            else
                result = false;
        }
        finally {
            left_cache.set(right, result);
        }
        return result;
    }
    $.$mol_compare_deep = $mol_compare_deep;
    function compare_array(left, right) {
        const len = left.length;
        if (len !== right.length)
            return false;
        for (let i = 0; i < len; ++i) {
            if (!$mol_compare_deep(left[i], right[i]))
                return false;
        }
        return true;
    }
    function compare_buffer(left, right) {
        const len = left.byteLength;
        if (len !== right.byteLength)
            return false;
        if (left instanceof DataView)
            return compare_buffer(new Uint8Array(left.buffer, left.byteOffset, left.byteLength), new Uint8Array(right.buffer, right.byteOffset, right.byteLength));
        for (let i = 0; i < len; ++i) {
            if (left[i] !== right[i])
                return false;
        }
        return true;
    }
    function compare_iterator(left, right) {
        while (true) {
            const left_next = left.next();
            const right_next = right.next();
            if (left_next.done !== right_next.done)
                return false;
            if (left_next.done)
                break;
            if (!$mol_compare_deep(left_next.value, right_next.value))
                return false;
        }
        return true;
    }
    function compare_set(left, right) {
        if (left.size !== right.size)
            return false;
        return compare_iterator(left.values(), right.values());
    }
    function compare_map(left, right) {
        if (left.size !== right.size)
            return false;
        return compare_iterator(left.keys(), right.keys())
            && compare_iterator(left.values(), right.values());
    }
    function compare_pojo(left, right) {
        const left_keys = Object.getOwnPropertyNames(left);
        const right_keys = Object.getOwnPropertyNames(right);
        if (!compare_array(left_keys, right_keys))
            return false;
        for (let key of left_keys) {
            if (!$mol_compare_deep(left[key], right[key]))
                return false;
        }
        const left_syms = Object.getOwnPropertySymbols(left);
        const right_syms = Object.getOwnPropertySymbols(right);
        if (!compare_array(left_syms, right_syms))
            return false;
        for (let key of left_syms) {
            if (!$mol_compare_deep(left[key], right[key]))
                return false;
        }
        return true;
    }
    function compare_primitive(left, right) {
        return Object.is(left[Symbol.toPrimitive]('default'), right[Symbol.toPrimitive]('default'));
    }
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/compare/deep/README.md" ] = "IyAkbW9sX2NvbXBhcmVfZGVlcAoKRGVlcGx5IGNvbXBhcmVzIHR3byB2YWx1ZXMuIFN1cHBvcnRzIGN5Y2xpYyByZWZlcmVuY2VzLiBVc2VzIGNhY2hlIHRvIHByZXZlbnQgbXVsdGlwbGUgY29tcGFyaXNvbiBvZiBzYW1lIHBhaXIuCgojIyBbQmVuY2htYXJrXShodHRwczovL3BlcmYuanMuaHlvby5ydS8jIXByZWZpeGVzPSU1QiUyMmNvbnN0JTIwY29tcGFyZSUyMCUzRCUyMCUyNG1vbF9jb21wYXJlX2RlZXAlMjIlMkMlMjJjb25zdCUyMGNvbXBhcmUlMjAlM0QlMjAlMjRtb2xfaW1wb3J0Lm1vZHVsZSUyOCU1Q24lNUN0J2h0dHBzJTNBJTJGJTJGZXNtLnNoJTJGZGVlcC1lcWwnJTVDbiUyOS5kZWZhdWx0JTIyJTJDJTIyY29uc3QlMjBjb21wYXJlJTIwJTNEJTIwJTI0bW9sX2ltcG9ydC5tb2R1bGUlMjglNUNuJTVDdCdodHRwcyUzQSUyRiUyRmVzbS5zaCUyRmRlZXAtZXF1YWwnJTVDbiUyOS5kZWZhdWx0JTIyJTJDJTIyY29uc3QlMjBjb21wYXJlJTIwJTNEJTIwJTI0bW9sX2ltcG9ydC5tb2R1bGUlMjglNUNuJTVDdCdodHRwcyUzQSUyRiUyRmVzbS5zaCUyRmZhc3QtZXF1YWxzJyU1Q24lMjkuY2lyY3VsYXJEZWVwRXF1YWwlMjIlNUQvcHJlZml4PWxldCUyMGJhc2UlMjAlM0QlMjAlN0IlN0QlMEFsZXQlMjBlbCUyMCUzRCUyMGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQlMjglMjAnZGl2JyUyMCUyOSUwQWxldCUyMHJlcyUyMCUzRCUyMGZhbHNlJTBBJTBBY29uc3QlMjBtYWtlJTIwJTNEJTIwJTI4JTI5JTNEJTNFJTIwJTdCJTBBJTBBJTA5Y29uc3QlMjBuZXh0JTIwJTNEJTIwJTdCJTBBJTA5JTA5dmFsJTNBJTIwJTVCJTIwdHJ1ZSUyQyUyMDElMkMlMjAnMiclMjAlNUQlMkMlMEElMDklMDlvYmolM0ElMjAlNUIlMEElMDklMDklMDklMkYzJTJGJTJDJTBBJTA5JTA5JTA5ZWwlMkMlMEElMDklMDklMDluZXclMjBNYXAlMkMlMEElMDklMDklMDluZXclMjBTZXQlMkMlMEElMDklMDklMDluZXclMjBEYXRlJTI4MSUyOSUyQyUwQSUwOSUwOSU1RCUyQyUwQSUwOSU3RCUwQSUwQSUwOW5leHQub2JqLnB1c2glMjglMEElMDklMDluZXh0JTJDJTBBJTA5JTA5bmV4dC52YWwlMkMlMEElMDklMDluZXh0Lm9iaiUyQyUwQSUwOSUyOSUwQSUwQSUwOXJldHVybiUyMG5leHQlMEElN0Qvc291cmNlcz0lNUIlMjJjb25zdCUyMG5leHQlN0IlMjMlN0QlMjAlM0QlMjBtYWtlJTI4JTI5JTVDbnJlcyUyMCUzRCUyMGNvbXBhcmUlMjglMjBiYXNlJTJDJTIwbmV4dCU3QiUyMyU3RCUyMCUyOSU1Q25iYXNlJTIwJTNEJTIwbmV4dCU3QiUyMyU3RCUyMiUyQyUyMmNvbnN0JTIwbmV4dCU3QiUyMyU3RCUyMCUzRCUyMG1ha2UlMjglMjklNUNucmVzJTIwJTNEJTIwY29tcGFyZSUyOCUyMGJhc2UlMkMlMjBuZXh0JTdCJTIzJTdEJTIwJTI5JTVDbmJhc2UlMjAlM0QlMjBuZXh0JTdCJTIzJTdEJTIyJTJDJTIyY29uc3QlMjBuZXh0JTdCJTIzJTdEJTIwJTNEJTIwbWFrZSUyOCUyOSU1Q25yZXMlMjAlM0QlMjBjb21wYXJlJTI4JTIwYmFzZSUyQyUyMG5leHQlN0IlMjMlN0QlMkMlMjAlN0IlMjBzdHJpY3QlM0ElMjB0cnVlJTIwJTdEJTIwJTI5JTVDbmJhc2UlMjAlM0QlMjBuZXh0JTdCJTIzJTdEJTIyJTJDJTIyY29uc3QlMjBuZXh0JTdCJTIzJTdEJTIwJTNEJTIwbWFrZSUyOCUyOSU1Q25yZXMlMjAlM0QlMjBjb21wYXJlJTI4JTIwYmFzZSUyQyUyMG5leHQlN0IlMjMlN0QlMjAlMjklNUNuYmFzZSUyMCUzRCUyMG5leHQlN0IlMjMlN0QlMjIlNUQvcG9zdGZpeD1jb25zdCUyMHglMjAlM0QlMjAlNUIxJTVEJTBBJTI0bW9sX2Fzc2VydF9vayUyOCUyMGNvbXBhcmUlMjglMEElMDklNUIlN0IlMjBhJTNBJTIwJTVCMSU1RCUyQyUyMGIlM0ElMjAlMjB4JTIwJTIwJTdEJTVEJTJDJTBBJTA5JTVCJTdCJTIwYSUzQSUyMCUyMHglMkMlMjAlMjBiJTNBJTIwJTVCMSU1RCUyMCU3RCU1RCUyQyUwQSUyOSUyMCUyOSUwQSUwQSUyNG1vbF9hc3NlcnRfbm90JTI4JTIwY29tcGFyZSUyOCUyMCU3QiU3RCUyQyUyMG1ha2UlMjglMjklMjAlMjklMjAlMjklMEElMjRtb2xfYXNzZXJ0X29rJTI4JTIwY29tcGFyZSUyOCUyMG1ha2UlMjglMjklMkMlMjBtYWtlJTI4JTI5JTIwJTI5JTIwJTI5KQoKIVtdKGh0dHBzOi8vaS5pbWd1ci5jb20vY3BJZWhrdi5wbmcpCgojIyBVc2FnZSBmcm9tIE1BTQoKYGBganMKbGV0IHggPSB7IGE6IG5ldyBVaW50OEFycmF5KFsxXSkgfQpsZXQgeSA9IHsgYTogbmV3IFVpbnQ4QXJyYXkoWzFdKSB9CnguYiA9IHkKeS5iID0geAoKLy8gdHJ1ZSwgZXF1YWxzCiRtb2xfY29tcGFyZV9kZWVwKCB4LCB5ICkKCi8vIGZhbHNlLCBkb24ndCBlcXVhbHMKJG1vbF9jb21wYXJlX2RlZXAoIG5ldyBVaW50OEFycmF5KFsxXSksIG5ldyBVaW50OEFycmF5KFsyXSkgKQpgYGAKCiMjIFVzYWdlIGZyb20gTlBNCgpgYGBzaApucG0gaW5zdGFsbCBtb2xfY29tcGFyZV9kZWVwCmBgYAoKWyFbXShodHRwczovL2JhZGdlbi5uZXQvYnVuZGxlcGhvYmlhL21pbnppcC9tb2xfY29tcGFyZV9kZWVwKV0oaHR0cHM6Ly9idW5kbGVwaG9iaWEuY29tL3BhY2thZ2UvbW9sX2NvbXBhcmVfZGVlcCkKCgoqKkltcG9ydCBhcyBFU00qKgoKYGBganMKaW1wb3J0IHsgJG1vbF9jb21wYXJlX2RlZXAgfSBmcm9tICdtb2xfY29tcGFyZV9kZWVwJwpgYGAKCioqSW1wb3J0IGFzIENKUyoqCgpgYGBqcwpjb25zdCB7ICRtb2xfY29tcGFyZV9kZWVwIH0gPSByZXF1aXJlKCAnbW9sX2NvbXBhcmVfZGVlcCcgKQpgYGAK"

;
"use strict";
var $;
(function ($) {
    function $mol_log3_area_lazy(event) {
        const self = this;
        const stack = self.$mol_log3_stack;
        const deep = stack.length;
        let logged = false;
        stack.push(() => {
            logged = true;
            self.$mol_log3_area.call(self, event);
        });
        return () => {
            if (logged)
                self.console.groupEnd();
            if (stack.length > deep)
                stack.length = deep;
        };
    }
    $.$mol_log3_area_lazy = $mol_log3_area_lazy;
    $.$mol_log3_stack = [];
})($ || ($ = {}));

;
"use strict";

;
"use strict";
var $;
(function ($) {
    function $mol_log3_web_make(level, color) {
        return function $mol_log3_logger(event) {
            const pending = this.$mol_log3_stack.pop();
            if (pending)
                pending();
            let tpl = '%c';
            const chunks = Object.entries(event);
            for (let i = 0; i < chunks.length; ++i) {
                tpl += (typeof chunks[i][1] === 'string') ? '%s: %s\n' : '%s: %o\n';
            }
            const style = `color:${color};font-weight:bolder`;
            this.console[level](tpl.trim(), style, ...[].concat(...chunks));
            const self = this;
            return () => self.console.groupEnd();
        };
    }
    $.$mol_log3_web_make = $mol_log3_web_make;
    $.$mol_log3_come = $mol_log3_web_make('info', 'royalblue');
    $.$mol_log3_done = $mol_log3_web_make('info', 'forestgreen');
    $.$mol_log3_fail = $mol_log3_web_make('error', 'orangered');
    $.$mol_log3_warn = $mol_log3_web_make('warn', 'goldenrod');
    $.$mol_log3_rise = $mol_log3_web_make('log', 'magenta');
    $.$mol_log3_area = $mol_log3_web_make('group', 'cyan');
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_wire_task extends $mol_wire_fiber {
        static getter(task) {
            return function $mol_wire_task_get(host, args) {
                const sub = $mol_wire_auto();
                const existen = sub?.track_next();
                reuse: if (existen) {
                    if (!existen.temp)
                        break reuse;
                    if (existen.host !== host)
                        break reuse;
                    if (existen.task !== task)
                        break reuse;
                    if (!$mol_compare_deep(existen.args, args))
                        break reuse;
                    return existen;
                }
                const key = (host?.[Symbol.toStringTag] ?? host) + ('.' + task.name + '<#>');
                const next = new $mol_wire_task(key, task, host, args);
                if (existen?.temp) {
                    $$.$mol_log3_warn({
                        place: '$mol_wire_task',
                        message: `Non idempotency`,
                        sub,
                        pubs: [...sub?.pub_list ?? [], existen],
                        next,
                        hint: 'Ignore it',
                    });
                }
                return next;
            };
        }
        get temp() {
            return true;
        }
        complete() {
            if ($mol_promise_like(this.cache))
                return;
            this.destructor();
        }
        put(next) {
            const prev = this.cache;
            this.cache = next;
            if ($mol_promise_like(next)) {
                this.cursor = $mol_wire_cursor.fresh;
                if (next !== prev)
                    this.emit();
                if ($mol_owning_catch(this, next)) {
                    try {
                        next[Symbol.toStringTag] = this[Symbol.toStringTag];
                    }
                    catch {
                        Object.defineProperty(next, Symbol.toStringTag, { value: this[Symbol.toStringTag] });
                    }
                }
                return next;
            }
            this.cursor = $mol_wire_cursor.final;
            if (this.sub_empty)
                this.destructor();
            else if (next !== prev)
                this.emit();
            return next;
        }
    }
    $.$mol_wire_task = $mol_wire_task;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_wire_method(host, field, descr) {
        if (!descr)
            descr = Reflect.getOwnPropertyDescriptor(host, field);
        const orig = descr?.value ?? host[field];
        const sup = Reflect.getPrototypeOf(host);
        if (typeof sup[field] === 'function') {
            Object.defineProperty(orig, 'name', { value: sup[field].name });
        }
        const temp = $mol_wire_task.getter(orig);
        const value = function (...args) {
            const fiber = temp(this ?? null, args);
            return fiber.sync();
        };
        Object.defineProperty(value, 'name', { value: orig.name + ' ' });
        Object.assign(value, { orig });
        const descr2 = { ...descr, value };
        Reflect.defineProperty(host, field, descr2);
        return descr2;
    }
    $.$mol_wire_method = $mol_wire_method;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/wire/method/README.md" ] = "IyMgJG1vbF93aXJlX21ldGhvZAoKRGVjb3JhdGVzIG1ldGhvZCB0byBmaWJlciB0byBlbnN1cmUgaXQgaXMgZXhlY3V0ZWQgb25seSBvbmNlIGluc2lkZSBvdGhlciBmaWJlci4KCioqVXNlIFskbW9sX2FjdGlvbl0oLi4vLi4vYWN0aW9uKSBhbGlhcyBvdXRzaWRlICRtb2xfd2lyZSoqCgpgYGB0eXBlc2NyaXB0CmNsYXNzIEFwcCB7CgoJQCAkbW9sX3dpcmVfbWV0aG9kCglsb2coIC4uLiBhcmdzOiBhbnlbXSApIHsKCQljb25zb2xlLmxvZyggLi4uIGFyZ3MgKQoJfQoKCUAgJG1vbF93aXJlX21ldGhvZAoJcnVuKCkgewoJCSRtb2xfd2lyZV9zeW5jKCBjb25zb2xlICkubG9nKCAnUHJlcGFyZScgKSAvLyBjYWxscyB0d2ljZSwgbG9ncyBvbmNlCgkJdGhpcy5sb2coICdTdGFydGVkJyApIC8vIGNhbGxzIHR3aWNlLCBsb2dzIG9uY2UKCQl0aGlzLmxvZyggVXNlci5uYW1lKCkgKSAvLyBMb2FkcyBkYXRhIGZyb20gc2VydmVyCgkJdGhpcy5sb2coICdGaW5pc2hlZCcgKSAvLyBjYWxscyBvbmNlLCBsb2dzIG9uY2UKCX0KCQp9CgokbW9sX3dpcmVfYXN5bmMoIEFwcCApLnJ1bigpIC8vIEl0IG11c3QgYmUgYXN5bmMgYXQgdG9wIGxldmVsCmBgYAo="

;
"use strict";

;
"use strict";

;
"use strict";
var $;
(function ($) {
    const catched = new WeakMap();
    function $mol_fail_catch(error) {
        if (typeof error !== 'object')
            return false;
        if ($mol_promise_like(error))
            $mol_fail_hidden(error);
        if (catched.get(error))
            return false;
        catched.set(error, true);
        return true;
    }
    $.$mol_fail_catch = $mol_fail_catch;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_fail_log(error) {
        if ($mol_promise_like(error))
            return false;
        if (!$mol_fail_catch(error))
            return false;
        console.error(error);
        return true;
    }
    $.$mol_fail_log = $mol_fail_log;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_wire_atom extends $mol_wire_fiber {
        static solo(host, task) {
            const field = task.name + '()';
            const existen = Object.getOwnPropertyDescriptor(host ?? task, field)?.value;
            if (existen)
                return existen;
            const prefix = host?.[Symbol.toStringTag] ?? (host instanceof Function ? $$.$mol_func_name(host) : host);
            const key = prefix + ('.' + task.name + '<>');
            const fiber = new $mol_wire_atom(key, task, host, []);
            (host ?? task)[field] = fiber;
            return fiber;
        }
        static plex(host, task, key) {
            const field = task.name + '()';
            let dict = Object.getOwnPropertyDescriptor(host ?? task, field)?.value;
            const prefix = host?.[Symbol.toStringTag] ?? (host instanceof Function ? $$.$mol_func_name(host) : host);
            const key_str = $mol_key(key);
            if (dict) {
                const existen = dict.get(key_str);
                if (existen)
                    return existen;
            }
            else {
                dict = (host ?? task)[field] = new Map();
            }
            const id = prefix + ('.' + task.name) + ('<' + key_str.replace(/^"|"$/g, "'") + '>');
            const fiber = new $mol_wire_atom(id, task, host, [key]);
            dict.set(key_str, fiber);
            return fiber;
        }
        static watching = new Set();
        static watcher = null;
        static watch() {
            $mol_wire_atom.watcher = new $mol_after_frame($mol_wire_atom.watch);
            for (const atom of $mol_wire_atom.watching) {
                if (atom.cursor === $mol_wire_cursor.final) {
                    $mol_wire_atom.watching.delete(atom);
                }
                else {
                    atom.cursor = $mol_wire_cursor.stale;
                    atom.fresh();
                }
            }
        }
        watch() {
            if (!$mol_wire_atom.watcher) {
                $mol_wire_atom.watcher = new $mol_after_frame($mol_wire_atom.watch);
            }
            $mol_wire_atom.watching.add(this);
        }
        resync(args) {
            return this.put(this.task.call(this.host, ...args));
        }
        once() {
            return this.sync();
        }
        channel() {
            return Object.assign((next) => {
                if (next !== undefined)
                    return this.resync([...this.args, next]);
                if (!$mol_wire_fiber.warm)
                    return this.result();
                if ($mol_wire_auto()?.temp) {
                    return this.once();
                }
                else {
                    return this.sync();
                }
            }, { atom: this });
        }
        destructor() {
            super.destructor();
            if (this.pub_from === 0) {
                ;
                (this.host ?? this.task)[this.field()] = null;
            }
            else {
                ;
                (this.host ?? this.task)[this.field()].delete($mol_key(this.args[0]));
            }
        }
        put(next) {
            const prev = this.cache;
            update: if (next !== prev) {
                try {
                    if ($mol_compare_deep(prev, next))
                        break update;
                }
                catch (error) {
                    $mol_fail_log(error);
                }
                if ($mol_owning_check(this, prev)) {
                    prev.destructor();
                }
                if ($mol_owning_catch(this, next)) {
                    try {
                        next[Symbol.toStringTag] = this[Symbol.toStringTag];
                    }
                    catch {
                        Object.defineProperty(next, Symbol.toStringTag, { value: this[Symbol.toStringTag] });
                    }
                }
                if (!this.sub_empty)
                    this.emit();
            }
            this.cache = next;
            this.cursor = $mol_wire_cursor.fresh;
            if ($mol_promise_like(next))
                return next;
            this.complete_pubs();
            return next;
        }
    }
    __decorate([
        $mol_wire_method
    ], $mol_wire_atom.prototype, "resync", null);
    __decorate([
        $mol_wire_method
    ], $mol_wire_atom.prototype, "once", null);
    $.$mol_wire_atom = $mol_wire_atom;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_wire_solo(host, field, descr) {
        if (!descr)
            descr = Reflect.getOwnPropertyDescriptor(host, field);
        const orig = descr?.value ?? host[field];
        const sup = Reflect.getPrototypeOf(host);
        if (typeof sup[field] === 'function') {
            Object.defineProperty(orig, 'name', { value: sup[field].name });
        }
        const descr2 = {
            ...descr,
            value: function (...args) {
                let atom = $mol_wire_atom.solo(this, orig);
                if ((args.length === 0) || (args[0] === undefined)) {
                    if (!$mol_wire_fiber.warm)
                        return atom.result();
                    if ($mol_wire_auto()?.temp) {
                        return atom.once();
                    }
                    else {
                        return atom.sync();
                    }
                }
                return atom.resync(args);
            }
        };
        Reflect.defineProperty(descr2.value, 'name', { value: orig.name + ' ' });
        Reflect.defineProperty(descr2.value, 'length', { value: orig.length });
        Object.assign(descr2.value, { orig });
        Reflect.defineProperty(host, field, descr2);
        return descr2;
    }
    $.$mol_wire_solo = $mol_wire_solo;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/wire/solo/readme.md" ] = "IyAkbW9sX3dpcmVfc29sbwoKRGVjb3JhdGVzIHNvbG8gb2JqZWN0IGNoYW5uZWwgdG8gWyRtb2xfd2lyZV9hdG9tXSguLi9hdG9tKS4KCioqVXNlIFskbW9sX21lbV0oLi4vLi4vbWVtKSBhbGlhcyBvdXRzaWRlICRtb2xfd2lyZSoqCgpgYGB0eXBlc2NyaXB0CmNsYXNzIEFwcCB7CgoJLy8gUHJpbWFyeSBzdGF0ZQoJQCAkbW9sX3dpcmVfc29sbwoJY291bnQoIG5leHQgPSAwICkgewoJCXJldHVybiBuZXh0Cgl9CgoJLy8gRGVyaXZlZCBzdGF0ZQoJQCAkbW9sX3dpcmVfc29sbwoJZG91YmxlKCBuZXh0PzogbnVtYmVyICkgewoJCXJldHVybiB0aGlzLmNvdW50KCBuZXh0Py52YWx1ZU9mICYmIG5leHQgLyAyICkgKiAyCgl9CgkKfQpgYGAK"

;
"use strict";
var $;
(function ($) {
    function $mol_wire_plex(host, field, descr) {
        if (!descr)
            descr = Reflect.getOwnPropertyDescriptor(host, field);
        const orig = descr?.value ?? host[field];
        const sup = Reflect.getPrototypeOf(host);
        if (typeof sup[field] === 'function') {
            Object.defineProperty(orig, 'name', { value: sup[field].name });
        }
        const descr2 = {
            ...descr,
            value: function (...args) {
                let atom = $mol_wire_atom.plex(this, orig, args[0]);
                if ((args.length === 1) || (args[1] === undefined)) {
                    if (!$mol_wire_fiber.warm)
                        return atom.result();
                    if ($mol_wire_auto()?.temp) {
                        return atom.once();
                    }
                    else {
                        return atom.sync();
                    }
                }
                return atom.resync(args);
            }
        };
        Reflect.defineProperty(descr2.value, 'name', { value: orig.name + ' ' });
        Reflect.defineProperty(descr2.value, 'length', { value: orig.length });
        Object.assign(descr2.value, { orig });
        Reflect.defineProperty(host, field, descr2);
        return descr2;
    }
    $.$mol_wire_plex = $mol_wire_plex;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $.$mol_mem = $mol_wire_solo;
    $.$mol_mem_key = $mol_wire_plex;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_window extends $mol_object {
        static size() {
            this.resizes();
            return {
                width: self.innerWidth,
                height: self.innerHeight,
            };
        }
        static resizes(next) { return next; }
    }
    __decorate([
        $mol_mem
    ], $mol_window, "size", null);
    __decorate([
        $mol_mem
    ], $mol_window, "resizes", null);
    $.$mol_window = $mol_window;
    self.addEventListener('resize', event => $mol_window.resizes(event));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $.$mol_dom_context = self;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_view_selection extends $mol_object {
        static focused(next, notify) {
            const parents = [];
            let element = next?.[0] ?? $mol_dom_context.document.activeElement;
            while (element?.shadowRoot) {
                element = element.shadowRoot.activeElement;
            }
            while (element) {
                parents.push(element);
                const parent = element.parentNode;
                if (parent instanceof ShadowRoot)
                    element = parent.host;
                else
                    element = parent;
            }
            if (!next || notify)
                return parents;
            new $mol_after_tick(() => {
                const element = this.focused()[0];
                if (element)
                    element.focus();
                else
                    $mol_dom_context.blur();
            });
            return parents;
        }
    }
    __decorate([
        $mol_mem
    ], $mol_view_selection, "focused", null);
    $.$mol_view_selection = $mol_view_selection;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_maybe(value) {
        return (value == null) ? [] : [value];
    }
    $.$mol_maybe = $mol_maybe;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $.$mol_dom = $mol_dom_context;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    let $mol_keyboard_code;
    (function ($mol_keyboard_code) {
        $mol_keyboard_code[$mol_keyboard_code["backspace"] = 8] = "backspace";
        $mol_keyboard_code[$mol_keyboard_code["tab"] = 9] = "tab";
        $mol_keyboard_code[$mol_keyboard_code["enter"] = 13] = "enter";
        $mol_keyboard_code[$mol_keyboard_code["shift"] = 16] = "shift";
        $mol_keyboard_code[$mol_keyboard_code["ctrl"] = 17] = "ctrl";
        $mol_keyboard_code[$mol_keyboard_code["alt"] = 18] = "alt";
        $mol_keyboard_code[$mol_keyboard_code["pause"] = 19] = "pause";
        $mol_keyboard_code[$mol_keyboard_code["capsLock"] = 20] = "capsLock";
        $mol_keyboard_code[$mol_keyboard_code["escape"] = 27] = "escape";
        $mol_keyboard_code[$mol_keyboard_code["space"] = 32] = "space";
        $mol_keyboard_code[$mol_keyboard_code["pageUp"] = 33] = "pageUp";
        $mol_keyboard_code[$mol_keyboard_code["pageDown"] = 34] = "pageDown";
        $mol_keyboard_code[$mol_keyboard_code["end"] = 35] = "end";
        $mol_keyboard_code[$mol_keyboard_code["home"] = 36] = "home";
        $mol_keyboard_code[$mol_keyboard_code["left"] = 37] = "left";
        $mol_keyboard_code[$mol_keyboard_code["up"] = 38] = "up";
        $mol_keyboard_code[$mol_keyboard_code["right"] = 39] = "right";
        $mol_keyboard_code[$mol_keyboard_code["down"] = 40] = "down";
        $mol_keyboard_code[$mol_keyboard_code["insert"] = 45] = "insert";
        $mol_keyboard_code[$mol_keyboard_code["delete"] = 46] = "delete";
        $mol_keyboard_code[$mol_keyboard_code["key0"] = 48] = "key0";
        $mol_keyboard_code[$mol_keyboard_code["key1"] = 49] = "key1";
        $mol_keyboard_code[$mol_keyboard_code["key2"] = 50] = "key2";
        $mol_keyboard_code[$mol_keyboard_code["key3"] = 51] = "key3";
        $mol_keyboard_code[$mol_keyboard_code["key4"] = 52] = "key4";
        $mol_keyboard_code[$mol_keyboard_code["key5"] = 53] = "key5";
        $mol_keyboard_code[$mol_keyboard_code["key6"] = 54] = "key6";
        $mol_keyboard_code[$mol_keyboard_code["key7"] = 55] = "key7";
        $mol_keyboard_code[$mol_keyboard_code["key8"] = 56] = "key8";
        $mol_keyboard_code[$mol_keyboard_code["key9"] = 57] = "key9";
        $mol_keyboard_code[$mol_keyboard_code["A"] = 65] = "A";
        $mol_keyboard_code[$mol_keyboard_code["B"] = 66] = "B";
        $mol_keyboard_code[$mol_keyboard_code["C"] = 67] = "C";
        $mol_keyboard_code[$mol_keyboard_code["D"] = 68] = "D";
        $mol_keyboard_code[$mol_keyboard_code["E"] = 69] = "E";
        $mol_keyboard_code[$mol_keyboard_code["F"] = 70] = "F";
        $mol_keyboard_code[$mol_keyboard_code["G"] = 71] = "G";
        $mol_keyboard_code[$mol_keyboard_code["H"] = 72] = "H";
        $mol_keyboard_code[$mol_keyboard_code["I"] = 73] = "I";
        $mol_keyboard_code[$mol_keyboard_code["J"] = 74] = "J";
        $mol_keyboard_code[$mol_keyboard_code["K"] = 75] = "K";
        $mol_keyboard_code[$mol_keyboard_code["L"] = 76] = "L";
        $mol_keyboard_code[$mol_keyboard_code["M"] = 77] = "M";
        $mol_keyboard_code[$mol_keyboard_code["N"] = 78] = "N";
        $mol_keyboard_code[$mol_keyboard_code["O"] = 79] = "O";
        $mol_keyboard_code[$mol_keyboard_code["P"] = 80] = "P";
        $mol_keyboard_code[$mol_keyboard_code["Q"] = 81] = "Q";
        $mol_keyboard_code[$mol_keyboard_code["R"] = 82] = "R";
        $mol_keyboard_code[$mol_keyboard_code["S"] = 83] = "S";
        $mol_keyboard_code[$mol_keyboard_code["T"] = 84] = "T";
        $mol_keyboard_code[$mol_keyboard_code["U"] = 85] = "U";
        $mol_keyboard_code[$mol_keyboard_code["V"] = 86] = "V";
        $mol_keyboard_code[$mol_keyboard_code["W"] = 87] = "W";
        $mol_keyboard_code[$mol_keyboard_code["X"] = 88] = "X";
        $mol_keyboard_code[$mol_keyboard_code["Y"] = 89] = "Y";
        $mol_keyboard_code[$mol_keyboard_code["Z"] = 90] = "Z";
        $mol_keyboard_code[$mol_keyboard_code["metaLeft"] = 91] = "metaLeft";
        $mol_keyboard_code[$mol_keyboard_code["metaRight"] = 92] = "metaRight";
        $mol_keyboard_code[$mol_keyboard_code["select"] = 93] = "select";
        $mol_keyboard_code[$mol_keyboard_code["numpad0"] = 96] = "numpad0";
        $mol_keyboard_code[$mol_keyboard_code["numpad1"] = 97] = "numpad1";
        $mol_keyboard_code[$mol_keyboard_code["numpad2"] = 98] = "numpad2";
        $mol_keyboard_code[$mol_keyboard_code["numpad3"] = 99] = "numpad3";
        $mol_keyboard_code[$mol_keyboard_code["numpad4"] = 100] = "numpad4";
        $mol_keyboard_code[$mol_keyboard_code["numpad5"] = 101] = "numpad5";
        $mol_keyboard_code[$mol_keyboard_code["numpad6"] = 102] = "numpad6";
        $mol_keyboard_code[$mol_keyboard_code["numpad7"] = 103] = "numpad7";
        $mol_keyboard_code[$mol_keyboard_code["numpad8"] = 104] = "numpad8";
        $mol_keyboard_code[$mol_keyboard_code["numpad9"] = 105] = "numpad9";
        $mol_keyboard_code[$mol_keyboard_code["multiply"] = 106] = "multiply";
        $mol_keyboard_code[$mol_keyboard_code["add"] = 107] = "add";
        $mol_keyboard_code[$mol_keyboard_code["subtract"] = 109] = "subtract";
        $mol_keyboard_code[$mol_keyboard_code["decimal"] = 110] = "decimal";
        $mol_keyboard_code[$mol_keyboard_code["divide"] = 111] = "divide";
        $mol_keyboard_code[$mol_keyboard_code["F1"] = 112] = "F1";
        $mol_keyboard_code[$mol_keyboard_code["F2"] = 113] = "F2";
        $mol_keyboard_code[$mol_keyboard_code["F3"] = 114] = "F3";
        $mol_keyboard_code[$mol_keyboard_code["F4"] = 115] = "F4";
        $mol_keyboard_code[$mol_keyboard_code["F5"] = 116] = "F5";
        $mol_keyboard_code[$mol_keyboard_code["F6"] = 117] = "F6";
        $mol_keyboard_code[$mol_keyboard_code["F7"] = 118] = "F7";
        $mol_keyboard_code[$mol_keyboard_code["F8"] = 119] = "F8";
        $mol_keyboard_code[$mol_keyboard_code["F9"] = 120] = "F9";
        $mol_keyboard_code[$mol_keyboard_code["F10"] = 121] = "F10";
        $mol_keyboard_code[$mol_keyboard_code["F11"] = 122] = "F11";
        $mol_keyboard_code[$mol_keyboard_code["F12"] = 123] = "F12";
        $mol_keyboard_code[$mol_keyboard_code["numLock"] = 144] = "numLock";
        $mol_keyboard_code[$mol_keyboard_code["scrollLock"] = 145] = "scrollLock";
        $mol_keyboard_code[$mol_keyboard_code["semicolon"] = 186] = "semicolon";
        $mol_keyboard_code[$mol_keyboard_code["equals"] = 187] = "equals";
        $mol_keyboard_code[$mol_keyboard_code["comma"] = 188] = "comma";
        $mol_keyboard_code[$mol_keyboard_code["dash"] = 189] = "dash";
        $mol_keyboard_code[$mol_keyboard_code["period"] = 190] = "period";
        $mol_keyboard_code[$mol_keyboard_code["forwardSlash"] = 191] = "forwardSlash";
        $mol_keyboard_code[$mol_keyboard_code["graveAccent"] = 192] = "graveAccent";
        $mol_keyboard_code[$mol_keyboard_code["bracketOpen"] = 219] = "bracketOpen";
        $mol_keyboard_code[$mol_keyboard_code["slashBack"] = 220] = "slashBack";
        $mol_keyboard_code[$mol_keyboard_code["slashBackLeft"] = 226] = "slashBackLeft";
        $mol_keyboard_code[$mol_keyboard_code["bracketClose"] = 221] = "bracketClose";
        $mol_keyboard_code[$mol_keyboard_code["quoteSingle"] = 222] = "quoteSingle";
    })($mol_keyboard_code = $.$mol_keyboard_code || ($.$mol_keyboard_code = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    if ($mol_dom_context.document) {
        function focus(event) {
            const target = event.target;
            if (target?.shadowRoot)
                watch(target.shadowRoot);
            $mol_view_selection.focused($mol_maybe(target), 'notify');
        }
        function watch(root) {
            root.removeEventListener('focus', focus, true);
            root.addEventListener('focus', focus, true);
        }
        watch($mol_dom_context.document);
        $mol_dom.document.addEventListener('keydown', event => {
            if (!event.altKey)
                return;
            const self = $mol_view_selection.focused()[0];
            if (!self)
                return;
            switch (event.keyCode) {
                case $mol_keyboard_code.down:
                    var vert = 1, hor = 0;
                    break;
                case $mol_keyboard_code.up:
                    var vert = -1, hor = 0;
                    break;
                case $mol_keyboard_code.left:
                    var hor = -1, vert = 0;
                    break;
                case $mol_keyboard_code.right:
                    var hor = 1, vert = 0;
                    break;
                default: return;
            }
            event.preventDefault();
            const self_rect = self.getBoundingClientRect();
            const center_hor = (self_rect.left + self_rect.right) / 2;
            const center_vert = (self_rect.top + self_rect.bottom) / 2;
            const all = [...$mol_dom.document.querySelectorAll(':where( [role="button"], [role="checkbox"], input, button, a ):not([disabled])')]
                .map(el => {
                const rect = el.getBoundingClientRect();
                const dist = (Math.max(0, center_hor - rect.right) + Math.max(0, rect.left - center_hor)) * vert * vert
                    + (Math.max(0, center_vert - rect.bottom) + Math.max(0, rect.top - center_vert)) * hor * hor;
                return [el, rect, dist];
            })
                .filter(([el, rect]) => {
                if (el === self)
                    return false;
                if (vert > 0 && rect.top < self_rect.bottom)
                    return false;
                if (vert < 0 && rect.bottom > self_rect.top)
                    return false;
                if (hor > 0 && rect.left < self_rect.right)
                    return false;
                if (hor < 0 && rect.right > self_rect.left)
                    return false;
                return true;
            })
                .sort(([, one, dist1], [, two, dist2]) => {
                return (dist1 - dist2) || ((one.top - two.top) * vert + (one.left - two.left) * hor);
            });
            const target = all[0]?.[0];
            target?.focus();
        });
    }
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_wrapper extends $mol_object2 {
        static wrap;
        static run(task) {
            return this.func(task)();
        }
        static func(func) {
            return this.wrap(func);
        }
        static get class() {
            return (Class) => {
                const construct = (target, args) => new Class(...args);
                const handler = {
                    construct: this.func(construct)
                };
                handler[Symbol.toStringTag] = Class.name + '#';
                return new Proxy(Class, handler);
            };
        }
        static get method() {
            return (obj, name, descr) => {
                descr.value = this.func(descr.value);
                return descr;
            };
        }
        static get field() {
            return (obj, name, descr) => {
                descr.get = descr.set = this.func(descr.get);
                return descr;
            };
        }
    }
    $.$mol_wrapper = $mol_wrapper;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_memo extends $mol_wrapper {
        static wrap(task) {
            const store = new WeakMap();
            const fun = function (next) {
                if (next === undefined && store.has(this))
                    return store.get(this);
                const val = task.call(this, next) ?? next;
                store.set(this, val);
                return val;
            };
            Reflect.defineProperty(fun, 'name', { value: task.name + ' ' });
            return fun;
        }
    }
    $.$mol_memo = $mol_memo;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_dom_qname(name) {
        return name.replace(/\W/g, '').replace(/^(?=\d+)/, '_');
    }
    $.$mol_dom_qname = $mol_dom_qname;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_wire_probe(task, def) {
        const warm = $mol_wire_fiber.warm;
        try {
            $mol_wire_fiber.warm = false;
            const res = task();
            if (res === undefined)
                return def;
            return res;
        }
        finally {
            $mol_wire_fiber.warm = warm;
        }
    }
    $.$mol_wire_probe = $mol_wire_probe;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_wire_watch() {
        const atom = $mol_wire_auto();
        if (atom instanceof $mol_wire_atom) {
            atom.watch();
        }
        else {
            $mol_fail(new Error('Atom is required for watching'));
        }
    }
    $.$mol_wire_watch = $mol_wire_watch;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_const(value) {
        const getter = (() => value);
        getter['()'] = value;
        getter[Symbol.toStringTag] = value;
        getter[$mol_dev_format_head] = () => $mol_dev_format_span({}, '()=> ', $mol_dev_format_auto(value));
        return getter;
    }
    $.$mol_const = $mol_const;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/const/readme.md" ] = "IyAkbW9sX2NvbnN0CgpSZXR1cm5zIGNsb3N1cmUgdGhhdCByZXR1cm5zIGNvbnN0YW50IHZhbHVlLiBWYWx1ZSBjYW4gYmUgYWNjZXNzZWQgYnkgYCIoKSJgIGZpZWxkLgoKIyMgVXNhZ2UgZXhhbXBsZQoKYGBgdHlwZXNjcmlwdApuYW1lc3BhY2UgJCB7CgkKCWNvbnN0IHJuZCA9ICRtb2xfY29uc3QoIE1hdGgucmFuZG9tKCkgKQoJCgljb25zb2xlLmFzc2VydCggcm5kKCkgPT09IHJuZFsnKCknXSApCgkKfQpgYGAK"

;
"use strict";
var $;
(function ($) {
    function $mol_wire_solid() {
        let current = $mol_wire_auto();
        if (current.temp)
            current = current.host;
        if (current.reap !== nothing) {
            current?.sub_on(sub, sub.data.length);
        }
        current.reap = nothing;
    }
    $.$mol_wire_solid = $mol_wire_solid;
    const nothing = () => { };
    const sub = new $mol_wire_pub_sub;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_dom_render_attributes(el, attrs) {
        for (let name in attrs) {
            let val = attrs[name];
            if (val === undefined) {
                continue;
            }
            else if (val === null || val === false) {
                if (!el.hasAttribute(name))
                    continue;
                el.removeAttribute(name);
            }
            else {
                const str = String(val);
                if (el.getAttribute(name) === str)
                    continue;
                el.setAttribute(name, str);
            }
        }
    }
    $.$mol_dom_render_attributes = $mol_dom_render_attributes;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_dom_render_events(el, events, passive = false) {
        for (let name in events) {
            el.addEventListener(name, events[name], { passive });
        }
    }
    $.$mol_dom_render_events = $mol_dom_render_events;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_dom_render_styles(el, styles) {
        for (let name in styles) {
            let val = styles[name];
            const style = el.style;
            const kebab = (name) => name.replace(/[A-Z]/g, letter => '-' + letter.toLowerCase());
            if (typeof val === 'number') {
                style.setProperty(kebab(name), `${val}px`);
            }
            else {
                style.setProperty(kebab(name), val);
            }
        }
    }
    $.$mol_dom_render_styles = $mol_dom_render_styles;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_dom_render_children(el, childNodes) {
        const node_set = new Set(childNodes);
        let nextNode = el.firstChild;
        for (let view of childNodes) {
            if (view == null)
                continue;
            if (view instanceof $mol_dom_context.Node) {
                while (true) {
                    if (!nextNode) {
                        el.appendChild(view);
                        break;
                    }
                    if (nextNode == view) {
                        nextNode = nextNode.nextSibling;
                        break;
                    }
                    else {
                        if (node_set.has(nextNode)) {
                            el.insertBefore(view, nextNode);
                            break;
                        }
                        else {
                            const nn = nextNode.nextSibling;
                            el.removeChild(nextNode);
                            nextNode = nn;
                        }
                    }
                }
            }
            else {
                if (nextNode && nextNode.nodeName === '#text') {
                    const str = String(view);
                    if (nextNode.nodeValue !== str)
                        nextNode.nodeValue = str;
                    nextNode = nextNode.nextSibling;
                }
                else {
                    const textNode = $mol_dom_context.document.createTextNode(String(view));
                    el.insertBefore(textNode, nextNode);
                }
            }
        }
        while (nextNode) {
            const currNode = nextNode;
            nextNode = currNode.nextSibling;
            el.removeChild(currNode);
        }
    }
    $.$mol_dom_render_children = $mol_dom_render_children;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_dom_render_fields(el, fields) {
        for (let key in fields) {
            const val = fields[key];
            if (val === undefined)
                continue;
            if (val === el[key])
                continue;
            el[key] = val;
        }
    }
    $.$mol_dom_render_fields = $mol_dom_render_fields;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_wire_async(obj) {
        let fiber;
        const temp = $mol_wire_task.getter(obj);
        return new Proxy(obj, {
            get(obj, field) {
                const val = obj[field];
                if (typeof val !== 'function')
                    return val;
                let fiber;
                const temp = $mol_wire_task.getter(val);
                return function $mol_wire_async(...args) {
                    fiber?.destructor();
                    fiber = temp(obj, args);
                    return fiber.async();
                };
            },
            apply(obj, self, args) {
                fiber?.destructor();
                fiber = temp(self, args);
                return fiber.async();
            },
        });
    }
    $.$mol_wire_async = $mol_wire_async;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/wire/async/README.md" ] = "IyAkbW9sX3dpcmVfYXN5bmMKClJldHVybnMgcHJveHkgdGhhdCBjb252ZXJ0cyBhbGwgc3luY2hyb25vdXMgbWV0aG9kcyAodGhhdCBjYW4gYWNjZXNzIHRvIGZpYmVycykgdG8gYXN5bmNocm9ub3VzICh0aGF0IHJldHVybnMgYSBQcm9taXNlKS4KCmBgYHR5cGVzY3JpcHQKY29uc3QgbmFtZV9wcm9taXNlID0gJG1vbF93aXJlX2FzeW5jKCBVc2VyICkubmFtZSgpCmBgYAoKIyMgQ29uY3VycmVuY3kKCllvdSBjYW4gc3RvcmUgYm91bmQgZnVuY3Rpb24gdG8gY2FsbCBtdWx0aXBsZSB0aW1lcywgYnV0IG5leHQgZXhlY3V0aW9uIGFib3J0cyBwcmV2aW91cy4KCmBgYHR5cGVzY3JpcHQKY29uc3Qgc2V0X25hbWUgPSAkbW9sX3dpcmVfYXN5bmMoIFVzZXIgKS5uYW1lCnNldF9uYW1lKCAnam9obicgKQpzZXRfbmFtZSggJ2ppbicgKSAvLyBpbnN0YW50IGFib3J0cyBzZXR0aW5nICdqb2huJwpgYGAKCllvdSBjYW4gdXNlIHRoYXQgdG8gZGVib3VuY2U6CgpgYGB0eXBlc2NyaXB0CmNsYXNzIFVzZXIgZXh0ZW5kcyAkbW9sX29iamVjdDIgewoJCglAICRtb2xfd2lyZV9zb2xvCgluYW1lKCBuYW1lPzogc3RyaW5nICkgewoJCQoJCS8vIHB1bGwgYnJhbmNoCgkJaWYoIG5hbWUgPT09IHVuZGVmaW5lZCApIHJldHVybiAnamluJwoJCQoJCXRoaXMuJC4kbW9sX3dhaXRfdGltZW91dCggNTAwICkKCQkvLyBvbmx5IGxhc3QgZXhlY3V0aW9uIGNvbnRpbnVlcwoJCQoJCS8vIHB1c2ggdG8gc2VydmVyCgkJY29uc3QgcHJvZmlsZSA9IHRoaXMuJC4kbW9sX2ZldGNoLmpzb24oICcvcHJvZmlsZScsIHsKCQkJbmFtZTogbmV4dAoJCX0gKQoJCQoJCS8vIHVwZGF0ZSBjYWNoZSB3aXRoIGFjdHVhbCB2YWx1ZQoJCXJldHVybiBwcm9maWxlLm5hbWUKCX0KCQp9CmBgYAo="

;
"use strict";
var $;
(function ($) {
    $.$mol_action = $mol_wire_method;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/after/timeout/readme.md" ] = "IyAkbW9sX2FmdGVyX3RpbWVvdXQKClNjaGVkdWxlIGZ1bmN0aW9uIHRvIGJlIGNhbGxlZCBhZnRlciB0aW1lb3V0IGluIG1zLgoKIyBVc2FnZSBleGFtcGxlCgojIyBJbnRlcmFjdGl2ZSBjb250cm9sCgpgYGB0eXBlc2NyaXB0Ci8vIFNjaGVkdWxlCmNvbnN0IGRlZmVycmVkX3Rhc2sgPSBuZXcgJG1vbF9hZnRlcl90aW1lb3V0KCAxMDAwICwgKCk9PiBhbGVydCggJ0hlbGxvIScgKSApCgovLyBVbnNjaGVkdWxlCmRlZmVycmVkX3Rhc2suZGVzdHJ1Y3RvcigpCmBgYAoKIyMgUmVhY3RpdmUgY29udHJvbAoKYGBgdHlwZXNjcmlwdAovLyBTY2hlZHVsZSB3aGVuIGZpcnN0IGRlcGVuZGVudCBoYXMgYXBwZWFyZWQKLy8gVW5zY2hlZHVsZSBhZnRlciBsYXN0IGRlcGVuZGVudCBoYXMgZGlzYXBwZWFyZWQKQCAkbW9sX21lbQpkZWZlcnJlZF90YXNrKCkgewoJcmV0dXJuIG5ldyAkbW9sX2FmdGVyX3RpbWVvdXQoIDEwMDAgLCAoKT0+IGFsZXJ0KCAnSGVsbG8hJyApICkKfQpgYGAK"

;
"use strict";
var $;
(function ($) {
    class $mol_after_timeout extends $mol_object2 {
        delay;
        task;
        id;
        constructor(delay, task) {
            super();
            this.delay = delay;
            this.task = task;
            this.id = setTimeout(task, delay);
        }
        destructor() {
            clearTimeout(this.id);
        }
    }
    $.$mol_after_timeout = $mol_after_timeout;
})($ || ($ = {}));

;
"use strict";

;
var $node = $node || {} ; $node[ "/mol/style/readme.md" ] = "IyAkbW9sX3N0eWxlCgpTdGF0aWNhbGx5IHR5cGVkIENTUyBzdHlsZSBzaGVldHMuIEZvbGxvd2luZyBzYW1wbGVzIHNob3cgd2hpY2ggQ1NTIGNvZGUgYXJlIGdlbmVyYXRlZCBmcm9tIFRTIGNvZGUuCgojIyBBcnRpY2xlcwoKLSBb0J/RgNC+0LTQstC40L3Rg9GC0YvQuSBDU1MtaW4tVFMgXShodHRwczovL2dpdGh1Yi5jb20vbmluLWppbi9zbGlkZXMvdHJlZS9tYXN0ZXIvY3NzLWluLXRzKQoKIyMgQkVNIEJsb2NrCgpgYGB0cmVlCiRtb2xfcGFnZSAkbW9sX3ZpZXcKYGBgCgpgYGB0eXBlc2NyaXB0CiRtb2xfc3R5bGVfZGVmaW5lKCAkbW9sX3BhZ2UgLCB7CglmbGV4OiB7CgkJZGlyZWN0aW9uOiAnY29sdW1uJywKCX0sCn0gKQpgYGAKCmBgYGNzcwpbbW9sX3BhZ2VdIHsKCWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47Cn0KYGBgCgojIyBCRU0gRWxlbWVudAoKYGBgdHJlZQokbW9sX3BhZ2UgJG1vbF92aWV3CglzdWIgLwoJCTw9IEJvZHkgJG1vbF9zY3JvbGwKfQpgYGAKCmBgYHR5cGVzY3JpcHQKJG1vbF9zdHlsZV9kZWZpbmUoICRtb2xfcGFnZSAsIHsKCUJvZHk6IHsKCQlvdmVyZmxvdzogJ3Njcm9sbCcsCgl9LAp9ICkKYGBgCgpgYGBjc3MKW21vbF9wYWdlX2JvZHldIHsKCW92ZXJmbG93OiBzY3JvbGw7Cn0KYGBgCgojIyBCRU0gRWxlbWVudCBvZiBFbGVtZW50IGV0YwoKYGBgdHJlZQokbW9sX3Njcm9sbCAkbW9sX3ZpZXcKCXN1YiAvCgkJPD0gU3RydXQgJG1vbF92aWV3CiRtb2xfcGFnZSAkbW9sX3ZpZXcKCXN1YiAvCgkJPD0gQm9keSAkbW9sX3Njcm9sbApgYGAKCmBgYHR5cGVzY3JpcHQKJG1vbF9zdHlsZV9kZWZpbmUoICRtb2xfcGFnZSAsIHsKCUJvZHk6IHsKCQlTdHJ1dDogewoJCQlkaXNwbGF5OiAnbm9uZScsCgkJfSwKCX0sCn0gKQpgYGAKCmBgYGNzcwpbbW9sX3BhZ2VfYm9keV9zdHJ1dF0gewoJZGlzcGxheTogbm9uZTsKfQpgYGAKCiMjIE5lc3RlZCBjb21wb25lbnRzIGJ5IGNsYXNzIG5hbWUKCmBgYHRyZWUKJG1vbF9idXR0b24gJG1vbF92aWV3CiRteV9hcHAgJG1vbF92aWV3CmBgYAoKYGBgdHlwZXNjcmlwdAokbW9sX3N0eWxlX2RlZmluZSggJG15X2FwcCAsIHsKCSRtb2xfYnV0dG9uOiB7CgkJY3Vyc29yOiAncG9pbnRlcicsCgl9LAp9ICkKYGBgCgpgYGBjc3MKW215X2FwcF0gW21vbF9idXR0b25dIHsKCWN1cnNvcjogcG9pbnRlcjsKfQpgYGAKCiMjIENoaWxkIGNvbXBvbmVudHMgYnkgY2xhc3MgbmFtZQoKYGBgdHJlZQokbW9sX2xpc3QgJG1vbF92aWV3CmBgYAoKYGBgdHlwZXNjcmlwdAokbW9sX3N0eWxlX2RlZmluZSggJG1vbF9saXN0ICwgewoJJz4nOiB7CgkJJG1vbF92aWV3OiB7CgkJCWRpc3BsYXk6ICdibG9jaycsCgkJfSwKCX0sCn0gKQpgYGAKCmBgYGNzcwpbbW9sX2xpc3RdID4gW21vbF92aWV3XSB7CglkaXNwbGF5OiBibG9jazsKfQpgYGAKCiMjIEF0dHJpYnV0ZXMKCmBgYHRyZWUKJG1vbF9saW5rICRtb2xfdmlldwoJYXR0ciAqCgkJbW9sX2xpbmtfY3VycmVudCB0cnVlCmBgYAoKYGBgdHlwZXNjcmlwdAokbW9sX3N0eWxlX2RlZmluZSggJG1vbF9saW5rICwgewoJJ0AnOiB7CgkJbW9sX2xpbmtfY3VycmVudDogewoJCQkndHJ1ZSc6IHsKCQkJCWNvbG9yOiAnYmxhY2snLAoJCQl9LAoJCX0sCgl9LAp9ICkKYGBgCgpgYGBjc3MKW21vbF9saW5rXVttb2xfbGlua19jdXJyZW50PSJ0cnVlIl0gewoJY29sb3I6IGJsYWNrOwp9CmBgYAoKIyMgUHNldWRvIGNsYXNzZXMKCmBgYHRyZWUKJG1vbF9zdHJpbmcgJG1vbF92aWV3CmBgYAoKYGBgdHlwZXNjcmlwdAokbW9sX3N0eWxlX2RlZmluZSggJG1vbF9zdHJpbmcgLCB7CgknOmZvY3VzJzogewoJCW91dGxpbmU6ICdub25lJywKCX0sCn0gKQpgYGAKCmBgYGNzcwpbbW9sX3N0cmluZ106Zm9jdXMgewoJb3V0bGluZTogbm9uZTsKfQpgYGAKCiMjIFBzZXVkbyBlbGVtZW50cwoKYGBgdHJlZQokbW9sX3RleHQgJG1vbF92aWV3CmBgYAoKYGBgdHlwZXNjcmlwdAokbW9sX3N0eWxlX2RlZmluZSggJG1vbF90ZXh0ICwgewoJJzo6Zmlyc3QtY2hpbGQnOiB7CgkJZm9udDogewoJCQl3ZWlnaHQ6ICdib2xkZXInLAoJCX0sCgl9LAp9ICkKYGBgCgpgYGBjc3MKW21vbF90ZXh0XTo6Zmlyc3QtY2hpbGQgewoJZm9udC13ZWlnaHQ6IGJvbGRlcjsKfQpgYGAKCiMjIE1lZGlhIHF1ZXJpZXMKCmBgYHRyZWUKJG1vbF9zY3JvbGwgJG1vbF92aWV3CmBgYAoKYGBgdHlwZXNjcmlwdAokbW9sX3N0eWxlX2RlZmluZSggJG1vbF9zY3JvbGwgLCB7CgknQG1lZGlhJzogewoJCSdwcmludCc6IHsKCQkJb3ZlcmZsb3c6ICd2aXNpYmxlJywKCQl9LAoJfSwKfSApCmBgYAoKYGBgY3NzCkBtZWRpYSBwcmludCB7CglbbW9sX3Njcm9sbF0gewoJCW92ZXJmbG93OiB2aXNpYmxlOwoJfQp9CmBgYAoKIyMgVGhlbWluZwoKYGBgdHJlZQokbW9sX3BhZ2UgJG1vbF92aWV3CmBgYAoKYGBgdHlwZXNjcmlwdAokbW9sX3N0eWxlX2RlZmluZSggJG1vbF9wYWdlICwgewoJYmFja2dyb3VuZDogJG1vbF90aGVtZS5iYWNrLAoJYm94U2hhZG93OiBgMCAwIDAgMXB4ICR7ICRtb2xfdGhlbWUubGluZSB9YCwKfSApCmBgYAoKYGBgY3NzClttb2xfcGFnZV0gewoJYmFja2dyb3VuZDogdmFyKC0tbW9sX3RoZW1lX2JhY2spOwoJYm94U2hhZG93OiAwIDAgMCAxcHggdmFyKC0tbW9sX3RoZW1lX2xpbmUpOwp9CmBgYAoKIyMgQ1NTIFVuaXRzCgpgYGB0eXBlc2NyaXB0CmNvbnN0IHsgcHggLCBwZXIgfSA9ICRtb2xfc3R5bGVfdW5pdAoKJG1vbF9zdHlsZV9kZWZpbmUoICRteV92aWV3ICwgewoJd2lkdGggOiBwZXIoNTApLAoJaGVpZ2h0IDogcHgoNTApLAp9ICkKYGBgCgpgYGBjc3MKW215X3ZpZXddIHsKCXdpZHRoOiA1MCU7CgloZWlnaHQ6IDUwcHg7Cn0KYGBgCgojIyBDU1MgRnVuY3Rpb25zCgpgYGB0eXBlc2NyaXB0CmNvbnN0IHsgY2FsYyAsIGZpdF9jb250ZW50IH0gPSAkbW9sX3N0eWxlX2Z1bmMKY29uc3QgeyBwZXIgfSA9ICRtb2xfc3R5bGVfdW5pdAoKJG1vbF9zdHlsZV9kZWZpbmUoICRteV92aWV3ICwgewoJd2lkdGggOiBjYWxjKCBgMTAwJSAtIDFweGAgKSwKCWhlaWdodCA6IGZpdF9jb250ZW50KCBwZXIoNTApICksCn0gKQpgYGAKCmBgYGNzcwpbbXlfdmlld10gewoJd2lkdGg6IGNhbGMoMTAwJSAtIDFweCk7CgloZWlnaHQ6IGZpdC1jb250ZW50KDUwJSk7Cn0KYGBgCgojIyBQcm9wZXJ0eSBncm91cHMKCmBgYHR5cGVzY3JpcHQKJG1vbF9zdHlsZV9kZWZpbmUoICRteV92aWV3ICwgewoJZmxleCA6IHsKCQlncm93IDogMSwKCQlzaHJpbmsgOiAwLAoJCWJhc2lzIDogJ2F1dG8nLAoJfSwKfSApCmBgYAoKYGBgY3NzCltteV92aWV3XSB7CglmbGV4LWdyb3c6IDE7CglmbGV4LXNocmluazogMDsKCWZsZXgtYmFzaXM6IGF1dG87Cn0KYGBgCg=="

;
"use strict";
var $;
(function ($) {
    function $mol_style_attach(id, text) {
        const doc = $mol_dom_context.document;
        if (!doc)
            return null;
        const elid = `$mol_style_attach:${id}`;
        let el = doc.getElementById(elid);
        if (!el) {
            el = doc.createElement('style');
            el.id = elid;
            doc.head.appendChild(el);
        }
        if (el.innerHTML != text)
            el.innerHTML = text;
        return el;
    }
    $.$mol_style_attach = $mol_style_attach;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_promise extends Promise {
        done;
        fail;
        constructor(executor) {
            let done;
            let fail;
            super((d, f) => {
                done = d;
                fail = f;
                executor?.(d, f);
            });
            this.done = done;
            this.fail = fail;
        }
    }
    $.$mol_promise = $mol_promise;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_promise_blocker extends $mol_promise {
        static [Symbol.toStringTag] = '$mol_promise_blocker';
    }
    $.$mol_promise_blocker = $mol_promise_blocker;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_decor {
        value;
        constructor(value) {
            this.value = value;
        }
        prefix() { return ''; }
        valueOf() { return this.value; }
        postfix() { return ''; }
        toString() {
            return `${this.prefix()}${this.valueOf()}${this.postfix()}`;
        }
    }
    $.$mol_decor = $mol_decor;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_style_unit extends $mol_decor {
        literal;
        constructor(value, literal) {
            super(value);
            this.literal = literal;
        }
        postfix() {
            return this.literal;
        }
        static per(value) { return `${value}%`; }
        static px(value) { return `${value}px`; }
        static mm(value) { return `${value}mm`; }
        static cm(value) { return `${value}cm`; }
        static Q(value) { return `${value}Q`; }
        static in(value) { return `${value}in`; }
        static pc(value) { return `${value}pc`; }
        static pt(value) { return `${value}pt`; }
        static cap(value) { return `${value}cap`; }
        static ch(value) { return `${value}ch`; }
        static em(value) { return `${value}em`; }
        static rem(value) { return `${value}rem`; }
        static ex(value) { return `${value}ex`; }
        static ic(value) { return `${value}ic`; }
        static lh(value) { return `${value}lh`; }
        static rlh(value) { return `${value}rlh`; }
        static vh(value) { return `${value}vh`; }
        static vw(value) { return `${value}vw`; }
        static vi(value) { return `${value}vi`; }
        static vb(value) { return `${value}vb`; }
        static vmin(value) { return `${value}vmin`; }
        static vmax(value) { return `${value}vmax`; }
        static deg(value) { return `${value}deg`; }
        static rad(value) { return `${value}rad`; }
        static grad(value) { return `${value}grad`; }
        static turn(value) { return `${value}turn`; }
        static s(value) { return `${value}s`; }
        static ms(value) { return `${value}ms`; }
    }
    $.$mol_style_unit = $mol_style_unit;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    const { per } = $mol_style_unit;
    class $mol_style_func extends $mol_decor {
        name;
        constructor(name, value) {
            super(value);
            this.name = name;
        }
        prefix() { return this.name + '('; }
        postfix() { return ')'; }
        static linear_gradient(value) {
            return new $mol_style_func('linear-gradient', value);
        }
        static calc(value) {
            return new $mol_style_func('calc', value);
        }
        static vary(name, defaultValue) {
            return new $mol_style_func('var', defaultValue ? [name, defaultValue] : name);
        }
        static url(href) {
            return new $mol_style_func('url', JSON.stringify(href));
        }
        static hsla(hue, saturation, lightness, alpha) {
            return new $mol_style_func('hsla', [hue, per(saturation), per(lightness), alpha]);
        }
        static clamp(min, mid, max) {
            return new $mol_style_func('clamp', [min, mid, max]);
        }
        static rgba(red, green, blue, alpha) {
            return new $mol_style_func('rgba', [red, green, blue, alpha]);
        }
        static scale(zoom) {
            return new $mol_style_func('scale', [zoom]);
        }
        static linear(...breakpoints) {
            return new $mol_style_func("linear", breakpoints.map((e) => Array.isArray(e)
                ? String(e[0]) +
                    " " +
                    (typeof e[1] === "number" ? e[1] + "%" : e[1].toString())
                : String(e)));
        }
        static cubic_bezier(x1, y1, x2, y2) {
            return new $mol_style_func('cubic-bezier', [x1, y1, x2, y2]);
        }
        static steps(value, step_position) {
            return new $mol_style_func('steps', [value, step_position]);
        }
        static blur(value) {
            return new $mol_style_func('blur', value ?? "");
        }
        static brightness(value) {
            return new $mol_style_func('brightness', value ?? "");
        }
        static contrast(value) {
            return new $mol_style_func('contrast', value ?? "");
        }
        static drop_shadow(color, x_offset, y_offset, blur_radius) {
            return new $mol_style_func("drop-shadow", blur_radius
                ? [color, x_offset, y_offset, blur_radius]
                : [color, x_offset, y_offset]);
        }
        static grayscale(value) {
            return new $mol_style_func('grayscale', value ?? "");
        }
        static hue_rotate(value) {
            return new $mol_style_func('hue-rotate', value ?? "");
        }
        static invert(value) {
            return new $mol_style_func('invert', value ?? "");
        }
        static opacity(value) {
            return new $mol_style_func('opacity', value ?? "");
        }
        static sepia(value) {
            return new $mol_style_func('sepia', value ?? "");
        }
        static saturate(value) {
            return new $mol_style_func('saturate', value ?? "");
        }
    }
    $.$mol_style_func = $mol_style_func;
})($ || ($ = {}));

;
"use strict";

;
"use strict";

;
"use strict";
var $;
(function ($) {
    function $mol_style_prop(prefix, keys) {
        const record = keys.reduce((rec, key) => {
            rec[key] = $mol_style_func.vary(`--${prefix}_${key}`);
            return rec;
        }, {});
        return record;
    }
    $.$mol_style_prop = $mol_style_prop;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/style/prop/readme.md" ] = "IyAkbW9sX3N0eWxlX3Byb3AKCkNyZWF0ZSByZWNvcmQgb2YgQ1NTIHZhcmlhYmxlcy4KCgojIyBTaWduYXR1cmUKCmBgYHRzCiRtb2xfc3R5bGVfcHJvcDwgS2V5cyBleHRlbmRzIHN0cmluZ1tdID4oCglwcmVmaXggOiBzdHJpbmcsCglrZXlzIDogS2V5cwopIDogUmVjb3JkPCBLZXlzW251bWJlcl0sICRtb2xfc3R5bGVfZnVuYzwgJ3ZhcicgPiA+CmBgYAoKCiMjIEV4YW1wbGUKCiMjIyB0aGVtZS5jc3MKCmBgYGNzcwo6cm9vdCB7CgktLW15X2FwcF90aGVtZV9tYWluOiAjZmZmY2JiOwoJLS1teV9hcHBfdGhlbWVfbWFpbl9saWdodDogI2ZmZmNiYjdkOwoJLS1teV9hcHBfdGhlbWVfYm9yZGVyOiAjZmZmYWEwOwp9CmBgYAoKIyMjIHRoZW1lLnRzCgpgYGB0cwpleHBvcnQgY29uc3QgbXlfYXBwX3RoZW1lID0gJG1vbF9zdHlsZV9wcm9wKAoJJ215X2FwcF90aGVtZScsCglbICdtYWluJywgJ21haW5fbGlnaHQnLCAnYm9yZGVyJyBdIGFzIGNvbnN0CikKYGBgCgojIyMgKi5jc3MudHMKCmBgYHRzCiRtb2xfc3R5bGVfZGVmaW5lKAoJJG15X2FwcCwKCXsKCQliYWNrZ3JvdW5kOiB7CgkJCWNvbG9yOiAkbXlfYXBwX3RoZW1lLm1haW4sCgkJfSwKCQlib3JkZXI6IHsKCQkJY29sb3I6ICRteV9hcHBfdGhlbWUuYm9yZGVyLAoJCX0sCgl9CikKYGBgCg=="

;
"use strict";
var $;
(function ($) {
    $.$mol_theme = $mol_style_prop('mol_theme', [
        'back',
        'hover',
        'card',
        'current',
        'special',
        'text',
        'control',
        'shade',
        'line',
        'focus',
        'field',
        'image',
        'spirit',
    ]);
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/theme/theme.css", ":root {\n\t--mol_theme_hue: 240deg;\n\t--mol_theme_hue_spread: 90deg;\n}\n\n:where([mol_theme]) {\n\tcolor: var(--mol_theme_text);\n\tfill: var(--mol_theme_text);\n\tbackground-color: var(--mol_theme_back);\n}\n\t\n:root, [mol_theme=\"$mol_theme_dark\"], :where([mol_theme=\"$mol_theme_dark\"]) [mol_theme]  {\n\n\t--mol_theme_luma: -1;\n\t--mol_theme_image: invert(1) hue-rotate( 180deg );\n\t--mol_theme_spirit: hsl( 0deg, 0%, 0%, .75 );\n\n\t--mol_theme_back: hsl( var(--mol_theme_hue), 20%, 10% );\n\t--mol_theme_card: hsl( var(--mol_theme_hue), 50%, 20%, .25 );\n\t--mol_theme_field: hsl( var(--mol_theme_hue), 50%, 8%, .25 );\n\t--mol_theme_hover: hsl( var(--mol_theme_hue), 0%, 50%, .1 );\n\t\n\t--mol_theme_text: hsl( var(--mol_theme_hue), 0%, 80% );\n\t--mol_theme_shade: hsl( var(--mol_theme_hue), 0%, 60%, 1 );\n\t--mol_theme_line: hsl( var(--mol_theme_hue), 0%, 50%, .25 );\n\t--mol_theme_focus: hsl( calc( var(--mol_theme_hue) + 180deg ), 100%, 65% );\n\t\n\t--mol_theme_control: hsl( var(--mol_theme_hue), 60%, 65% );\n\t--mol_theme_current: hsl( calc( var(--mol_theme_hue) - var(--mol_theme_hue_spread) ), 60%, 65% );\n\t--mol_theme_special: hsl( calc( var(--mol_theme_hue) + var(--mol_theme_hue_spread) ), 60%, 65% );\n\n} @supports( color: oklch( 0% 0 0deg ) ) {\n:root, [mol_theme=\"$mol_theme_dark\"], :where([mol_theme=\"$mol_theme_dark\"]) [mol_theme]  {\n\t\n\t--mol_theme_back: oklch( 20% .03 var(--mol_theme_hue) );\n\t--mol_theme_card: oklch( 30% .05 var(--mol_theme_hue) / .25 );\n\t--mol_theme_field: oklch( 15% 0 var(--mol_theme_hue) / .25 );\n\t--mol_theme_hover: oklch( 70% 0 var(--mol_theme_hue) / .1 );\n\t\n\t--mol_theme_text: oklch( 80% 0 var(--mol_theme_hue) );\n\t--mol_theme_shade: oklch( 60% 0 var(--mol_theme_hue) );\n\t--mol_theme_line: oklch( 60% 0 var(--mol_theme_hue) / .25 );\n\t--mol_theme_focus: oklch( 80% .2 calc( var(--mol_theme_hue) + 180deg ) );\n\t\n\t--mol_theme_control: oklch( 70% .1 var(--mol_theme_hue) );\n\t--mol_theme_current: oklch( 70% .2 calc( var(--mol_theme_hue) - var(--mol_theme_hue_spread) ) );\n\t--mol_theme_special: oklch( 70% .2 calc( var(--mol_theme_hue) + var(--mol_theme_hue_spread) ) );\n\n} }\n\n[mol_theme=\"$mol_theme_light\"], :where([mol_theme=\"$mol_theme_light\"]) [mol_theme] {\n\t\n\t--mol_theme_luma: 1;\n\t--mol_theme_image: none;\n\t--mol_theme_spirit: hsl( 0deg, 0%, 100%, .75 );\n\t\n\t--mol_theme_back: hsl( var(--mol_theme_hue), 20%, 92% );\n\t--mol_theme_card: hsl( var(--mol_theme_hue), 50%, 100%, .5 );\n\t--mol_theme_field: hsl( var(--mol_theme_hue), 50%, 100%, .75 );\n\t--mol_theme_hover: hsl( var(--mol_theme_hue), 0%, 50%, .1 );\n\t\n\t--mol_theme_text: hsl( var(--mol_theme_hue), 0%, 0% );\n\t--mol_theme_shade: hsl( var(--mol_theme_hue), 0%, 40%, 1 );\n\t--mol_theme_line: hsl( var(--mol_theme_hue), 0%, 50%, .25 );\n\t--mol_theme_focus: hsl( calc( var(--mol_theme_hue) + 180deg ), 100%, 40% );\n\t\n\t--mol_theme_control: hsl( var(--mol_theme_hue), 80%, 30% );\n\t--mol_theme_current: hsl( calc( var(--mol_theme_hue) - var(--mol_theme_hue_spread) ), 80%, 30% );\n\t--mol_theme_special: hsl( calc( var(--mol_theme_hue) + var(--mol_theme_hue_spread) ), 80%, 30% );\n\n} @supports( color: oklch( 0% 0 0deg ) ) {\n[mol_theme=\"$mol_theme_light\"], :where([mol_theme=\"$mol_theme_light\"]) [mol_theme] {\n\t--mol_theme_back: oklch( 92% .01 var(--mol_theme_hue) );\n\t--mol_theme_card: oklch( 99% .01 var(--mol_theme_hue) / .5 );\n\t--mol_theme_field: oklch( 100% 0 var(--mol_theme_hue) / .5 );\n\t--mol_theme_hover: oklch( 70% 0 var(--mol_theme_hue) / .1 );\n\t\n\t--mol_theme_text: oklch( 20% 0 var(--mol_theme_hue) );\n\t--mol_theme_shade: oklch( 60% 0 var(--mol_theme_hue) );\n\t--mol_theme_line: oklch( 50% 0 var(--mol_theme_hue) / .25 );\n\t--mol_theme_focus: oklch( 60% .2 calc( var(--mol_theme_hue) + 180deg ) );\n\t\n\t--mol_theme_control: oklch( 40% .15 var(--mol_theme_hue) );\n\t--mol_theme_current: oklch( 50% .2 calc( var(--mol_theme_hue) - var(--mol_theme_hue_spread) ) );\n\t--mol_theme_special: oklch( 50% .2 calc( var(--mol_theme_hue) + var(--mol_theme_hue_spread) ) );\n\n} }\n\n:where( :root, [mol_theme=\"$mol_theme_dark\"] ) [mol_theme=\"$mol_theme_base\"] {\n\t--mol_theme_back: oklch( 25% .075 var(--mol_theme_hue) );\n\t--mol_theme_card: oklch( 35% .1 var(--mol_theme_hue) / .25 );\n}\n:where( [mol_theme=\"$mol_theme_light\"] ) [mol_theme=\"$mol_theme_base\"] {\n\t--mol_theme_back: oklch( 85% .075 var(--mol_theme_hue) );\n\t--mol_theme_card: oklch( 98% .03 var(--mol_theme_hue) / .25 );\n}\n\n:where( :root, [mol_theme=\"$mol_theme_dark\"] ) [mol_theme=\"$mol_theme_current\"] {\n\t--mol_theme_back: oklch( 25% .05 calc( var(--mol_theme_hue) - var(--mol_theme_hue_spread) ) );\n\t--mol_theme_card: oklch( 35% .1 calc( var(--mol_theme_hue) - var(--mol_theme_hue_spread) ) / .25 );\n}\n:where( [mol_theme=\"$mol_theme_light\"] ) [mol_theme=\"$mol_theme_current\"] {\n\t--mol_theme_back: oklch( 85% .05 calc( var(--mol_theme_hue) - var(--mol_theme_hue_spread) ) );\n\t--mol_theme_card: oklch( 98% .03 calc( var(--mol_theme_hue) - var(--mol_theme_hue_spread) ) / .25 );\n}\n\n:where( :root, [mol_theme=\"$mol_theme_dark\"] ) [mol_theme=\"$mol_theme_special\"] {\n\t--mol_theme_back: oklch( 25% .05 calc( var(--mol_theme_hue) + var(--mol_theme_hue_spread) ) );\n\t--mol_theme_card: oklch( 35% .1 calc( var(--mol_theme_hue) + var(--mol_theme_hue_spread) ) / .25 );\n}\n:where( [mol_theme=\"$mol_theme_light\"] ) [mol_theme=\"$mol_theme_special\"] {\n\t--mol_theme_back: oklch( 85% .05 calc( var(--mol_theme_hue) + var(--mol_theme_hue_spread) ) );\n\t--mol_theme_card: oklch( 98% .03 calc( var(--mol_theme_hue) + var(--mol_theme_hue_spread) ) / .25 );\n}\n\n:where( :root, [mol_theme=\"$mol_theme_dark\"] ) [mol_theme=\"$mol_theme_accent\"] {\n\t--mol_theme_back: oklch( 35% .1 calc( var(--mol_theme_hue) + 180deg ) );\n\t--mol_theme_card: oklch( 45% .15 calc( var(--mol_theme_hue) + 180deg ) / .25 );\n}\n:where( [mol_theme=\"$mol_theme_light\"] ) [mol_theme=\"$mol_theme_accent\"] {\n\t--mol_theme_back: oklch( 83% .1 calc( var(--mol_theme_hue) + 180deg ) );\n\t--mol_theme_card: oklch( 98% .03 calc( var(--mol_theme_hue) + 180deg ) / .25 );\n}\n\n");
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $.$mol_gap = $mol_style_prop('mol_gap', [
        'block',
        'text',
        'round',
        'space',
        'blur',
    ]);
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/gap/gap.css", ":root {\n\t--mol_gap_block: .75rem;\n\t--mol_gap_text: .5rem .75rem;\n\t--mol_gap_round: .25rem;\n\t--mol_gap_space: .25rem;\n\t--mol_gap_blur: .5rem;\n}\n");
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_view_visible_width() {
        return $mol_window.size().width;
    }
    $.$mol_view_visible_width = $mol_view_visible_width;
    function $mol_view_visible_height() {
        return $mol_window.size().height;
    }
    $.$mol_view_visible_height = $mol_view_visible_height;
    function $mol_view_state_key(suffix) {
        return suffix;
    }
    $.$mol_view_state_key = $mol_view_state_key;
    class $mol_view extends $mol_object {
        static Root(id) {
            return new this;
        }
        autorun() {
            try {
                this.dom_tree();
                document.title = this.title();
            }
            catch (error) {
                $mol_fail_log(error);
            }
        }
        static autobind() {
            const nodes = $mol_dom_context.document.querySelectorAll('[mol_view_root]:not([mol_view_root=""])');
            for (let i = nodes.length - 1; i >= 0; --i) {
                const name = nodes.item(i).getAttribute('mol_view_root');
                const View = $[name];
                if (!View) {
                    console.error(`Can not attach view. Class not found: ${name}`);
                    continue;
                }
                const view = View.Root(i);
                view.dom_node(nodes.item(i));
                view.autorun();
            }
        }
        title() {
            return this.toString().match(/.*\.(\w+)/)?.[1] ?? this.toString();
        }
        focused(next) {
            let node = this.dom_node();
            const value = $mol_view_selection.focused(next === undefined ? undefined : (next ? [node] : []));
            return value.indexOf(node) !== -1;
        }
        state_key(suffix = '') {
            return this.$.$mol_view_state_key(suffix);
        }
        dom_name() {
            return $mol_dom_qname(this.constructor.toString()) || 'div';
        }
        dom_name_space() { return 'http://www.w3.org/1999/xhtml'; }
        sub() {
            return [];
        }
        sub_visible() {
            return this.sub();
        }
        minimal_width() {
            let min = 0;
            try {
                const sub = this.sub();
                if (!sub)
                    return 0;
                sub.forEach(view => {
                    if (view instanceof $mol_view) {
                        min = Math.max(min, view.minimal_width());
                    }
                });
            }
            catch (error) {
                $mol_fail_log(error);
                return 24;
            }
            return min;
        }
        maximal_width() {
            return this.minimal_width();
        }
        minimal_height() {
            let min = 0;
            try {
                for (const view of this.sub() ?? []) {
                    if (view instanceof $mol_view) {
                        min = Math.max(min, view.minimal_height());
                    }
                }
            }
            catch (error) {
                $mol_fail_log(error);
                return 24;
            }
            return min;
        }
        static watchers = new Set();
        view_rect() {
            if ($mol_wire_probe(() => this.view_rect()) === undefined) {
                $mol_wire_watch();
                return null;
            }
            else {
                const { width, height, left, right, top, bottom } = this.dom_node().getBoundingClientRect();
                return { width, height, left, right, top, bottom };
            }
        }
        dom_id() {
            return this.toString().replace(/</g, '(').replace(/>/g, ')').replaceAll(/"/g, "'");
        }
        dom_node_external(next) {
            const node = next ?? $mol_dom_context.document.createElementNS(this.dom_name_space(), this.dom_name());
            const id = this.dom_id();
            node.setAttribute('id', id);
            node.toString = $mol_const('<#' + id + '>');
            return node;
        }
        dom_node(next) {
            $mol_wire_solid();
            const node = this.dom_node_external(next);
            $mol_dom_render_attributes(node, this.attr_static());
            const events = this.event_async();
            $mol_dom_render_events(node, events);
            return node;
        }
        dom_final() {
            this.render();
            const sub = this.sub_visible();
            if (!sub)
                return;
            for (const el of sub) {
                if (el && typeof el === 'object' && 'dom_final' in el) {
                    el['dom_final']();
                }
            }
            return this.dom_node();
        }
        dom_tree(next) {
            const node = this.dom_node(next);
            render: try {
                $mol_dom_render_attributes(node, { mol_view_error: null });
                try {
                    this.render();
                }
                finally {
                    for (let plugin of this.plugins()) {
                        if (plugin instanceof $mol_plugin) {
                            plugin.dom_tree();
                        }
                    }
                }
            }
            catch (error) {
                $mol_fail_log(error);
                const mol_view_error = $mol_promise_like(error)
                    ? error.constructor[Symbol.toStringTag] ?? 'Promise'
                    : error.name || error.constructor.name;
                $mol_dom_render_attributes(node, { mol_view_error });
                if ($mol_promise_like(error))
                    break render;
                try {
                    const message = error.message || error;
                    node.innerText = message.replace(/^|$/mg, '\xA0\xA0');
                }
                catch { }
            }
            try {
                this.auto();
            }
            catch (error) {
                $mol_fail_log(error);
            }
            return node;
        }
        dom_node_actual() {
            const node = this.dom_node();
            $mol_dom_render_styles(node, this.style_size());
            const attr = this.attr();
            const style = this.style();
            $mol_dom_render_attributes(node, attr);
            $mol_dom_render_styles(node, style);
            return node;
        }
        auto() {
            return null;
        }
        render() {
            const node = this.dom_node_actual();
            const sub = this.sub_visible();
            if (!sub)
                return;
            const nodes = sub.map(child => {
                if (child == null)
                    return null;
                return (child instanceof $mol_view)
                    ? child.dom_node()
                    : child instanceof $mol_dom_context.Node
                        ? child
                        : String(child);
            });
            $mol_dom_render_children(node, nodes);
            for (const el of sub)
                if (el && typeof el === 'object' && 'dom_tree' in el)
                    el['dom_tree']();
            $mol_dom_render_fields(node, this.field());
            "#ssr_capture";
        }
        static view_classes() {
            const proto = this.prototype;
            let current = proto;
            const classes = [];
            while (current) {
                if (current.constructor.name !== classes.at(-1)?.name) {
                    classes.push(current.constructor);
                }
                if (!(current instanceof $mol_view))
                    break;
                current = Object.getPrototypeOf(current);
            }
            return classes;
        }
        static _view_names;
        static view_names(suffix) {
            let cache = Reflect.getOwnPropertyDescriptor(this, '_view_names')?.value;
            if (!cache)
                cache = this._view_names = new Map;
            const cached = cache.get(suffix);
            if (cached)
                return cached;
            const names = [];
            const suffix2 = '_' + suffix[0].toLowerCase() + suffix.substring(1);
            for (const Class of this.view_classes()) {
                if (suffix in Class.prototype)
                    names.push(this.$.$mol_func_name(Class) + suffix2);
                else
                    break;
            }
            cache.set(suffix, names);
            return names;
        }
        view_names_owned() {
            const names = [];
            let owner = $mol_owning_get(this);
            if (!(owner?.host instanceof $mol_view))
                return names;
            const suffix = owner.task.name.trim();
            const suffix2 = '_' + suffix[0].toLowerCase() + suffix.substring(1);
            names.push(...owner.host.constructor.view_names(suffix));
            for (let prefix of owner.host.view_names_owned()) {
                names.push(prefix + suffix2);
            }
            return names;
        }
        view_names() {
            const names = new Set();
            for (let name of this.view_names_owned())
                names.add(name);
            for (let Class of this.constructor.view_classes()) {
                const name = this.$.$mol_func_name(Class);
                if (name)
                    names.add(name);
            }
            return names;
        }
        theme(next = null) {
            return next;
        }
        attr_static() {
            let attrs = {};
            for (let name of this.view_names())
                attrs[name.replace(/\$/g, '').replace(/^(?=\d)/, '_').toLowerCase()] = '';
            return attrs;
        }
        attr() {
            return {
                mol_theme: this.theme() ?? undefined,
            };
        }
        style_size() {
            return {
                minHeight: this.minimal_height(),
                minWidth: this.minimal_width(),
            };
        }
        style() {
            return {};
        }
        field() {
            return {};
        }
        event() {
            return {};
        }
        event_async() {
            return { ...$mol_wire_async(this.event()) };
        }
        plugins() {
            return [];
        }
        [$mol_dev_format_head]() {
            return $mol_dev_format_span({}, $mol_dev_format_native(this));
        }
        *view_find(check, path = []) {
            if (path.length === 0 && check(this))
                return yield [this];
            try {
                const checked = new Set();
                const sub = this.sub();
                for (const item of sub) {
                    if (!(item instanceof $mol_view))
                        continue;
                    if (!check(item))
                        continue;
                    checked.add(item);
                    yield [...path, this, item];
                }
                for (const item of sub) {
                    if (!(item instanceof $mol_view))
                        continue;
                    if (checked.has(item))
                        continue;
                    yield* item.view_find(check, [...path, this]);
                }
            }
            catch (error) {
                if ($mol_promise_like(error))
                    $mol_fail_hidden(error);
                $mol_fail_log(error);
            }
        }
        async await_load() {
            var all_subs = [];
            function get_subs(subs) {
                try {
                }
                catch (error) {
                    if (!$mol_promise_like(error))
                        $mol_fail_hidden(error);
                }
                const new_subs = subs.filter((item) => item instanceof $mol_view).map((item) => item.sub() ?? []).flat();
                console.log(new_subs);
                if (new_subs.length == 0) {
                    return;
                }
                for (const sub of new_subs) {
                    all_subs.push(sub);
                }
                return get_subs(new_subs);
            }
            get_subs(this.sub());
            console.log({ all_subs });
        }
        force_render(path) {
            const kids = this.sub();
            const index = kids.findIndex(item => {
                if (item instanceof $mol_view) {
                    return path.has(item);
                }
                else {
                    return false;
                }
            });
            if (index >= 0) {
                kids[index].force_render(path);
            }
        }
        ensure_visible(view, align = "start") {
            const path = this.view_find(v => v === view).next().value;
            this.force_render(new Set(path));
            try {
                this.dom_final();
            }
            catch (err) {
                $mol_fail_log(err);
            }
            view.dom_node().scrollIntoView({ block: align });
        }
        bring() {
            const win = this.$.$mol_dom_context;
            if (win.parent !== win.self && !win.document.hasFocus())
                return;
            new this.$.$mol_after_timeout(0, () => {
                this.focused(true);
            });
        }
        destructor() {
            const node = $mol_wire_probe(() => this.dom_node());
            if (!node)
                return;
            const events = $mol_wire_probe(() => this.event_async());
            if (!events)
                return;
            for (let event_name in events) {
                node.removeEventListener(event_name, events[event_name]);
            }
        }
    }
    __decorate([
        $mol_mem
    ], $mol_view.prototype, "autorun", null);
    __decorate([
        $mol_mem
    ], $mol_view.prototype, "title", null);
    __decorate([
        $mol_mem
    ], $mol_view.prototype, "focused", null);
    __decorate([
        $mol_memo.method
    ], $mol_view.prototype, "dom_name", null);
    __decorate([
        $mol_mem
    ], $mol_view.prototype, "minimal_width", null);
    __decorate([
        $mol_mem
    ], $mol_view.prototype, "minimal_height", null);
    __decorate([
        $mol_mem
    ], $mol_view.prototype, "view_rect", null);
    __decorate([
        $mol_memo.method
    ], $mol_view.prototype, "dom_id", null);
    __decorate([
        $mol_mem
    ], $mol_view.prototype, "dom_node", null);
    __decorate([
        $mol_mem
    ], $mol_view.prototype, "dom_final", null);
    __decorate([
        $mol_mem
    ], $mol_view.prototype, "dom_tree", null);
    __decorate([
        $mol_mem
    ], $mol_view.prototype, "dom_node_actual", null);
    __decorate([
        $mol_mem
    ], $mol_view.prototype, "render", null);
    __decorate([
        $mol_memo.method
    ], $mol_view.prototype, "view_names_owned", null);
    __decorate([
        $mol_memo.method
    ], $mol_view.prototype, "view_names", null);
    __decorate([
        $mol_mem
    ], $mol_view.prototype, "theme", null);
    __decorate([
        $mol_mem
    ], $mol_view.prototype, "event_async", null);
    __decorate([
        $mol_action
    ], $mol_view.prototype, "await_load", null);
    __decorate([
        $mol_mem_key
    ], $mol_view, "Root", null);
    __decorate([
        $mol_mem
    ], $mol_view, "autobind", null);
    __decorate([
        $mol_memo.method
    ], $mol_view, "view_classes", null);
    $.$mol_view = $mol_view;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/view/view/view.css", "[mol_view] {\n\ttransition-property: height, width, min-height, min-width, max-width, max-height, transform;\n\ttransition-duration: .2s;\n\ttransition-timing-function: ease-out;\n\t-webkit-appearance: none;\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\tflex-shrink: 0;\n\tcontain: style;\n\tscrollbar-color: var(--mol_theme_line) transparent;\n\tscrollbar-width: thin;\n}\t\n\n[mol_view]::selection {\n\tbackground: var(--mol_theme_line);\n}\t\n\n[mol_view]::-webkit-scrollbar {\n\twidth: .25rem;\n\theight: .25rem;\n}\n\n[mol_view]::-webkit-scrollbar-corner {\n\tbackground-color: var(--mol_theme_line);\n}\n\n[mol_view]::-webkit-scrollbar-track {\n\tbackground-color: transparent;\n}\n\n[mol_view]::-webkit-scrollbar-thumb {\n\tbackground-color: var(--mol_theme_line);\n\tborder-radius: var(--mol_gap_round);\n}\n\n[mol_view] > * {\n\tword-break: inherit;\n}\n\n[mol_view_root] {\n\tmargin: 0;\n\tpadding: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbox-sizing: border-box;\n\tfont-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n\tfont-size: 1rem;\n\tline-height: 1.5rem;\n\tbackground: var(--mol_theme_back);\n\tcolor: var(--mol_theme_text);\n\tcontain: unset; /** Fixes bg ignoring when applied to body on Chrome */\n\ttab-size: 4;\n\toverscroll-behavior: contain; /** Disable navigation gestures **/\n}\n\n@media print {\n\t[mol_view_root] {\n\t\theight: auto;\n\t}\n}\n[mol_view][mol_view_error]:not([mol_view_error=\"Promise\"], [mol_view_error=\"$mol_promise_blocker\"]) {\n\tbackground-image: repeating-linear-gradient(\n\t\t-45deg,\n\t\t#f92323,\n\t\t#f92323 .5rem,\n\t\t#ff3d3d .5rem,\n\t\t#ff3d3d 1.5rem\n\t);\n\tcolor: black;\n\talign-items: center;\n\tjustify-content: center;\n}\n\n@keyframes mol_view_wait {\n\tfrom {\n\t\topacity: .25;\n\t}\n\t20% {\n\t\topacity: .75;\n\t}\n\tto {\n\t\topacity: .25;\n\t}\n}\n\n:where([mol_view][mol_view_error=\"$mol_promise_blocker\"]),\n:where([mol_view][mol_view_error=\"Promise\"]) {\n\tbackground: var(--mol_theme_hover);\n}\n\n[mol_view][mol_view_error=\"Promise\"] {\n\tanimation: mol_view_wait 1s steps(20,end) infinite;\n}\n");
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_dom_context.document?.addEventListener('DOMContentLoaded', () => $mol_view.autobind(), { once: true });
})($ || ($ = {}));

;
	($.$mol_scroll) = class $mol_scroll extends ($.$mol_view) {
		tabindex(){
			return -1;
		}
		event_scroll(next){
			if(next !== undefined) return next;
			return null;
		}
		scroll_top(next){
			if(next !== undefined) return next;
			return 0;
		}
		scroll_left(next){
			if(next !== undefined) return next;
			return 0;
		}
		attr(){
			return {...(super.attr()), "tabindex": (this.tabindex())};
		}
		event(){
			return {...(super.event()), "scroll": (next) => (this.event_scroll(next))};
		}
	};
	($mol_mem(($.$mol_scroll.prototype), "event_scroll"));
	($mol_mem(($.$mol_scroll.prototype), "scroll_top"));
	($mol_mem(($.$mol_scroll.prototype), "scroll_left"));


;
"use strict";
var $;
(function ($) {
    class $mol_dom_listener extends $mol_object {
        _node;
        _event;
        _handler;
        _config;
        constructor(_node, _event, _handler, _config = { passive: true }) {
            super();
            this._node = _node;
            this._event = _event;
            this._handler = _handler;
            this._config = _config;
            this._node.addEventListener(this._event, this._handler, this._config);
        }
        destructor() {
            this._node.removeEventListener(this._event, this._handler, this._config);
            super.destructor();
        }
    }
    $.$mol_dom_listener = $mol_dom_listener;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_print extends $mol_object {
        static before() {
            return new $mol_dom_listener(this.$.$mol_dom_context, 'beforeprint', () => {
                this.active(true);
            });
        }
        static after() {
            return new $mol_dom_listener(this.$.$mol_dom_context, 'afterprint', () => {
                this.active(false);
            });
        }
        static active(next) {
            this.before();
            this.after();
            return next || false;
        }
    }
    __decorate([
        $mol_mem
    ], $mol_print, "before", null);
    __decorate([
        $mol_mem
    ], $mol_print, "after", null);
    __decorate([
        $mol_mem
    ], $mol_print, "active", null);
    $.$mol_print = $mol_print;
})($ || ($ = {}));

;
"use strict";

;
"use strict";

;
"use strict";

;
"use strict";

;
"use strict";
var $;
(function ($) {
    function $mol_style_sheet(Component, config0) {
        let rules = [];
        const block = $mol_dom_qname($mol_ambient({}).$mol_func_name(Component));
        const kebab = (name) => name.replace(/[A-Z]/g, letter => '-' + letter.toLowerCase());
        const make_class = (prefix, path, config) => {
            const props = [];
            const selector = (prefix, path) => {
                if (path.length === 0)
                    return prefix || `[${block}]`;
                let res = `[${block}_${path.join('_')}]`;
                if (prefix)
                    res = prefix + ' :where(' + res + ')';
                return res;
            };
            for (const key of Object.keys(config).reverse()) {
                if (/^(--)?[a-z]/.test(key)) {
                    const addProp = (keys, val) => {
                        if (Array.isArray(val)) {
                            if (val[0] && [Array, Object].includes(val[0].constructor)) {
                                val = val.map(v => {
                                    return Object.entries(v).map(([n, a]) => {
                                        if (a === true)
                                            return kebab(n);
                                        if (a === false)
                                            return null;
                                        return String(a);
                                    }).filter(Boolean).join(' ');
                                }).join(',');
                            }
                            else {
                                val = val.join(' ');
                            }
                            props.push(`\t${keys.join('-')}: ${val};\n`);
                        }
                        else if (val.constructor === Object) {
                            for (let suffix in val) {
                                addProp([...keys, kebab(suffix)], val[suffix]);
                            }
                        }
                        else {
                            props.push(`\t${keys.join('-')}: ${val};\n`);
                        }
                    };
                    addProp([kebab(key)], config[key]);
                }
                else if (/^[A-Z]/.test(key)) {
                    make_class(prefix, [...path, key.toLowerCase()], config[key]);
                }
                else if (key[0] === '$') {
                    make_class(selector(prefix, path) + ' :where([' + $mol_dom_qname(key) + '])', [], config[key]);
                }
                else if (key === '>') {
                    const types = config[key];
                    for (let type in types) {
                        make_class(selector(prefix, path) + ' > :where([' + $mol_dom_qname(type) + '])', [], types[type]);
                    }
                }
                else if (key === '@') {
                    const attrs = config[key];
                    for (let name in attrs) {
                        for (let val in attrs[name]) {
                            make_class(selector(prefix, path) + ':where([' + name + '=' + JSON.stringify(val) + '])', [], attrs[name][val]);
                        }
                    }
                }
                else if (key === '@media') {
                    const media = config[key];
                    for (let query in media) {
                        rules.push('}\n');
                        make_class(prefix, path, media[query]);
                        rules.push(`${key} ${query} {\n`);
                    }
                }
                else if (key[0] === '[' && key[key.length - 1] === ']') {
                    const attr = key.slice(1, -1);
                    const vals = config[key];
                    for (let val in vals) {
                        make_class(selector(prefix, path) + ':where([' + attr + '=' + JSON.stringify(val) + '])', [], vals[val]);
                    }
                }
                else {
                    make_class(selector(prefix, path) + key, [], config[key]);
                }
            }
            if (props.length) {
                rules.push(`${selector(prefix, path)} {\n${props.reverse().join('')}}\n`);
            }
        };
        make_class('', [], config0);
        return rules.reverse().join('');
    }
    $.$mol_style_sheet = $mol_style_sheet;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_style_define(Component, config) {
        return $mol_style_attach(Component.name, $mol_style_sheet(Component, config));
    }
    $.$mol_style_define = $mol_style_define;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/scroll/readme.md" ] = "IyAkbW9sX3Njcm9sbAoKU2Nyb2xsaW5nIHBhbmUuCgojIyBbT25saW5lIGRlbW9dKGh0dHBzOi8vbW9sLmh5b28ucnUvIyFzZWN0aW9uPWRlbW9zL3JlYWRtZS9kZW1vPW1vbF9zY3JvbGxfZGVtbykKCiMjIFVzYWdlIGV4YW1wbGUKCmBgYAo8PSBCb2R5ICRtb2xfc2Nyb2xsCglzdWIgLwoJCTw9IFRleHQgJG1vbF9maWxsZXIgCmBgYAoKIyMgUHJvcGVydGllcwoKYHNjcm9sbF90b3AoIG9mZnNldD8gKSA6IG51bWJlcmAKClNjcm9sbGluZyBvZmZzZXQgZnJvbSB0b3AgY29ybmVyLgoKYHNjcm9sbF9sZWZ0KCBvZmZzZXQ/ICkgOiBudW1iZXJgCgpTY3JvbGxpbmcgb2Zmc2V0IGZyb20gbGVmdCBjb3JuZXIuCgojIyBDb250ZXh0IGV4dGVuc2lvbnMKCmB0aGlzLiQuJG1vbF9zY3JvbGxfdG9wKCkgOiBudW1iZXJgCgpTY3JvbGxpbmcgb2Zmc2V0IGZyb20gdG9wIGNvcm5lci4KCmB0aGlzLiQuJG1vbF9zY3JvbGxfbGVmdCgpIDogbnVtYmVyYAoKU2Nyb2xsaW5nIG9mZnNldCBmcm9tIGxlZnQgY29ybmVyLgoKYHRoaXMuJC4kbW9sX3Njcm9sbF9tb3ZpbmcoKSA6IGJvb2xlYW5gCgpUcnVlIHdoaWxlIHNjcm9sbGluZyBjaGFuZ2luZy4gRmFsc2Ugd2hlbiBzY3JvbGxpbmcgc3RvcHMuCg=="

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_scroll extends $.$mol_scroll {
            scroll_top(next, cache) {
                const el = this.dom_node();
                if (next !== undefined && !cache)
                    el.scrollTop = next;
                return el.scrollTop;
            }
            scroll_left(next, cache) {
                const el = this.dom_node();
                if (next !== undefined && !cache)
                    el.scrollLeft = next;
                return el.scrollLeft;
            }
            event_scroll(next) {
                const el = this.dom_node();
                this.scroll_left(el.scrollLeft, 'cache');
                this.scroll_top(el.scrollTop, 'cache');
            }
            minimal_height() {
                return this.$.$mol_print.active() ? null : 0;
            }
            minimal_width() {
                return this.$.$mol_print.active() ? null : 0;
            }
        }
        __decorate([
            $mol_mem
        ], $mol_scroll.prototype, "scroll_top", null);
        __decorate([
            $mol_mem
        ], $mol_scroll.prototype, "scroll_left", null);
        $$.$mol_scroll = $mol_scroll;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        const { per, rem, px } = $mol_style_unit;
        $mol_style_define($mol_scroll, {
            display: 'grid',
            overflow: 'auto',
            flex: {
                direction: 'column',
                grow: 1,
                shrink: 1,
            },
            outline: 'none',
            align: {
                self: 'stretch',
                items: 'flex-start',
            },
            boxSizing: 'border-box',
            willChange: 'scroll-position',
            scroll: {
                padding: [rem(.75), 0],
            },
            maxHeight: per(100),
            maxWidth: per(100),
            webkitOverflowScrolling: 'touch',
            contain: 'content',
            '>': {
                $mol_view: {
                    gridArea: '1/1',
                },
            },
            '::before': {
                display: 'none',
            },
            '::after': {
                display: 'none',
            },
            '::-webkit-scrollbar': {
                width: rem(.25),
                height: rem(.25),
            },
            '@media': {
                'print': {
                    overflow: 'hidden',
                    contain: 'none',
                    maxHeight: 'unset',
                },
            },
        });
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";

;
	($.$mol_page) = class $mol_page extends ($.$mol_view) {
		tabindex(){
			return -1;
		}
		Logo(){
			return null;
		}
		title_content(){
			return [(this.Logo()), (this.title())];
		}
		Title(){
			const obj = new this.$.$mol_view();
			(obj.dom_name) = () => ("h1");
			(obj.sub) = () => ((this.title_content()));
			return obj;
		}
		tools(){
			return [];
		}
		Tools(){
			const obj = new this.$.$mol_view();
			(obj.sub) = () => ((this.tools()));
			return obj;
		}
		head(){
			return [(this.Title()), (this.Tools())];
		}
		Head(){
			const obj = new this.$.$mol_view();
			(obj.minimal_height) = () => (64);
			(obj.dom_name) = () => ("header");
			(obj.sub) = () => ((this.head()));
			return obj;
		}
		body_scroll_top(next){
			return (this.Body().scroll_top(next));
		}
		body(){
			return [];
		}
		Body_content(){
			const obj = new this.$.$mol_view();
			(obj.sub) = () => ((this.body()));
			return obj;
		}
		body_content(){
			return [(this.Body_content())];
		}
		Body(){
			const obj = new this.$.$mol_scroll();
			(obj.sub) = () => ((this.body_content()));
			return obj;
		}
		foot(){
			return [];
		}
		Foot(){
			const obj = new this.$.$mol_view();
			(obj.dom_name) = () => ("footer");
			(obj.sub) = () => ((this.foot()));
			return obj;
		}
		dom_name(){
			return "article";
		}
		attr(){
			return {...(super.attr()), "tabIndex": (this.tabindex())};
		}
		sub(){
			return [
				(this.Head()), 
				(this.Body()), 
				(this.Foot())
			];
		}
	};
	($mol_mem(($.$mol_page.prototype), "Title"));
	($mol_mem(($.$mol_page.prototype), "Tools"));
	($mol_mem(($.$mol_page.prototype), "Head"));
	($mol_mem(($.$mol_page.prototype), "Body_content"));
	($mol_mem(($.$mol_page.prototype), "Body"));
	($mol_mem(($.$mol_page.prototype), "Foot"));


;
"use strict";
var $;
(function ($) {
    class $mol_plugin extends $mol_view {
        dom_node_external(next) {
            return next ?? $mol_owning_get(this).host.dom_node();
        }
        render() {
            this.dom_node_actual();
        }
    }
    $.$mol_plugin = $mol_plugin;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/plugin/readme.md" ] = "IyAkbW9sX3BsdWdpbg0KDQpQbHVnaW4gaXMgY29tcG9uZW50IHdpdGhvdXQgaXRzIG93biBET00gZWxlbWVudCwgYnV0IGluc3RlYWQgdXNlcyB0aGUgb3duZXIgRE9NIGVsZW1lbnQgKGxpa2UgQW5ndWxhcidzIGRpcmVjdGl2ZXMpLg0KDQpIb25vciBwbHVnaW5zOg0KDQotIFskbW9sX3RoZW1lX2F1dG9dKC4uL3RoZW1lL2F1dG8pDQotIFskbW9sX2hvdGtleV0oLi4vaG90a2V5KQ0KLSBbJG1vbF9zcGVlY2hdKC4uL3NwZWVjaCkNCg=="

;
var $node = $node || {} ; $node[ "/mol/page/readme.md" ] = "IyAkbW9sX3BhZ2UKClRoZSBjb21wb25lbnQgZm9yIGNyZWF0aW5nIHBhZ2UgbGF5b3V0LgoKIyMgW09ubGluZSBkZW1vXShodHRwczovL21vbC5oeW9vLnJ1LyMhc2VjdGlvbj1kZW1vcy9yZWFkbWUvZGVtbz1tb2xfcGFnZV9kZW1vKQoKIyMgVXNhZ2UgZXhhbXBsZXMKCmBgYAo8PSBTaWduX3VwICRtb2xfcGFnZQoJdGl0bGUgPD0gU2lnbl91cF90aXRsZSBAIFxTaWduIFVwCglib2R5IC8gPD0gU2lnbl91cF9mb3JtICRtb2xfdmlldwoJZm9vdCBudWxsCmBgYAoKIyMgUHJvcGVydGllcwoKKipgdGl0bGUoKSA6IHN0cmluZ2AqKgoKUmV0dXJucyBwYWdlIHRpdGxlLgoKKipgaGVhZCgpIDogW11gKioKClJldHVybnMgY29udGVudCBvZiBIZWFkLgoKKipgdG9vbHMoKSA6IFtdYCoqCgpSZXR1cm5zIGNvbnRlbnQgb2YgdG9vbGJhciBpbiBIZWFkLgoKKipgYm9keSgpIDogW11gKioKClJldHVybnMgY29udGVudCBvZiBCb2R5LgoKYGZvb3QoKSA6IFtdYAoKUmV0dXJucyBjb250ZW50IG9mIEZvb3QuCg=="

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        const { per, rem } = $mol_style_unit;
        const { hsla, blur } = $mol_style_func;
        $mol_style_define($mol_page, {
            display: 'flex',
            flex: {
                basis: 'auto',
                direction: 'column',
            },
            position: 'relative',
            alignSelf: 'stretch',
            maxWidth: per(100),
            maxHeight: per(100),
            boxSizing: 'border-box',
            color: $mol_theme.text,
            ':focus': {
                outline: 'none',
            },
            Head: {
                display: 'flex',
                flexWrap: 'wrap',
                justifyContent: 'flex-end',
                flex: 'none',
                position: 'relative',
                margin: 0,
                minHeight: rem(4),
                padding: $mol_gap.block,
                background: {
                    color: $mol_theme.card,
                },
                border: {
                    radius: $mol_gap.round,
                },
                box: {
                    shadow: [
                        [0, `-0.5rem`, `0.5rem`, `-0.5rem`, hsla(0, 0, 0, .25)],
                        [0, `0.5rem`, `0.5rem`, `-0.5rem`, hsla(0, 0, 0, .25)],
                    ],
                },
                zIndex: 2,
                '@media': {
                    'print': {
                        box: {
                            shadow: [[0, `1px`, 0, 0, hsla(0, 0, 0, .25)]],
                        },
                    },
                },
            },
            Title: {
                minHeight: rem(2),
                margin: 0,
                padding: $mol_gap.text,
                gap: $mol_gap.text,
                wordBreak: 'normal',
                textShadow: '0 0',
                font: {
                    size: 'inherit',
                    weight: 'normal',
                },
                flex: {
                    grow: 1,
                    shrink: 1,
                    basis: 'auto',
                },
            },
            Tools: {
                flex: {
                    basis: 'auto',
                    grow: 0,
                    shrink: 1,
                },
                display: 'flex',
                justifyContent: 'flex-end',
                alignItems: 'flex-start',
                flexWrap: 'wrap',
                '@media': {
                    'print': {
                        display: 'none',
                    },
                },
            },
            Body: {
                flex: {
                    grow: 1000,
                    shrink: 1,
                    basis: per(100),
                },
            },
            Body_content: {
                padding: $mol_gap.block,
                flex: {
                    direction: 'column',
                    shrink: 1,
                    grow: 1,
                },
                justify: {
                    self: 'stretch',
                },
            },
            Foot: {
                display: 'flex',
                justifyContent: 'space-between',
                flex: 'none',
                margin: 0,
                background: {
                    color: $mol_theme.card,
                },
                border: {
                    radius: $mol_gap.round,
                },
                box: {
                    shadow: [
                        [0, `-0.5rem`, `0.5rem`, `-0.5rem`, hsla(0, 0, 0, .25)],
                        [0, `0.5rem`, `0.5rem`, `-0.5rem`, hsla(0, 0, 0, .25)],
                    ],
                },
                zIndex: 1,
                padding: $mol_gap.block,
                ':empty': {
                    display: 'none',
                },
            },
        });
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
	($.$mol_meta) = class $mol_meta extends ($.$mol_view) {
		name(){
			return "";
		}
		content(){
			return "";
		}
		dom_name(){
			return "meta";
		}
		attr(){
			return {"name": (this.name()), "content": (this.content())};
		}
	};
	($.$mol_meta_description) = class $mol_meta_description extends ($.$mol_meta) {
		name(){
			return "description";
		}
	};
	($.$mol_meta_robots) = class $mol_meta_robots extends ($.$mol_meta) {
		name(){
			return "robots";
		}
	};
	($.$mol_meta_canonical) = class $mol_meta_canonical extends ($.$mol_view) {
		content(){
			return "";
		}
		dom_name(){
			return "link";
		}
		attr(){
			return {"rel": "canonical", "href": (this.content())};
		}
	};


;
"use strict";

;
var $node = $node || {} ; $node[ "/mol/state/arg/readme.md" ] = "IyAkbW9sX3N0YXRlX2FyZwoKU3RhdGUgb2YgYXJndW1lbnRzLgoKIyMgTm9kZUpTCgpXaGVuIGNvbW1hbmQgbGluZSBhcmd1bWVudHMgbGlrZSBgYGBmb289YmFyIHh4eGBgYDoKCmBgYAokbW9sX3N0YXRlX2FyZy52YWx1ZSggJ2ZvbycgKSAvLyAnYmFyJwokbW9sX3N0YXRlX2FyZy52YWx1ZSggJ3h4eCcgKSAvLyAnJwokbW9sX3N0YXRlX2FyZy52YWx1ZSggJ2hlbHAnICkgLy8gbnVsbApgYGAKCiMjIFdlYgoKV2hlbiBkb2N1bWVudCBsb2NhdGlvbiBsaWtlIGBgYCNmb289YmFyL3h4eGBgYCBvciBgYGA/Zm9vPWJhciZ4eHhgYGA6CgpgYGAKJG1vbF9zdGF0ZV9hcmcudmFsdWUoICdmb28nICkgLy8gJ2JhcicKJG1vbF9zdGF0ZV9hcmcudmFsdWUoICd4eHgnICkgLy8gJycKJG1vbF9zdGF0ZV9hcmcudmFsdWUoICdoZWxwJyApIC8vIG51bGwKJG1vbF9zdGF0ZV9hcmcudmFsdWUoICd4eHgnICwgbnVsbCApIC8vIExvY2F0aW9uIGlzICcjZm9vPWJhcicgbm93CiRtb2xfc3RhdGVfYXJnLmxpbmsoeyB4eHggOiAnJyAsIGFiYyA6ICdoZWxsbycgfSkgLy8gJyNmb289YmFyL3h4eC9hYmM9aGVsbG8nCmBgYAoKIyMgUHJvcGVydGllcwoKKipgYGB2YWx1ZSgga2V5IDogc3RyaW5nICwgbmV4dD8gOiBzdHJpbmcgKSA6IHN0cmluZ2BgYCoqCgpSZXR1cm5zIGFuZCBzZXRzIHZhbHVlIGJ5IGtleSB3aXRob3V0IGhpc3RvcnkgcG9zaXRpb24gY2hhbmdpbmcuCgoqKmBgYGRpY3QoIG5leHQ/IDogeyBbIGtldCA6IHN0cmluZyBdIDogc3RyaW5nIH0gKSA6IHsgWyBrZXQgOiBzdHJpbmcgXSA6IHN0cmluZyB9YGBgKioKClJldHVybnMgYW5kIHNldHMgZGljdGlvbmFyeSBvZiBhbGwgYXJndW1lbnRzLgoKKipgYGBsaW5rKCBuZXh0IDogeyBbIGtleSA6IHN0cmluZyBdIDogc3RyaW5nIH0gKSA6IHN0cmluZ2BgYCoqCgpSZXR1cm5zIGxpbmsgd2l0aCBvdmVycmlkZGVuIGFyZ3VtZW50cy4KCiMgUmVhbCB3b3JsZCB1c2FnZQoKLSBbJG1vbF9saW5rXSguLi8uLi9saW5rKQo="

;
"use strict";
var $;
(function ($) {
    class $mol_state_arg extends $mol_object {
        prefix;
        static href(next) {
            if (next === undefined) {
                next = $mol_dom_context.location.href;
            }
            else if (!/^about:srcdoc/.test(next)) {
                new $mol_after_frame(() => {
                    const next = this.href();
                    const prev = $mol_dom_context.location.href;
                    if (next === prev)
                        return;
                    const history = $mol_dom_context.history;
                    history.replaceState(history.state, $mol_dom_context.document.title, next);
                });
            }
            if ($mol_dom_context.parent !== $mol_dom_context.self) {
                $mol_dom_context.parent.postMessage(['hashchange', next], '*');
            }
            return next;
        }
        static href_normal() {
            return this.link({});
        }
        static href_absolute() {
            return new URL(this.href(), $mol_dom_context.location.href).toString();
        }
        static dict(next) {
            var href = this.href(next && this.make_link(next)).split(/#!?/)[1] || '';
            var chunks = href.split(this.separator);
            var params = {};
            chunks.forEach(chunk => {
                if (!chunk)
                    return;
                var vals = chunk.split('=').map(decodeURIComponent);
                params[vals.shift()] = vals.join('=');
            });
            return params;
        }
        static dict_cut(except) {
            const dict = this.dict();
            const cut = {};
            for (const key in dict) {
                if (except.indexOf(key) >= 0)
                    break;
                cut[key] = dict[key];
            }
            return cut;
        }
        static value(key, next) {
            const nextDict = (next === void 0) ? void 0 : { ...this.dict(), [key]: next };
            const next2 = this.dict(nextDict)[key];
            return (next2 == null) ? null : next2;
        }
        static link(next) {
            return this.make_link({
                ...this.dict_cut(Object.keys(next)),
                ...next,
            });
        }
        static prolog = '!';
        static separator = '/';
        static make_link(next) {
            const chunks = [];
            for (let key in next) {
                if (null == next[key])
                    continue;
                const val = next[key];
                chunks.push([key].concat(val ? [val] : []).map(this.encode).join('='));
            }
            return new URL('#' + this.prolog + chunks.join(this.separator), this.href_absolute()).toString();
        }
        static commit() {
            $mol_dom.history.pushState($mol_dom.history.state, $mol_dom.document.title, this.href());
        }
        static go(next) {
            $mol_dom_context.location.href = this.link(next);
        }
        static encode(str) {
            return encodeURIComponent(str).replace(/\(/g, '%28').replace(/\)/g, '%29');
        }
        constructor(prefix = '') {
            super();
            this.prefix = prefix;
        }
        value(key, next) {
            return this.constructor.value(this.prefix + key, next);
        }
        sub(postfix) {
            return new this.constructor(this.prefix + postfix + '.');
        }
        link(next) {
            var prefix = this.prefix;
            var dict = {};
            for (var key in next) {
                dict[prefix + key] = next[key];
            }
            return this.constructor.link(dict);
        }
    }
    __decorate([
        $mol_mem
    ], $mol_state_arg, "href", null);
    __decorate([
        $mol_mem
    ], $mol_state_arg, "href_normal", null);
    __decorate([
        $mol_mem
    ], $mol_state_arg, "href_absolute", null);
    __decorate([
        $mol_mem
    ], $mol_state_arg, "dict", null);
    __decorate([
        $mol_mem_key
    ], $mol_state_arg, "dict_cut", null);
    __decorate([
        $mol_mem_key
    ], $mol_state_arg, "value", null);
    __decorate([
        $mol_mem_key
    ], $mol_state_arg, "make_link", null);
    __decorate([
        $mol_action
    ], $mol_state_arg, "commit", null);
    __decorate([
        $mol_action
    ], $mol_state_arg, "go", null);
    $.$mol_state_arg = $mol_state_arg;
    function $mol_state_arg_change() {
        $mol_state_arg.href($mol_dom_context.location.href);
    }
    self.addEventListener('hashchange', $mol_state_arg_change);
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/meta/readme.md" ] = "IyAkbW9sX21ldGEKCkNvbXBvbmVudHMgZm9yIGJlc3QgU0VPLgoKIyMgVXNhZ2UgZXhhbXBsZQoKYGBgCjw9IHNlb19kZXNjcmlwdGlvbiAkbW9sX21ldGFfZGVzY3JpcHRpb24KCWNvbnRlbnQgXHN1cGVyIG1lZ2Egc2VvIGRlc2NyaXB0aW9uIGFib3V0ICRtb2whCjw9IHNlb19yb2JvdHMgJG1vbF9zZW9fcm9ib3RzCgljb250ZW50IFxpbmRleCwgZm9sbG93Cjw9IHNlb19jYW5vbmljYWwgJG1vbF9tZXRhX2Nhbm9uaWNhbAoJY29udGVudCBcaHR0cHM6Ly9zb21lLXNpdGUuY29tL3J1CmBgYAo="

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_meta_canonical extends $.$mol_meta_canonical {
            content() {
                return $mol_state_arg.href();
            }
        }
        __decorate([
            $mol_mem
        ], $mol_meta_canonical.prototype, "content", null);
        $$.$mol_meta_canonical = $mol_meta_canonical;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
	($.$mol_speck) = class $mol_speck extends ($.$mol_view) {
		theme(){
			return "$mol_theme_accent";
		}
		value(){
			return null;
		}
		minimal_width(){
			return 12;
		}
		attr(){
			return {...(super.attr()), "mol_theme": (this.theme())};
		}
		style(){
			return {...(super.style()), "minHeight": "1em"};
		}
		sub(){
			return [(this.value())];
		}
	};


;
"use strict";
var $;
(function ($) {
    $.$mol_layer = $mol_style_prop('mol_layer', [
        'hover',
        'focus',
        'speck',
        'float',
        'popup',
    ]);
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/layer/layer.css", ":root {\n\t--mol_layer_hover: 1;\n\t--mol_layer_focus: 2;\n\t--mol_layer_speck: 3;\n\t--mol_layer_float: 4;\n\t--mol_layer_popup: 5;\n}\n");
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/speck/readme.md" ] = "IyAkbW9sX3NwZWNrCgpTaG93IHNob3J0IGF0dGVudGlvbiBpbmZvIGF0IG90aGVyIGNvbXBvbmVudC4KCiMjIFtPbmxpbmUgZGVtb10oaHR0cHM6Ly9tb2wuaHlvby5ydS8jIXNlY3Rpb249ZGVtb3MvcmVhZG1lL2RlbW89bW9sX3NwZWNrX2RlbW8pCgojIyBVc2FnZSBleGFtcGxlCgpgYGAKPD0gQmV0YSAkbW9sX3NwZWNrCgl2YWx1ZSBc8J2eqwpgYGAKCiMjIFByb3BlcnRpZXMKCioqYHZhbHVlKCkgOiBhbnlgKioKClZhbHVlIGZvciBzaG93aW5nIGluc2lkZS4K"

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/speck/speck.view.css", "[mol_speck] {\n\tfont-size: .75rem;\n\tborder-radius: 1rem;\n\tmargin: -0.5rem -0.2rem;\n\talign-self: flex-start;\n\tmin-height: 1em;\n\tvertical-align: sub;\n\tpadding: 0 .2rem;\n\tposition: absolute;\n\tz-index: var(--mol_layer_speck);\n\ttext-align: center;\n\tline-height: .9;\n\tdisplay: inline-block;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\tuser-select: none;\n\tbox-shadow: 0 0 3px rgba(0,0,0,.5);\n}\n");
})($ || ($ = {}));

;
"use strict";

;
	($.$mol_button) = class $mol_button extends ($.$mol_view) {
		event_activate(next){
			if(next !== undefined) return next;
			return null;
		}
		clicks(next){
			if(next !== undefined) return next;
			return null;
		}
		event_key_press(next){
			if(next !== undefined) return next;
			return null;
		}
		disabled(){
			return false;
		}
		tab_index(){
			return 0;
		}
		hint(){
			return "";
		}
		hint_safe(){
			return (this.hint());
		}
		error(){
			return "";
		}
		enabled(){
			return true;
		}
		click(next){
			if(next !== undefined) return next;
			return null;
		}
		event_click(next){
			if(next !== undefined) return next;
			return null;
		}
		event(){
			return {
				...(super.event()), 
				"click": (next) => (this.event_activate(next)), 
				"dblclick": (next) => (this.clicks(next)), 
				"keydown": (next) => (this.event_key_press(next))
			};
		}
		attr(){
			return {
				...(super.attr()), 
				"disabled": (this.disabled()), 
				"role": "button", 
				"tabindex": (this.tab_index()), 
				"title": (this.hint_safe())
			};
		}
		sub(){
			return [(this.title())];
		}
		Speck(){
			const obj = new this.$.$mol_speck();
			(obj.value) = () => ((this.error()));
			return obj;
		}
	};
	($mol_mem(($.$mol_button.prototype), "event_activate"));
	($mol_mem(($.$mol_button.prototype), "clicks"));
	($mol_mem(($.$mol_button.prototype), "event_key_press"));
	($mol_mem(($.$mol_button.prototype), "click"));
	($mol_mem(($.$mol_button.prototype), "event_click"));
	($mol_mem(($.$mol_button.prototype), "Speck"));


;
var $node = $node || {} ; $node[ "/mol/button/readme.md" ] = "IyAkbW9sX2J1dHRvbgoKU2ltcGxlIGJ1dHRvbi4KCiMjIFtPbmxpbmUgZGVtb10oaHR0cHM6Ly9tb2wuaHlvby5ydS8jIXNlY3Rpb249ZGVtb3MvcmVhZG1lL2RlbW89bW9sX2J1dHRvbl9kZW1vKQoKIyMgVXNhZ2UgZXhhbXBsZQoKTWFqb3IgYnV0dG9uOgoKYGBgCjw9IFN1Ym1pdCAkbW9sX2J1dHRvbl9tYWpvcgoJY2xpY2s/IDw9PiBzdWJtaXQ/IG51bGwKCXRpdGxlIDw9IHN1Ym1pdF9sYWJlbCBAIFxTdWJtaXQgZm9ybQpgYGAKCk1pbm9yIGJ1dHRvbiB3aXRoIGN1c3RvbSBjb250ZW50IChpY29uIGFuZCB0aXRsZSk6CgpgYGAKPD0gU3VibWl0ICRtb2xfYnV0dG9uX21pbm9yCgljbGljaz8gPD0+IHN1Ym1pdD8gbnVsbAoJc3ViIC8KCQk8PSBTdWJtaXRfaWNvbiAkbW9sX2ljb25fY3Vyc29yX2RlZmF1bHRfY2xpY2sKCQk8PSBzdWJtaXRfbGFiZWwgQCBcU3VibWl0IGZvcm0KYGBgCgojIyBWYXJpYXRpb25zCgpbJG1vbF9idXR0b25fbWFqb3JdKG1ham9yKSAtIENhbGwtVG8tQWN0aW9uIGJ1dHRvbgoKWyRtb2xfYnV0dG9uX21pbm9yXShtaW5vcikgLSBHZW5lcmljIGJ1dHRvbgoKWyRtb2xfYnV0dG9uX2NvcHldKGNvcHkpIC0gQ29weSBgYGB0ZXh0KClgYGAgdmFsdWUgdG8gY2xpcGJvYXJkCgpbJG1vbF9idXR0b25fZG93bmxvYWRdKGRvd25sb2FkKSAtIERvd25sb2FkIGZpbGUgZnJvbSBgYGB1cmkoKWBgYCBvciBhIGBgYGJsb2IoKWBgYAoKWyRtb2xfYnV0dG9uX29wZW5dKG9wZW4pIC0gRmlsZSBvcGVuIGJ1dHRvbgoKWyRtb2xfYnV0dG9uX3NoYXJlXShzaGFyZSkgLSBTaGFyZSBgYGB0aXRsZSgpYGBgIGFuZCBgYGB1cmkoKWBgYCB0byBvdGhlciBhcHAgCgpbJG1vbF9idXR0b25fdHlwZWRdKHR5cGVkKSAtIEJ1dHRvbiB3aXRoIGJhc2ljIHN0eWxlcyBmb3IgYnV0dG9ucwoKIyMgUHJvcGVydGllcwoKKipgZW5hYmxlZCgpIDogYm9vbGVhbmAqKgoKVGhlIGJ1dHRvbiBjYW4gb25seSBiZSBwcmVzc2VkIHdoZW4gaXQgaXMgZW5hYmxlZC4KCioqYGNsaWNrKCBuZXh0PyA6IEV2ZW50ICkgOiBFdmVudGAqKgoKU3RvcmVzIGxhc3QgZXZlbnQgd2hlbiBidXR0b24gYWN0aXZhdGVkLiBPdmVybG9hZCB0aGlzIHByb3BlcnR5IHRvIGRvIHlvdXIgYWN0aW9uIGluc3RlYWQuCg=="

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_button extends $.$mol_button {
            status(next = [null]) { return next; }
            disabled() {
                return !this.enabled();
            }
            event_activate(next) {
                if (!next)
                    return;
                if (!this.enabled())
                    return;
                try {
                    this.event_click(next);
                    this.click(next);
                    this.status([null]);
                }
                catch (error) {
                    Promise.resolve().then(() => this.status([error]));
                    $mol_fail_hidden(error);
                }
            }
            event_key_press(event) {
                if (event.keyCode === $mol_keyboard_code.enter) {
                    return this.event_activate(event);
                }
            }
            tab_index() {
                return this.enabled() ? super.tab_index() : -1;
            }
            error() {
                const [error] = this.status();
                if (!error)
                    return '';
                if (error instanceof Promise) {
                    return $mol_fail_hidden(error);
                }
                return String(error.message ?? error);
            }
            hint_safe() {
                try {
                    return this.hint();
                }
                catch (error) {
                    $mol_fail_log(error);
                    return '';
                }
            }
            sub_visible() {
                return [
                    ...this.error() ? [this.Speck()] : [],
                    ...this.sub(),
                ];
            }
        }
        __decorate([
            $mol_mem
        ], $mol_button.prototype, "status", null);
        $$.$mol_button = $mol_button;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/button/button.view.css", "[mol_button] {\n\tborder: none;\n\tfont: inherit;\n\tdisplay: inline-flex;\n\tflex-shrink: 0;\n\ttext-decoration: inherit;\n\tcursor: inherit;\n\tposition: relative;\n\tbox-sizing: border-box;\n\tword-break: normal;\n\tcursor: default;\n\tuser-select: none;\n\tborder-radius: var(--mol_gap_round);\n\tbackground: transparent;\n\tcolor: inherit;\n}\n\n[mol_button]:where(:not(:disabled)):hover {\n\tz-index: var(--mol_layer_hover);\n}\n\n[mol_button]:focus {\n\toutline: none;\n\tz-index: var(--mol_layer_focus);\n}\n");
})($ || ($ = {}));

;
	($.$mol_list) = class $mol_list extends ($.$mol_view) {
		rows(){
			return [];
		}
		gap_before(){
			return 0;
		}
		gap_after(){
			return 0;
		}
		render_visible_only(){
			return true;
		}
		render_over(){
			return 0;
		}
		sub(){
			return (this.rows());
		}
		Empty(){
			const obj = new this.$.$mol_view();
			return obj;
		}
		Gap_before(){
			const obj = new this.$.$mol_view();
			(obj.style) = () => ({"paddingTop": (this.gap_before())});
			return obj;
		}
		Gap_after(){
			const obj = new this.$.$mol_view();
			(obj.style) = () => ({"paddingTop": (this.gap_after())});
			return obj;
		}
		item_height_min(id){
			return 1;
		}
		item_width_min(id){
			return 1;
		}
		view_window(){
			return [0, 0];
		}
	};
	($mol_mem(($.$mol_list.prototype), "Empty"));
	($mol_mem(($.$mol_list.prototype), "Gap_before"));
	($mol_mem(($.$mol_list.prototype), "Gap_after"));


;
"use strict";
var $;
(function ($) {
    let cache = null;
    function $mol_support_css_overflow_anchor() {
        return cache ?? (cache = this.$mol_dom_context.CSS?.supports('overflow-anchor:auto') ?? false);
    }
    $.$mol_support_css_overflow_anchor = $mol_support_css_overflow_anchor;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $.$mol_mem_cached = $mol_wire_probe;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/list/readme.md" ] = "IyAkbW9sX2xpc3QKCiMjIFtPbmxpbmUgZGVtb10oaHR0cHM6Ly9tb2wuaHlvby5ydS8jIXNlY3Rpb249ZGVtb3MvcmVhZG1lL2RlbW89bW9sX2xpc3RfZGVtb190cmVlKQoKVGhlIGxpc3Qgb2Ygcm93cyB3aXRoIGxhenkvdmlydHVhbCByZW5kZXJpbmcgc3VwcG9ydCBiYXNlZCBvbiBgbWluaW1hbF9oZWlnaHRgIG9mIHJvd3MuCgo+IGAkbW9sX2xpc3RgIHNob3VsZCBjb250YWluIG9ubHkgY29tcG9uZW50cyB0aGF0IGluaGVyaXRzIGAkbW9sX3ZpZXdgLiBZb3Ugc2hvdWxkIG5vdCBwbGFjZSByYXcgc3RyaW5ncyBvciBudW1iZXJzIGluIGxpc3QuCgojIyBVc2FnZSBleGFtcGxlCgojIyMgU3RhdGljIGxpc3Q6CgpgYGAKPD0gVXNlcnMgJG1vbF9saXN0Cglyb3dzIC8KCQk8PSBVc2VyXzEgJG1vbF92aWV3CgkJPD0gVXNlcl8yICRtb2xfdmlldwoJCTw9IFVzZXJfMyAkbW9sX3ZpZXcKCUVtcHR5IDw9IFVzZXJzX2VtcHR5ICRtb2xfcGFyYWdyYXBoCgkJdGl0bGUgXE5vIHVzZXJzCmBgYAoKIyMjIER5bmFtaWMgbGlzdDoKCmBgYAo8PSBJdGVtcyAkbW9sX2xpc3QKCXJvd3MgPD0gbGlzdF9pdGVtcyAvJG1vbF92aWV3CgpJdGVtKiAkbW9sX2xpbmsKCXRpdGxlIDw9IGl0ZW1fdGl0bGUqIFwKYGBgCgo+IGBsaXN0X2l0ZW1zIC8kbW9sX3ZpZXdgIFtleHBsYWluXShodHRwczovL21vbC5oeW9vLnJ1LyMhc2VjdGlvbj12aWV3LnRyZWUvc291cmNlPSUyNGV4YW1wbGUlMjAlMjRtb2xfb2JqZWN0JTBBJTA5bGlzdF9pdGVtcyUyMCUyRiUwQSUwOWxpc3RfaXRlbXNfdHlwZWQlMjAlMkYlMjRtb2xfdmlldyUwQSkgLSB0eXBlZCBsaXN0IG9mIGl0ZW1zCgpvciBzaW1pbGFyIGZvcm0gd2l0aCBgSXRlbWAgdW5kZXIgYGxpc3RfaXRlbXNgCgpgYGAKPD0gSXRlbXMgJG1vbF9saXN0Cglyb3dzIDw9IGxpc3RfaXRlbXMgLwoJCTw9IEl0ZW0qMCAkbW9sX2xpbmsKCQkJdGl0bGUgPD0gaXRlbV90aXRsZSogXApgYGAKCj4gYEl0ZW0qMGAgW2V4cGxhaW5dKGh0dHBzOi8vbW9sLmh5b28ucnUvIyFzZWN0aW9uPXZpZXcudHJlZS9zb3VyY2U9JTI0bXlfZXhhbXBsZSUyMCUyNG1vbF9vYmplY3QlMEElMDlmb28lMjAlM0MlM0QlMjBzcHJlYWRzKmZvbyUwQSUwOWl0ZW1fYXRfMCUyMCUzQyUzRCUyMGl0ZW1zKjAlMEEpIAoKT3ZlcnJpZGUgYGxpc3RfaXRlbXNgIGluIGB2aWV3LnRzYCBmaWxlOgoKYGBgdHMKQCAkbW9sX21lbV9rZXkKb3ZlcnJpZGUgaXRlbV90aXRsZSggaWQgOiBzdHJpbmcgKSB7CglyZXR1cm4gYEl0ZW0jJHsgaWQgfWAKfQoKb3ZlcnJpZGUgbGlzdF9pdGVtcygpIHsKCXJldHVybiB0aGlzLmxpc3RfaXRlbXNfaWRzKCkubWFwKCBpZCA9PiB7CgkJcmV0dXJuIHRoaXMuSXRlbSggaWQgKQoJfSApCn0KCmxpc3RfaXRlbXNfaWRzKCkgeyAvLyBkZWNsYXJlIHlvdXIgbG9naWMKCXJldHVybiBbMSwyLDNdCn0KYGBgCgojIyBQcm9wZXJ0aWVzCgpgcm93cygpIDogW11gCgpSZXR1cm5zIGxpc3Qgb2Ygcm93cy4KCmBFbXB0eSgpOiAkbW9sX3ZpZXdgCgpSZXR1cm5zIGVtcHR5IGxpc3QgcGxhY2Vob2xkZXIuCg=="

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_list extends $.$mol_list {
            sub() {
                const rows = this.rows();
                return (rows.length === 0) ? [this.Empty()] : rows;
            }
            render_visible_only() {
                return this.$.$mol_support_css_overflow_anchor();
            }
            view_window(next) {
                const kids = this.sub();
                if (kids.length < 3)
                    return [0, kids.length];
                if (this.$.$mol_print.active())
                    return [0, kids.length];
                const rect = this.view_rect();
                if (next)
                    return next;
                let [min, max] = $mol_mem_cached(() => this.view_window()) ?? [0, 0];
                let max2 = max = Math.min(max, kids.length);
                let min2 = min = Math.max(0, Math.min(min, max - 1));
                const anchoring = this.render_visible_only();
                const window_height = this.$.$mol_window.size().height + 40;
                const over = Math.ceil(window_height * this.render_over());
                const limit_top = -over;
                const limit_bottom = window_height + over;
                const gap_before = $mol_mem_cached(() => this.gap_before()) ?? 0;
                const gap_after = $mol_mem_cached(() => this.gap_after()) ?? 0;
                let top = Math.ceil(rect?.top ?? 0) + gap_before;
                let bottom = Math.ceil(rect?.bottom ?? 0) - gap_after;
                if (top <= limit_top && bottom >= limit_bottom) {
                    return [min2, max2];
                }
                if (anchoring && ((bottom < limit_top) || (top > limit_bottom))) {
                    min = 0;
                    top = Math.ceil(rect?.top ?? 0);
                    while (min < (kids.length - 1)) {
                        const height = this.item_height_min(min);
                        if (top + height >= limit_top)
                            break;
                        top += height;
                        ++min;
                    }
                    min2 = min;
                    max2 = max = min;
                    bottom = top;
                }
                let top2 = top;
                let bottom2 = bottom;
                if (anchoring && (top < limit_top) && (bottom < limit_bottom) && (max < kids.length)) {
                    min2 = max;
                    top2 = bottom;
                }
                if ((bottom > limit_bottom) && (top > limit_top) && (min > 0)) {
                    max2 = min;
                    bottom2 = top;
                }
                while (anchoring && ((top2 > limit_top) && (min2 > 0))) {
                    --min2;
                    top2 -= this.item_height_min(min2);
                }
                while (bottom2 < limit_bottom && max2 < kids.length) {
                    bottom2 += this.item_height_min(max2);
                    ++max2;
                }
                return [min2, max2];
            }
            item_height_min(index) {
                try {
                    return this.sub()[index]?.minimal_height() ?? 0;
                }
                catch (error) {
                    $mol_fail_log(error);
                    return 0;
                }
            }
            row_width_min(index) {
                try {
                    return this.sub()[index]?.minimal_width() ?? 0;
                }
                catch (error) {
                    $mol_fail_log(error);
                    return 0;
                }
            }
            gap_before() {
                let gap = 0;
                const skipped = this.view_window()[0];
                for (let i = 0; i < skipped; ++i)
                    gap += this.item_height_min(i);
                return gap;
            }
            gap_after() {
                let gap = 0;
                const from = this.view_window()[1];
                const to = this.sub().length;
                for (let i = from; i < to; ++i)
                    gap += this.item_height_min(i);
                return gap;
            }
            sub_visible() {
                return [
                    ...this.gap_before() ? [this.Gap_before()] : [],
                    ...this.sub().slice(...this.view_window()),
                    ...this.gap_after() ? [this.Gap_after()] : [],
                ];
            }
            minimal_height() {
                let height = 0;
                const len = this.sub().length;
                for (let i = 0; i < len; ++i)
                    height += this.item_height_min(i);
                return height;
            }
            minimal_width() {
                let width = 0;
                const len = this.sub().length;
                for (let i = 0; i < len; ++i)
                    width = Math.max(width, this.item_width_min(i));
                return width;
            }
            force_render(path) {
                const kids = this.rows();
                const index = kids.findIndex(item => path.has(item));
                if (index >= 0) {
                    const win = this.view_window();
                    if (index < win[0] || index >= win[1]) {
                        this.view_window([this.render_visible_only() ? index : 0, index + 1]);
                    }
                    kids[index].force_render(path);
                }
            }
        }
        __decorate([
            $mol_mem
        ], $mol_list.prototype, "sub", null);
        __decorate([
            $mol_mem
        ], $mol_list.prototype, "view_window", null);
        __decorate([
            $mol_mem
        ], $mol_list.prototype, "gap_before", null);
        __decorate([
            $mol_mem
        ], $mol_list.prototype, "gap_after", null);
        __decorate([
            $mol_mem
        ], $mol_list.prototype, "sub_visible", null);
        __decorate([
            $mol_mem
        ], $mol_list.prototype, "minimal_height", null);
        __decorate([
            $mol_mem
        ], $mol_list.prototype, "minimal_width", null);
        $$.$mol_list = $mol_list;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/list/list.view.css", "[mol_list] {\n\twill-change: contents;\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-shrink: 0;\n\tmax-width: 100%;\n\t/* display: flex;\n\talign-items: stretch;\n\talign-content: stretch; */\n\ttransition: none;\n\tmin-height: 1.5rem;\n}\n\n[mol_list_gap_before] ,\n[mol_list_gap_after] {\n\tdisplay: block !important;\n\tflex: none;\n\ttransition: none;\n\toverflow-anchor: none;\n}\n");
})($ || ($ = {}));

;
	($.$mol_paragraph) = class $mol_paragraph extends ($.$mol_view) {
		line_height(){
			return 24;
		}
		letter_width(){
			return 7;
		}
		width_limit(){
			return +Infinity;
		}
		row_width(){
			return 0;
		}
		sub(){
			return [(this.title())];
		}
	};


;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_paragraph extends $.$mol_paragraph {
            maximal_width() {
                let width = 0;
                const letter = this.letter_width();
                for (const kid of this.sub()) {
                    if (!kid)
                        continue;
                    if (kid instanceof $mol_view) {
                        width += kid.maximal_width();
                    }
                    else if (typeof kid !== 'object') {
                        width += String(kid).length * letter;
                    }
                }
                return width;
            }
            width_limit() {
                return this.$.$mol_window.size().width;
            }
            minimal_width() {
                return this.letter_width();
            }
            row_width() {
                return Math.max(Math.min(this.width_limit(), this.maximal_width()), this.letter_width());
            }
            minimal_height() {
                return Math.max(1, Math.ceil(this.maximal_width() / this.row_width())) * this.line_height();
            }
        }
        __decorate([
            $mol_mem
        ], $mol_paragraph.prototype, "maximal_width", null);
        __decorate([
            $mol_mem
        ], $mol_paragraph.prototype, "row_width", null);
        __decorate([
            $mol_mem
        ], $mol_paragraph.prototype, "minimal_height", null);
        $$.$mol_paragraph = $mol_paragraph;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/paragraph/paragraph.view.css", ":where([mol_paragraph]) {\n\tmargin: 0;\n\tmax-width: 100%;\n}\n");
})($ || ($ = {}));

;
	($.$mol_stack) = class $mol_stack extends ($.$mol_view) {};


;
var $node = $node || {} ; $node[ "/mol/stack/readme.md" ] = "IyAkbW9sX3N0YWNrDQoNCkxheW91dCB3aXRoIG92ZXJsYXBwaW5nIGVsZW1lbnRzLg0KDQojIyBbT25saW5lIGRlbW9dKGh0dHBzOi8vbW9sLmh5b28ucnUvIyFzZWN0aW9uPWRlbW9zL2RlbW89bW9sX3N0YWNrX2RlbW8pDQo="

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/stack/stack.view.css", "[mol_stack] {\n\tdisplay: grid;\n\t/* width: max-content; */\n\t/* height: max-content; */\n\talign-items: flex-start;\n\tjustify-items: flex-start;\n}\n\n[mol_stack] > * {\n\tgrid-area: 1/1;\n}\n");
})($ || ($ = {}));

;
"use strict";

;
	($.$mol_dimmer) = class $mol_dimmer extends ($.$mol_paragraph) {
		parts(){
			return [];
		}
		string(id){
			return "";
		}
		haystack(){
			return "";
		}
		needle(){
			return "";
		}
		sub(){
			return (this.parts());
		}
		Low(id){
			const obj = new this.$.$mol_paragraph();
			(obj.sub) = () => ([(this.string(id))]);
			return obj;
		}
		High(id){
			const obj = new this.$.$mol_paragraph();
			(obj.sub) = () => ([(this.string(id))]);
			return obj;
		}
	};
	($mol_mem_key(($.$mol_dimmer.prototype), "Low"));
	($mol_mem_key(($.$mol_dimmer.prototype), "High"));


;
"use strict";

;
"use strict";

;
"use strict";

;
"use strict";

;
var $node = $node || {} ; $node[ "/mol/regexp/README.md" ] = "IyAkbW9sX3JlZ2V4cAoKQnVpbGRzIGNvbXBvc2FibGUgcmVndWxhciBleHByZXNzaW9uLCB3aGljaCBjb21waWxlcyB0byBuYXRpdmUgUmVnRXhwLiBBbmQgZ2VuZXJhdGVzIGEgbWF0Y2hpbmcgc3RyaW5nIGZvciBpdC4KCiMjIEluc3RhbmNlIEFQSQoKIyMjIEFsbCBNYXRjaGVkIFN1YnN0cmluZ3MKCmBgYHR5cGVzY3JpcHQKLy8gWyAnZm9vJywgJ2JhcicgXQonZm9vIGJhcicubWF0Y2goIHdvcmQgKQpgYGAKCiMjIyBUb2tlbml6ZSBTdHJpbmcKCmBgYHR5cGVzY3JpcHQKLy8gWyAnZm9vJywgJ2JhcicgXQpmb3IoIGNvbnN0IHRva2VuIG9mICdmb28gYmFyJy5tYXRjaEFsbCggd29yZCApICkgewoJCgkvLyBGdWxsIG1hdGNoZWQgc3Vic3RyaW5nCgl0b2tlblswXQoJCgkvLyBDYXRjaGVkIHN1Ymdyb3VwcyBieSBuYW1lcyBsaWtlIGB7IGZvbzogJ2JhcicsIC4uLiB9YAoJLy8gYHVuZGVmaW5lZGAgd2hlbiB0b2tlbiBkb2Vzbid0IG1hdGNoZWQuCgl0b2tlbi5ncm91cHMKCQp9CmBgYAoKIyMjIEdlbmVyYXRlIE5ldyBTdHJpbmcKCiMjIyMgU3Vic3RpdHV0aW9uCgpgYGB0eXBlc2NyaXB0Ci8vICJmb29AZXhhbXBsZS5vcmciCm1haWwuZ2VuZXJhdGUoewoJZG90X2F0b206ICdmb28nLAoJZG9tYWluOiAnZXhhbXBsZS5vcmcnLAp9KQpgYGAKCiMjIyMgVmFsaWRhdGlvbgoKYGBgdHlwZXNjcmlwdAovLyBFcnJvcjogIldyb25nIHBhcmFtOiBkb3RfYXRvbT1qaW4uIgptYWlsLmdlbmVyYXRlKHsKCWRvdF9hdG9tOiAnamluLicsCglkb21haW46ICdleGFtcGxlLm9yZycsCn0pCmBgYAoKIyMjIyBEZWZhdWx0IFZhbHVlIGZyb20gUGF0dGVybgoKYGBgdHlwZXNjcmlwdAovLyAiamluOiBtYWxlIgpzZXhpc20uZ2VuZXJhdGUoewoJbmFtZTogJ2ppbicsCgltYWxlOiB0cnVlLAp9KQpgYGAKCiMjIEJ1aWxkIEluc3RhbmNlCgpbTW9yZSBleGFtcGxlcyBpbiB0ZXN0cy5dKC4vcmVnZXhwLnRlc3QudHMpCgojIyMgRml4ZWQgU3RyaW5nCgpgYGB0eXBlc2NyaXB0Ci8vIC86XCkvZ3N1CmNvbnN0IHNtaWxlID0gJG1vbF9yZWdleHAuZnJvbSggJzopJyApCmBgYAoKfCBNYXRjaGVzCnwtLS0tLS0tLQp8IDopCgojIyMgRmxhZ3MKCmBgYHR5cGVzY3JpcHQKLy8gL2hlbGxvL2dpbXN1CmNvbnN0IGhlbGxvID0gJG1vbF9yZWdleHAuZnJvbSggJ2hlbGxvJywgewoJaWdub3JlQ2FzZTogdHJ1ZSwKCW11bHRpbGluZTogdHJ1ZSwKfSApCmBgYAoKfCBNYXRjaGVzCnwtLS0tLS0tLQp8IGhlbGxvCnwgSEVMTE8KCiMjIyBGcm9tIE90aGVyIFJlZ2V4cAoKYGBgdHlwZXNjcmlwdAovLyAvLi4uL2dtc3UKY29uc3QgdHJpcGxldCA9ICRtb2xfcmVnZXhwLmZyb20oCgkkbW9sX3JlZ2V4cC5mcm9tKAoJCS8uLi4vLAoJCXsgaWdub3JlQ2FzZTogdHJ1ZSB9LAoJKSwKCXsgbXVsdGlsaW5lOiB0cnVlIH0sCikKYGBgCgp8IE1hdGNoZXMKfC0tLS0tLS0tCnwgYW55CnwgYT0rCgojIyMgQ2hhciBieSBjb2RlIHBvaW50CgpgYGB0eXBlc2NyaXB0Ci8vIC9cdXsyMH0vZ3N1CmNvbnN0IHNwYWNlID0gJG1vbF9yZWdleHAuZnJvbSggMzIgKQpgYGAKCiMjIyBJbmNsdXNpdmUgY2hhciBjbGFzcwoKYGBgdHlwZXNjcmlwdAovLyAvWyw7XHV7MjB9XHV7NjF9LVx1ezdhfVxkXS9nc3UKY29uc3QgdGFncyA9ICRtb2xfcmVnZXhwLmNoYXJfb25seSgKCScsOycsIC8vIGNoYXJzCgkzMiwgLy8gY29kZSBvZiBzcGFjZQoJJG1vbF9yZWdleHAuY2hhcl9yYW5nZSggMHg2MSwgMHg3QSApLCAvLyBhLXoKCSRtb2xfcmVnZXhwLmRlY2ltYWxfb25seSwgLy8gMC05CikKYGBgCgp8IE1hdGNoZXMKfC0tLS0tLS0tCnwgZm9vLCBiYXIKfCAwOzE7MTAKCiMjIyBFeGNsdXNpdmUgY2hhciBjbGFzcwoKYGBgdHlwZXNjcmlwdAovLyAvW14sO1x1ezIwfVx1ezYxfS1cdXs3YX1cZF0vZ3N1CmNvbnN0IHRhZ3MgPSAkbW9sX3JlZ2V4cC5jaGFyX2V4Y2VwdCgKCScsOycsIC8vIGNoYXJzCgkzMiwgLy8gY29kZSBvZiBzcGFjZQoJJG1vbF9yZWdleHAuY2hhcl9yYW5nZSggMHg2MSwgMHg3QSApLCAvLyBhLXoKCSRtb2xfcmVnZXhwLmRlY2ltYWxfb25seSwgLy8gMC05CikKYGBgCgp8IE1hdGNoZXMKfC0tLS0tLS0tCnwgKj0rCnwgQUJDIAoKIyMjIFVuaWNvZGUgY2xhc3NlcwoKYGBgdHlwZXNjcmlwdAovLyAvXHB7U2NyaXB0PUN5cmlsbGljfS9nc3UKJG1vbF9yZWdleHAudW5pY29kZV9vbmx5KCAnU2NyaXB0JywgJ0N5cmlsbGljJyApCgovLyAvXFB7U2NyaXB0PUN5cmlsbGljfS9nc3UKJG1vbF9yZWdleHAudW5pY29kZV9leGNlcHQoICdTY3JpcHQnLCAnQ3lyaWxsaWMnICkKCi8vIC9ccHtIZXhfRGlnaXR9L2dzdQokbW9sX3JlZ2V4cC51bmljb2RlX29ubHkoICdIZXhfRGlnaXQnICkKCi8vIC9cUHtIZXhfRGlnaXR9L2dzdQokbW9sX3JlZ2V4cC51bmljb2RlX2V4Y2VwdCggJ0hleF9EaWdpdCcgKQpgYGAKCiMjIyBSZXBlYXQgbm9uLWdyZWVkeQoKYGBgdHlwZXNjcmlwdAovLyBSZWdleHA6IC8oPzpcbil7MSwyfT8vZ3N1CmNvbnN0IHBhcmFfc2VwID0gJG1vbF9yZWdleHAucmVwZWF0KCAnXG4nLCAxLCAyICkKYGBgCgp8IE1hdGNoZXMKfC0tLS0tLS0tCnwgXG4gCnwgXG5cbiAKCiMjIyBSZXBlYXQgZ3JlZWR5CgpgYGB0eXBlc2NyaXB0Ci8vIC8oPzpcZCl7Miw0fS8KY29uc3QgeWVhciA9ICRtb2xfcmVnZXhwLnJlcGVhdF9ncmVlZHkoICRtb2xfcmVnZXhwLmRlY2ltYWxfb25seSwgMiwgNCApCmBgYAoKfCBNYXRjaGVzCnwtLS0tLS0tLQp8IDk1CnwgMjAyMCAKCiMjIyBTZXF1ZW5jZSBhbmQgb3B0aW9uYWwgc2VxdWVuY2UKCmBgYHR5cGVzY3JpcHQKLy8gLyg/OlxkKXsyLDR9KD86XC5cLig/OlxkKXsyLDR9KXswLDF9L2dzdQpjb25zdCBsaWZlX3llYXJzID0gJG1vbF9yZWdleHAuZnJvbShbIHllYXIsIFsgJy4uJywgeWVhciBdIF0pCmBgYAoKfCBNYXRjaGVzCnwtLS0tLS0tLQp8IDk1Li45OSAKfCAyMDIwIAoKIyMjIENhdGNoIGdyb3VwcwoKYGBgdHlwZXNjcmlwdApjb25zdCBmcm9tID0geWVhcgpjb25zdCB0byA9IHllYXIKCi8vIC8oPzooKD86XGQpezIsNH0pKSg/OlwuXC4oPzooKD86XGQpezIsNH0pKSl7MCwxfS9nc3UKY29uc3QgbGlmZV95ZWFycyA9ICRtb2xfcmVnZXhwLmZyb20oWyB7ZnJvbX0sIFsgJy4uJywge3RvfSBdIF0pCmBgYAoKfCBNYXRjaGVzIHwgZnJvbSB8IHRvCnwtLS0tLS0tLS18LS0tLS0tfC0tLS0KfCA5NS4uOTkgIHwgOTUgICB8IDk5CnwgMjAyMCAgICB8IDIwMjAgfCAKCiMjIyDQoWF0Y2ggdmFyaWFudHMKCmBgYHR5cGVzY3JpcHQKZW51bSBTZXggewoJbWFsZSA9ICdtYWxlJywKCWZlbWFsZSA9ICdmZW1hbGUnLAp9CgovLyAvKD86KCg/OihtYWxlKXwoZmVtYWxlKSkpKS9nc3UKY29uc3Qgc2V4ID0gJG1vbF9yZWdleHAuZnJvbSgge1NleH0gKQoKLy8geyBTZXg6IHN0cmluZywgbWFsZTogc3RyaW5nLCBmZW1hbGU6IHN0cmluZyB9IHwgdW5kZWZpbmVkCmNvbnN0IHJlcyA9IFsgLi4uIHRleHQubWF0Y2hBbGwoIHNleCApIF1bMF0uZ3JvdXBzCmBgYAoKfCBNYXRjaGVzIHwgU2V4ICAgIHwgbWFsZSAgICAgIHwgZmVtYWxlCnwtLS0tLS0tLS18LS0tLS0tLS18LS0tLS0tLS0tLS18LS0tLS0tLQp8IG1hbGUgICAgfCBtYWxlICAgfCBtYWxlICAgICAgfCAKfCBmZW1hbGUgIHwgZmVtYWxlIHwgICAgICAgICAgIHwgZmVtYWxlCgojIyMgQ29tcGxleCBleGFtcGxlCgpgYGB0eXBlc2NyaXB0CmNvbnN0IHsKCWJlZ2luLCBlbmQsCgljaGFyX29ubHksIGNoYXJfcmFuZ2UsCglsYXRpbl9vbmx5LCBzbGFzaF9iYWNrLAoJcmVwZWF0X2dyZWVkeSwgZnJvbSwKfSA9ICRtb2xfcmVnZXhwCgpjb25zdCBhdG9tX2NoYXIgPSBjaGFyX29ubHkoIGxhdGluX29ubHksICIhIyQlJicqKy89P15ge3x9fi0iICkKY29uc3QgYXRvbSA9IHJlcGVhdF9ncmVlZHkoIGF0b21fY2hhciwgMSApCmNvbnN0IGRvdF9hdG9tID0gZnJvbShbIGF0b20sIHJlcGVhdF9ncmVlZHkoWyAnLicsIGF0b20gXSkgXSkKCmNvbnN0IG5hbWVfbGV0dGVyID0gY2hhcl9vbmx5KAoJY2hhcl9yYW5nZSggMHgwMSwgMHgwOCApLAoJMHgwYiwgMHgwYywKCWNoYXJfcmFuZ2UoIDB4MGUsIDB4MWYgKSwKCTB4MjEsCgljaGFyX3JhbmdlKCAweDIzLCAweDViICksCgljaGFyX3JhbmdlKCAweDVkLCAweDdmICksCikKCmNvbnN0IHF1b3RlZF9wYWlyID0gZnJvbShbCglzbGFzaF9iYWNrLAoJY2hhcl9vbmx5KAoJCWNoYXJfcmFuZ2UoIDB4MDEsIDB4MDkgKSwKCQkweDBiLCAweDBjLAoJCWNoYXJfcmFuZ2UoIDB4MGUsIDB4N2YgKSwKCSkKXSkKCmNvbnN0IG5hbWUgPSByZXBlYXRfZ3JlZWR5KHsgbmFtZV9sZXR0ZXIsIHF1b3RlZF9wYWlyIH0pCmNvbnN0IHF1b3RlZF9uYW1lID0gZnJvbShbICciJywge25hbWV9LCAnIicgXSkKCmNvbnN0IGxvY2FsX3BhcnQgPSBmcm9tKHsgZG90X2F0b20sIHF1b3RlZF9uYW1lIH0pCmNvbnN0IGRvbWFpbiA9IGRvdF9hdG9tCgpjb25zdCBtYWlsID0gZnJvbShbIGJlZ2luLCBsb2NhbF9wYXJ0LCAnQCcsIHtkb21haW59LCBlbmQgXSkKYGBgCgp8IE1hdGNoZXMgICB8IGRvbWFpbiB8IGRvdF9hdG9tIHwgbmFtZSB8IG5hbWVfbGV0dGVyIHwgcXVvdGVkX25hbWUgfCBxdW90ZWRfcGFpcgp8LS0tLS0tLS0tLS18LS0tLS0tLS18LS0tLS0tLS0tLXwtLS0tLS18LS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLQp8IGEuYkBjLmQgICB8IGMuZCAgICB8IGEuYiAgICAgIHwgICAgICB8ICAgICAgICAgICAgIHwgICAgICAgICAgICAgfAp8ICJhXG4iQGMuZCB8IGMuZCAgICB8ICAgICAgICAgIHwgYVxuICB8ICAgICAgICAgICAgIHwgImFcbiIgICAgICAgfCBcbgoKIyMgVXNhZ2UgZnJvbSBOUE0KCmBgYApucG0gaW5zdGFsbCBtb2xfcmVnZXhwCmBgYAoKWyFbXShodHRwczovL2JhZGdlbi5uZXQvYnVuZGxlcGhvYmlhL21pbnppcC9tb2xfcmVnZXhwKV0oaHR0cHM6Ly9idW5kbGVwaG9iaWEuY29tL3BhY2thZ2UvbW9sX3JlZ2V4cCkKCmBgYGphdmFzY3JpcHQKaW1wb3J0IHsgJG1vbF9yZWdleHAgfSBmcm9tICdtb2xfcmVnZXhwJwpgYGAKCltTYW5kYm94XShodHRwczovL2NvZGVwZW4uaW8vbmluLWppbi9wZW4vWXpadkVSbz9lZGl0b3JzPTAwMTEpCg=="

;
"use strict";
var $;
(function ($) {
    class $mol_regexp extends RegExp {
        groups;
        constructor(source, flags = 'gsu', groups = []) {
            super(source, flags);
            this.groups = groups;
        }
        *[Symbol.matchAll](str) {
            const index = this.lastIndex;
            this.lastIndex = 0;
            try {
                while (this.lastIndex < str.length) {
                    const found = this.exec(str);
                    if (!found)
                        break;
                    yield found;
                }
            }
            finally {
                this.lastIndex = index;
            }
        }
        [Symbol.match](str) {
            const res = [...this[Symbol.matchAll](str)].filter(r => r.groups).map(r => r[0]);
            if (!res.length)
                return null;
            return res;
        }
        [Symbol.split](str) {
            const res = [];
            let token_last = null;
            for (let token of this[Symbol.matchAll](str)) {
                if (token.groups && (token_last ? token_last.groups : true))
                    res.push('');
                res.push(token[0]);
                token_last = token;
            }
            if (!res.length)
                res.push('');
            return res;
        }
        test(str) {
            return Boolean(str.match(this));
        }
        exec(str) {
            const from = this.lastIndex;
            if (from >= str.length)
                return null;
            const res = super.exec(str);
            if (res === null) {
                this.lastIndex = str.length;
                if (!str)
                    return null;
                return Object.assign([str.slice(from)], {
                    index: from,
                    input: str,
                });
            }
            if (from === this.lastIndex) {
                $mol_fail(new Error('Captured empty substring'));
            }
            const groups = {};
            const skipped = str.slice(from, this.lastIndex - res[0].length);
            if (skipped) {
                this.lastIndex = this.lastIndex - res[0].length;
                return Object.assign([skipped], {
                    index: from,
                    input: res.input,
                });
            }
            for (let i = 0; i < this.groups.length; ++i) {
                const group = this.groups[i];
                groups[group] = groups[group] || res[i + 1] || '';
            }
            return Object.assign(res, { groups });
        }
        generate(params) {
            return null;
        }
        get native() {
            return new RegExp(this.source, this.flags);
        }
        static repeat(source, min = 0, max = Number.POSITIVE_INFINITY) {
            const regexp = $mol_regexp.from(source);
            const upper = Number.isFinite(max) ? max : '';
            const str = `(?:${regexp.source}){${min},${upper}}?`;
            const regexp2 = new $mol_regexp(str, regexp.flags, regexp.groups);
            regexp2.generate = params => {
                const res = regexp.generate(params);
                if (res)
                    return res;
                if (min > 0)
                    return res;
                return '';
            };
            return regexp2;
        }
        static repeat_greedy(source, min = 0, max = Number.POSITIVE_INFINITY) {
            const regexp = $mol_regexp.from(source);
            const upper = Number.isFinite(max) ? max : '';
            const str = `(?:${regexp.source}){${min},${upper}}`;
            const regexp2 = new $mol_regexp(str, regexp.flags, regexp.groups);
            regexp2.generate = params => {
                const res = regexp.generate(params);
                if (res)
                    return res;
                if (min > 0)
                    return res;
                return '';
            };
            return regexp2;
        }
        static vary(sources) {
            const groups = [];
            const chunks = sources.map(source => {
                const regexp = $mol_regexp.from(source);
                groups.push(...regexp.groups);
                return regexp.source;
            });
            return new $mol_regexp(`(?:${chunks.join('|')})`, '', groups);
        }
        static optional(source) {
            return $mol_regexp.repeat_greedy(source, 0, 1);
        }
        static force_after(source) {
            const regexp = $mol_regexp.from(source);
            return new $mol_regexp(`(?=${regexp.source})`, regexp.flags, regexp.groups);
        }
        static forbid_after(source) {
            const regexp = $mol_regexp.from(source);
            return new $mol_regexp(`(?!${regexp.source})`, regexp.flags, regexp.groups);
        }
        static from(source, { ignoreCase, multiline } = {
            ignoreCase: false,
            multiline: false,
        }) {
            let flags = 'gsu';
            if (multiline)
                flags += 'm';
            if (ignoreCase)
                flags += 'i';
            if (typeof source === 'number') {
                const src = `\\u{${source.toString(16)}}`;
                const regexp = new $mol_regexp(src, flags);
                regexp.generate = () => src;
                return regexp;
            }
            if (typeof source === 'string') {
                const src = source.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
                const regexp = new $mol_regexp(src, flags);
                regexp.generate = () => source;
                return regexp;
            }
            else if (source instanceof $mol_regexp) {
                const regexp = new $mol_regexp(source.source, flags, source.groups);
                regexp.generate = params => source.generate(params);
                return regexp;
            }
            if (source instanceof RegExp) {
                const test = new RegExp('|' + source.source);
                const groups = Array.from({ length: test.exec('').length - 1 }, (_, i) => String(i + 1));
                const regexp = new $mol_regexp(source.source, source.flags, groups);
                regexp.generate = () => '';
                return regexp;
            }
            if (Array.isArray(source)) {
                const patterns = source.map(src => Array.isArray(src)
                    ? $mol_regexp.optional(src)
                    : $mol_regexp.from(src));
                const chunks = patterns.map(pattern => pattern.source);
                const groups = [];
                let index = 0;
                for (const pattern of patterns) {
                    for (let group of pattern.groups) {
                        if (Number(group) >= 0) {
                            groups.push(String(index++));
                        }
                        else {
                            groups.push(group);
                        }
                    }
                }
                const regexp = new $mol_regexp(chunks.join(''), flags, groups);
                regexp.generate = params => {
                    let res = '';
                    for (const pattern of patterns) {
                        let sub = pattern.generate(params);
                        if (sub === null)
                            return '';
                        res += sub;
                    }
                    return res;
                };
                return regexp;
            }
            else {
                const groups = [];
                const chunks = Object.keys(source).map(name => {
                    groups.push(name);
                    const regexp = $mol_regexp.from(source[name]);
                    groups.push(...regexp.groups);
                    return `(${regexp.source})`;
                });
                const regexp = new $mol_regexp(`(?:${chunks.join('|')})`, flags, groups);
                const validator = new RegExp('^' + regexp.source + '$', flags);
                regexp.generate = (params) => {
                    for (let option in source) {
                        if (option in params) {
                            if (typeof params[option] === 'boolean') {
                                if (!params[option])
                                    continue;
                            }
                            else {
                                const str = String(params[option]);
                                if (str.match(validator))
                                    return str;
                                $mol_fail(new Error(`Wrong param: ${option}=${str}`));
                            }
                        }
                        else {
                            if (typeof source[option] !== 'object')
                                continue;
                        }
                        const res = $mol_regexp.from(source[option]).generate(params);
                        if (res)
                            return res;
                    }
                    return null;
                };
                return regexp;
            }
        }
        static unicode_only(...category) {
            return new $mol_regexp(`\\p{${category.join('=')}}`);
        }
        static unicode_except(...category) {
            return new $mol_regexp(`\\P{${category.join('=')}}`);
        }
        static char_range(from, to) {
            return new $mol_regexp(`${$mol_regexp.from(from).source}-${$mol_regexp.from(to).source}`);
        }
        static char_only(...allowed) {
            const regexp = allowed.map(f => $mol_regexp.from(f).source).join('');
            return new $mol_regexp(`[${regexp}]`);
        }
        static char_except(...forbidden) {
            const regexp = forbidden.map(f => $mol_regexp.from(f).source).join('');
            return new $mol_regexp(`[^${regexp}]`);
        }
        static decimal_only = $mol_regexp.from(/\d/gsu);
        static decimal_except = $mol_regexp.from(/\D/gsu);
        static latin_only = $mol_regexp.from(/\w/gsu);
        static latin_except = $mol_regexp.from(/\W/gsu);
        static space_only = $mol_regexp.from(/\s/gsu);
        static space_except = $mol_regexp.from(/\S/gsu);
        static word_break_only = $mol_regexp.from(/\b/gsu);
        static word_break_except = $mol_regexp.from(/\B/gsu);
        static tab = $mol_regexp.from(/\t/gsu);
        static slash_back = $mol_regexp.from(/\\/gsu);
        static nul = $mol_regexp.from(/\0/gsu);
        static char_any = $mol_regexp.from(/./gsu);
        static begin = $mol_regexp.from(/^/gsu);
        static end = $mol_regexp.from(/$/gsu);
        static or = $mol_regexp.from(/|/gsu);
        static line_end = $mol_regexp.from({
            win_end: [['\r'], '\n'],
            mac_end: '\r',
        });
    }
    $.$mol_regexp = $mol_regexp;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/dimmer/readme.md" ] = "IyAkbW9sX2RpbW1lcgoKT3V0cHV0IHRleHQgd2l0aCBkaW1tZWQgbWlzbWF0Y2hlZCBzdWJzdHJpbmdzLgoKIyMgW09ubGluZSBkZW1vXShodHRwczovL21vbC5oeW9vLnJ1LyMhc2VjdGlvbj1kZW1vcy9yZWFkbWUvZGVtbz1tb2xfZGltbWVyX2RlbW8pCgojIyBVc2FnZSBleGFtcGxlCgpgYGAKPD0gQXBob3Jpc20gJG1vbF9kaW1tZXIKCWhheXN0YWNrIDw9IGFwaG9yaXNtIFxEb24ndCBwdXQgYWxsIHlvdXIgZWdncyBpbiBvbmUgYmFza2V0CgluZWVkbGUgPD0gcXVlcnkgXGVnZ3MKYGBgCgojIyBQcm9wZXJ0aWVzCgoqKmBoYXlzdGFjaygpIDogc3RyaW5nYCoqCgpSZXR1cm5zIGZ1bGwgdGV4dCB0byBvdXRwdXQuCgoqKmBuZWVkbGUoKSA6IHN0cmluZ2AqKgoKUmV0dXJucyBzdWJzdHJpbmcgdG8gaGlnaGxpZ2h0Lgo="

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_dimmer extends $.$mol_dimmer {
            parts() {
                const needle = this.needle();
                if (needle.length < 2)
                    return [this.haystack()];
                let chunks = [];
                let strings = this.strings();
                for (let index = 0; index < strings.length; index++) {
                    if (strings[index] === '')
                        continue;
                    chunks.push((index % 2) ? this.High(index) : this.Low(index));
                }
                return chunks;
            }
            strings() {
                const options = this.needle().split(/\s+/g).filter(Boolean);
                if (!options.length)
                    return [this.haystack()];
                const variants = { ...options };
                const regexp = $mol_regexp.from({ needle: variants }, { ignoreCase: true });
                return this.haystack().split(regexp);
            }
            string(index) {
                return this.strings()[index];
            }
            *view_find(check, path = []) {
                if (check(this, this.haystack())) {
                    yield [...path, this];
                }
            }
        }
        __decorate([
            $mol_mem
        ], $mol_dimmer.prototype, "strings", null);
        $$.$mol_dimmer = $mol_dimmer;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/dimmer/dimmer.view.css", "[mol_dimmer] {\n\tdisplay: block;\n\tmax-width: 100%;\n}\n\n[mol_dimmer_low] {\n\tdisplay: inline;\n\topacity: 0.8;\n}\n\n[mol_dimmer_high] {\n\tdisplay: inline;\n\tcolor: var(--mol_theme_focus);\n\ttext-shadow: 0 0;\n}\n");
})($ || ($ = {}));

;
	($.$mol_text_code_token) = class $mol_text_code_token extends ($.$mol_dimmer) {
		type(){
			return "";
		}
		attr(){
			return {...(super.attr()), "mol_text_code_token_type": (this.type())};
		}
	};
	($.$mol_text_code_token_link) = class $mol_text_code_token_link extends ($.$mol_text_code_token) {
		uri(){
			return "";
		}
		dom_name(){
			return "a";
		}
		type(){
			return "code-link";
		}
		attr(){
			return {
				...(super.attr()), 
				"href": (this.uri()), 
				"target": "_blank"
			};
		}
	};


;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        const { hsla } = $mol_style_func;
        $mol_style_define($mol_text_code_token, {
            display: 'inline',
            textDecoration: 'none',
            '@': {
                mol_text_code_token_type: {
                    'code-keyword': {
                        color: hsla(0, 70, 60, 1),
                    },
                    'code-field': {
                        color: hsla(300, 70, 50, 1),
                    },
                    'code-tag': {
                        color: hsla(330, 70, 50, 1),
                    },
                    'code-global': {
                        color: hsla(30, 80, 50, 1),
                    },
                    'code-decorator': {
                        color: hsla(180, 40, 50, 1),
                    },
                    'code-punctuation': {
                        color: hsla(0, 0, 50, 1),
                    },
                    'code-string': {
                        color: hsla(90, 40, 50, 1),
                    },
                    'code-number': {
                        color: hsla(55, 65, 45, 1),
                    },
                    'code-call': {
                        color: hsla(270, 60, 50, 1),
                    },
                    'code-link': {
                        color: hsla(210, 60, 50, 1),
                    },
                    'code-comment-inline': {
                        opacity: .5,
                    },
                    'code-comment-block': {
                        opacity: .5,
                    },
                    'code-docs': {
                        opacity: .75,
                    },
                },
            }
        });
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
	($.$mol_text_code_line) = class $mol_text_code_line extends ($.$mol_paragraph) {
		numb(){
			return 0;
		}
		token_type(id){
			return "";
		}
		token_text(id){
			return "";
		}
		highlight(){
			return "";
		}
		token_uri(id){
			return "";
		}
		text(){
			return "";
		}
		minimal_height(){
			return 24;
		}
		numb_showed(){
			return true;
		}
		syntax(){
			return null;
		}
		uri_resolve(id){
			return "";
		}
		Numb(){
			const obj = new this.$.$mol_view();
			(obj.sub) = () => ([(this.numb())]);
			return obj;
		}
		Token(id){
			const obj = new this.$.$mol_text_code_token();
			(obj.type) = () => ((this.token_type(id)));
			(obj.haystack) = () => ((this.token_text(id)));
			(obj.needle) = () => ((this.highlight()));
			return obj;
		}
		Token_link(id){
			const obj = new this.$.$mol_text_code_token_link();
			(obj.haystack) = () => ((this.token_text(id)));
			(obj.needle) = () => ((this.highlight()));
			(obj.uri) = () => ((this.token_uri(id)));
			return obj;
		}
		find_pos(id){
			return null;
		}
	};
	($mol_mem(($.$mol_text_code_line.prototype), "Numb"));
	($mol_mem_key(($.$mol_text_code_line.prototype), "Token"));
	($mol_mem_key(($.$mol_text_code_line.prototype), "Token_link"));


;
var $node = $node || {} ; $node[ "/mol/syntax2/readme.md" ] = "IyAkbW9sX3N5bnRheDIgCgpDcmVhdGVzIGxleGVyIGJ5IGRpY3Rpb25hcnkgb2YgbGV4ZW1zLiBMZXhlbSB0aGF0IHN0YXJ0ZWQgZmlyc3Qgd2lucy4gVGhlbiBsZXhlbSB0aGF0IGRlY2xhcmVkIGVhcmxpZXIgd2lucy4gVXNlIHJlZ2V4cCBjYXB0dXJlIHRvIHRha2UgcGFydHMgb2YgdG9rZW4uCgojIyBVc2FnZSBleGFtcGxlCgpgYGB0eXBlc2NyaXB0CmNvbnN0IHN5bnRheCA9IG5ldyAkbW9sX3N5bnRheDIoewoJJ2JyYWNlLW9wZW4nIDogL1x7ezJ9LyAsCgknYnJhY2UtY2xvc2UnIDogL1x9ezJ9LyAsCgkncGxhY2Vob2xkZXInIDogL1x7KFx3KylcfS8gLAp9KQoKbGV0IHJlcyA9ICcnCnN5bnRheC5wYXJzZSggJ0kgaGF2ZSB7Y291bnR9IHt7YnJhY2tldHN9fS4nICwgewoJJycgOiB0ZXh0ID0+IHJlcyArPSB0ZXh0ICwKCSdicmFjZS1vcGVuJyA6ICgpPT4gcmVzICs9ICd7JyAsCgknYnJhY2UtY2xvc2UnIDogKCk9PiByZXMgKz0gJ30nICwKCSdwbGFjZWhvbGRlcicgOiAoIGZ1bGwgLCBbIGtleSBdICk9PiByZXMgKz0gJyQnICsga2V5ICwKfSApCi8vIHJlcyA9PT0gJ0kgaGF2ZSAkY291bnQge2JyYWNrZXRzfS4nCmBgYAoKIyMgTWV0aG9kcwoKKipgdG9rZW5pemUoIHRleHQgOiBzdHJpbmcgLCBoYW5kbGUgOiBIYW5kbGUgKSA6IHZvaWRgKioKCkNhbGxzIGBoYW5kbGVgIGZvciBldmVyeSB0b2tlbi4gQXJndW1lbnRzIG9mIGBoYW5kbGVgOgoKKiBgbmFtZSA6IHN0cmluZ2AgLSBuYW1lIG9mIGxleGVtCiogYGZvdW5kIDogc3RyaW5nYCAtIG1hdGNoZWQgc3Vic3RyaW5nCiogYGNodW5rcyA6IHN0cmluZ1tdYCAtIGNhcHR1cmVkIGNodW5rcwoqIGBvZmZzZXQgOiBudW1iZXJgIC0gb2Zmc2V0IG9mIHRva2VuIHN0YXJ0CgoqKmBwYXJzZSggdGV4dCA6IHN0cmluZyAsIGhhbmRsZXJzIDogeyBbIGtleSBpbiBrZXlvZiBMZXhlbXMgfCAnJyBdIDogSGFuZGxlIH0gKSA6IHZvaWRgKioKCkNhbGxzIGRpZmZlcmVudCBgaGFuZGxlYCBmb3IgZGlmZmVyZW50IHRva2Vucy4gQXJndW1lbnRzIG9mIGBoYW5kbGVgOgoKKiBgZm91bmQgOiBzdHJpbmdgIC0gbWF0Y2hlZCBzdWJzdHJpbmcKKiBgY2h1bmtzIDogc3RyaW5nW11gIC0gY2FwdHVyZWQgY2h1bmtzCiogYG9mZnNldCA6IG51bWJlcmAgLSBvZmZzZXQgb2YgdG9rZW4gc3RhcnQKCiMgSW5zdGFsbGF0aW9uCgojIyBEaXJlY3QKCmBgYGh0bWwKPHNjcmlwdCBzcmM9Imh0dHA6Ly9tb2wuanMub3JnL3N5bnRheDIvLS93ZWIuanMiPjwvc2NyaXB0PgpgYGAKCiMjIE5QTQoKYGBgc2gKbnBtIGluc3RhbGwgbW9sX3N5bnRheCAtLXNhdmUKYGBgCgojIyMgSmF2YVNjcmlwdAoKYGBganMKY29uc3QgeyAkbW9sX3N5bnRheDIgfSA9IHJlcXVpcmUoICdtb2xfc3ludGF4JyApCmBgYAoKIyMjIFR5cGVTY3JpcHQKCmBgYHRzCmltcG9ydCB7ICRtb2xfc3ludGF4MiB9IGZyb20gJ21vbF9zeW50YXgnCmBgYAo="

;
"use strict";
var $;
(function ($) {
    class $mol_syntax2 {
        lexems;
        constructor(lexems) {
            this.lexems = lexems;
            for (let name in lexems) {
                this.rules.push({
                    name: name,
                    regExp: lexems[name],
                    size: RegExp('^$|' + lexems[name].source).exec('').length - 1,
                });
            }
            const parts = '(' + this.rules.map(rule => rule.regExp.source).join(')|(') + ')';
            this.regexp = RegExp(`([\\s\\S]*?)(?:(${parts})|$(?![^]))`, 'gmu');
        }
        rules = [];
        regexp;
        tokenize(text, handle) {
            let end = 0;
            lexing: while (end < text.length) {
                const start = end;
                this.regexp.lastIndex = start;
                var found = this.regexp.exec(text);
                end = this.regexp.lastIndex;
                if (start === end)
                    throw new Error('Empty token');
                var prefix = found[1];
                if (prefix)
                    handle('', prefix, [prefix], start);
                var suffix = found[2];
                if (!suffix)
                    continue;
                let offset = 4;
                for (let rule of this.rules) {
                    if (found[offset - 1]) {
                        handle(rule.name, suffix, found.slice(offset, offset + rule.size), start + prefix.length);
                        continue lexing;
                    }
                    offset += rule.size + 1;
                }
                $mol_fail(new Error('$mol_syntax2 is broken'));
            }
        }
        parse(text, handlers) {
            this.tokenize(text, (name, ...args) => handlers[name](...args));
        }
    }
    $.$mol_syntax2 = $mol_syntax2;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $.$mol_syntax2_md_flow = new $mol_syntax2({
        'quote': /^((?:(?:[>"] )(?:[^]*?)$(\r?\n?))+)([\n\r]*)/,
        'spoiler': /^((?:(?:[\?] )(?:[^]*?)$(\r?\n?))+)([\n\r]*)/,
        'header': /^([#=]+)(\s+)(.*?)$([\n\r]*)/,
        'list': /^((?:(?: ?([*+-])|(?:\d+[\.\)])+) +(?:[^]*?)$(?:\r?\n?)(?:  (?:[^]*?)$(?:\r?\n?))*)+)((?:\r?\n)*)/,
        'code': /^(```\s*)([\w.-]*)[\r\n]+([^]*?)^(```)$([\n\r]*)/,
        'code-indent': /^((?:(?: |\t)(?:[^]*?)$\r?\n?)+)([\n\r]*)/,
        'table': /((?:^\|.+?$\r?\n?)+)([\n\r]*)/,
        'grid': /((?:^ *! .*?$\r?\n?)+)([\n\r]*)/,
        'cut': /^--+$((?:\r?\n)*)/,
        'block': /^(.*?)$((?:\r?\n)*)/,
    });
    $.$mol_syntax2_md_line = new $mol_syntax2({
        'strong': /\*\*(.+?)\*\*/,
        'emphasis': /\*(?!\s)(.+?)\*|\/\/(?!\s)(.+?)\/\//,
        'code': /```(.+?)```|;;(.+?);;|`(.+?)`/,
        'insert': /\+\+(.+?)\+\+/,
        'delete': /~~(.+?)~~|--(.+?)--/,
        'embed': /""(?:(.*?)\\)?(.*?)""/,
        'link': /\\\\(?:(.*?)\\)?(.*?)\\\\/,
        'image-link': /!\[([^\[\]]*?)\]\((.*?)\)/,
        'text-link': /\[(.*?(?:\[[^\[\]]*?\][^\[\]]*?)*)\]\((.*?)\)/,
        'text-link-http': /\b(https?:\/\/[^\s,.;:!?")]+(?:[,.;:!?")][^\s,.;:!?")]+)+)/,
    });
    $.$mol_syntax2_md_code = new $mol_syntax2({
        'code-indent': /\t+/,
        'code-docs': /\/\/\/.*?$/,
        'code-comment-block': /(?:\/\*[^]*?\*\/|\/\+[^]*?\+\/|<![^]*?>)/,
        'code-link': /(?:\w+:\/\/|#)\S+?(?=\s|\\\\|""|$)/,
        'code-comment-inline': /\/\/.*?(?:$|\/\/)|- \\(?!\\).*|#!? .*/,
        'code-string': /(?:".*?"|'.*?'|`.*?`| ?\\\\.+?\\\\|\/.+?\/[dygimsu]*(?!\p{Letter})|[ \t]*\\[^\n]*)/u,
        'code-number': /[+-]?(?:\d*\.)?\d+\w*/,
        'code-call': /\.?\w+ *(?=\()/,
        'code-sexpr': /\((\w+ )/,
        'code-field': /(?:(?:\.|::|->)\w+|[\w-]+\??\s*:(?!\/\/|:))/,
        'code-keyword': /\b(throw|readonly|unknown|keyof|typeof|never|from|class|struct|interface|type|function|extends|implements|module|namespace|import|export|include|require|var|val|let|const|for|do|while|until|in|out|of|new|if|then|else|switch|case|this|return|async|await|yield|try|catch|break|continue|get|set|public|private|protected|string|boolean|number|null|undefined|true|false|void|int|float|ref)\b/,
        'code-global': /[$]+\w*|\b[A-Z][a-z0-9]+[A-Z]\w*/,
        'code-word': /\w+/,
        'code-decorator': /@\s*\S+/,
        'code-tag': /<\/?[\w-]+\/?>?|&\w+;/,
        'code-punctuation': /[\-\[\]\{\}\(\)<=>~!\?@#%&\*_\+\\\/\|;:\.,\^]+?/,
    });
})($ || ($ = {}));

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_text_code_line extends $.$mol_text_code_line {
            maximal_width() {
                return this.text().length * this.letter_width();
            }
            syntax() {
                return this.$.$mol_syntax2_md_code;
            }
            tokens(path) {
                const tokens = [];
                const text = (path.length > 0)
                    ? this.tokens(path.slice(0, path.length - 1))[path[path.length - 1]].found.slice(1, -1)
                    : this.text();
                this.syntax().tokenize(text, (name, found, chunks) => {
                    if (name === 'code-sexpr') {
                        tokens.push({ name: 'code-punctuation', found: '(', chunks: [] });
                        tokens.push({ name: 'code-call', found: chunks[0], chunks: [] });
                    }
                    else {
                        tokens.push({ name, found, chunks });
                    }
                });
                return tokens;
            }
            sub() {
                return [
                    ...this.numb_showed() ? [this.Numb()] : [],
                    ...this.row_content([])
                ];
            }
            row_content(path) {
                return this.tokens(path).map((t, i) => this.Token([...path, i]));
            }
            Token(path) {
                return this.token_type(path) === 'code-link' ? this.Token_link(path) : super.Token(path);
            }
            token_type(path) {
                return this.tokens([...path.slice(0, path.length - 1)])[path[path.length - 1]].name;
            }
            token_content(path) {
                const tokens = this.tokens([...path.slice(0, path.length - 1)]);
                const token = tokens[path[path.length - 1]];
                switch (token.name) {
                    case 'code-string': return [
                        token.found[0],
                        ...this.row_content(path),
                        token.found[token.found.length - 1],
                    ];
                    default: return [token.found];
                }
            }
            token_text(path) {
                const tokens = this.tokens([...path.slice(0, path.length - 1)]);
                const token = tokens[path[path.length - 1]];
                return token.found;
            }
            token_uri(path) {
                const uri = this.token_text(path);
                return this.uri_resolve(uri);
            }
            *view_find(check, path = []) {
                if (check(this, this.text())) {
                    yield [...path, this];
                }
            }
            find_pos(offset) {
                return this.find_token_pos([offset]);
            }
            find_token_pos([offset, ...path]) {
                for (const [index, token] of this.tokens(path).entries()) {
                    if (token.found.length >= offset) {
                        const token = this.Token([...path, index]);
                        return { token, offset };
                    }
                    else {
                        offset -= token.found.length;
                    }
                }
                return null;
            }
        }
        __decorate([
            $mol_mem_key
        ], $mol_text_code_line.prototype, "tokens", null);
        __decorate([
            $mol_mem_key
        ], $mol_text_code_line.prototype, "row_content", null);
        __decorate([
            $mol_mem_key
        ], $mol_text_code_line.prototype, "token_type", null);
        __decorate([
            $mol_mem_key
        ], $mol_text_code_line.prototype, "token_content", null);
        __decorate([
            $mol_mem_key
        ], $mol_text_code_line.prototype, "token_text", null);
        __decorate([
            $mol_mem_key
        ], $mol_text_code_line.prototype, "token_uri", null);
        __decorate([
            $mol_mem_key
        ], $mol_text_code_line.prototype, "find_pos", null);
        __decorate([
            $mol_mem_key
        ], $mol_text_code_line.prototype, "find_token_pos", null);
        $$.$mol_text_code_line = $mol_text_code_line;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        const { rem } = $mol_style_unit;
        $mol_style_define($mol_text_code_line, {
            display: 'block',
            position: 'relative',
            font: {
                family: 'monospace',
            },
            Numb: {
                textAlign: 'right',
                color: $mol_theme.shade,
                width: rem(3),
                margin: {
                    left: rem(-4),
                },
                display: 'inline-block',
                whiteSpace: 'nowrap',
                userSelect: 'none',
                position: 'absolute',
            },
        });
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
	($.$mol_button_typed) = class $mol_button_typed extends ($.$mol_button) {
		minimal_height(){
			return 40;
		}
		minimal_width(){
			return 40;
		}
	};


;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/button/typed/typed.view.css", "[mol_button_typed] {\n\talign-content: center;\n\talign-items: center;\n\tpadding: var(--mol_gap_text);\n\tborder-radius: var(--mol_gap_round);\n\tgap: var(--mol_gap_space);\n\tuser-select: none;\n\tcursor: pointer;\n}\n\n[mol_button_typed][disabled] {\n\tpointer-events: none;\n}\n\n[mol_button_typed]:hover ,\n[mol_button_typed]:focus {\n\tbox-shadow: inset 0 0 0 10rem var(--mol_theme_hover);\n}\n\n[mol_button_typed]:active {\n\tcolor: var(--mol_theme_focus);\n}\n\n");
})($ || ($ = {}));

;
"use strict";

;
	($.$mol_button_minor) = class $mol_button_minor extends ($.$mol_button_typed) {};


;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/button/minor/minor.view.css", "[mol_button_minor] {\n\tcolor: var(--mol_theme_control);\n}\n\n[mol_button_minor][disabled] {\n\tcolor: var(--mol_theme_shade);\n}\n");
})($ || ($ = {}));

;
"use strict";

;
"use strict";

;
"use strict";
var $node = $node || {};

;
"use strict";
var $;
(function ($) {
    $.$mol_blob = ($node.buffer?.Blob ?? $mol_dom_context.Blob);
})($ || ($ = {}));

;
	($.$mol_svg) = class $mol_svg extends ($.$mol_view) {
		dom_name(){
			return "svg";
		}
		dom_name_space(){
			return "http://www.w3.org/2000/svg";
		}
		font_size(){
			return 16;
		}
		font_family(){
			return "";
		}
		style_size(){
			return {};
		}
	};


;
"use strict";
var $;
(function ($) {
    class $mol_state_time extends $mol_object {
        static task(precision, reset) {
            if (precision) {
                return new $mol_after_timeout(precision, () => this.task(precision, null));
            }
            else {
                return new $mol_after_frame(() => this.task(precision, null));
            }
        }
        static now(precision) {
            this.task(precision);
            return Date.now();
        }
    }
    __decorate([
        $mol_mem_key
    ], $mol_state_time, "task", null);
    __decorate([
        $mol_mem_key
    ], $mol_state_time, "now", null);
    $.$mol_state_time = $mol_state_time;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/state/time/readme.md" ] = "IyAkbW9sX3N0YXRlX3RpbWUKClN0YXRlIG9mIHRpbWUgbW9tZW50LgoKIyMgQVBJCgoqKmBgYG5vdyggcHJlY2lzaW9uPyA6IG51bWJlciApIDogbnVtYmVyYGBgKioKClJldHVybnMgdGltZXN0YW1wIHRoYXQgdXBkYXRlcyBldmVyeSBgYGBwcmVjaXNpb25gYGAgbXMuIElmIGBgYHByZWNpc2lvbmBgYCBpcyB6ZXJvLCB0aGVuIHVwZGF0ZXMgZXZlcnkgYW5pbWF0aW9uIGZyYW1lLgoKIyMgVXNhZ2UgZXhhbXBsZQoKYGBgCkAgJG1vbF9tZW0KcmVtYWluaW5nX3RpbWUoIGRlYWRsaW5lIDogbnVtYmVyICkgewoJcmV0dXJuIGRlYWRsaW5lIC0gJG1vbF9zdGF0ZV90aW1lLm5vdygpCn0KYGBgCg=="

;
var $node = $node || {} ; $node[ "/mol/svg/readme.md" ] = "IyAkbW9sX3N2ZwoKQmFzZSBTVkcgY29tcG9uZW50IHRvIGRpc3BsYXkgU1ZHIGltYWdlcyBvciBpY29ucy4K"

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_svg extends $.$mol_svg {
            computed_style() {
                const win = this.$.$mol_dom_context;
                const style = win.getComputedStyle(this.dom_node());
                if (!style['font-size'])
                    $mol_state_time.now(0);
                return style;
            }
            font_size() {
                return parseInt(this.computed_style()['font-size']) || 16;
            }
            font_family() {
                return this.computed_style()['font-family'];
            }
        }
        __decorate([
            $mol_mem
        ], $mol_svg.prototype, "computed_style", null);
        __decorate([
            $mol_mem
        ], $mol_svg.prototype, "font_size", null);
        __decorate([
            $mol_mem
        ], $mol_svg.prototype, "font_family", null);
        $$.$mol_svg = $mol_svg;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
	($.$mol_svg_root) = class $mol_svg_root extends ($.$mol_svg) {
		view_box(){
			return "0 0 100 100";
		}
		aspect(){
			return "xMidYMid";
		}
		dom_name(){
			return "svg";
		}
		attr(){
			return {
				...(super.attr()), 
				"viewBox": (this.view_box()), 
				"preserveAspectRatio": (this.aspect())
			};
		}
	};


;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/svg/root/root.view.css", "[mol_svg_root] {\n\toverflow: hidden;\n}\n");
})($ || ($ = {}));

;
"use strict";

;
	($.$mol_svg_path) = class $mol_svg_path extends ($.$mol_svg) {
		geometry(){
			return "";
		}
		dom_name(){
			return "path";
		}
		attr(){
			return {...(super.attr()), "d": (this.geometry())};
		}
	};


;
"use strict";

;
	($.$mol_icon) = class $mol_icon extends ($.$mol_svg_root) {
		path(){
			return "";
		}
		Path(){
			const obj = new this.$.$mol_svg_path();
			(obj.geometry) = () => ((this.path()));
			return obj;
		}
		view_box(){
			return "0 0 24 24";
		}
		minimal_width(){
			return 16;
		}
		minimal_height(){
			return 16;
		}
		sub(){
			return [(this.Path())];
		}
	};
	($mol_mem(($.$mol_icon.prototype), "Path"));


;
var $node = $node || {} ; $node[ "/mol/icon/README.md" ] = "IyAkbW9sX2ljb24KClRoaXMgaXMgY29sbGVjdGlvbiBvZiBTVkcgaWNvbnMuIFBvcnRlZCBmcm9tIFtnb29nbGUvbWF0ZXJpYWwtZGVzaWduLWljb25zXShodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlL21hdGVyaWFsLWRlc2lnbi1pY29ucykgKEFwYWNoZTIgbGljZW5zZSkuCgpVc2VkIGljb25zIHdpbGwgYmUgY29tcGlsZWQgdG8gSlMgYW5kIGJ1bmRsZWQgd2l0aCBvdGhlciBzY3JpcHRzLgoKKipbT25saW5lIGRlbW9dKGh0dHBzOi8vbmluLWppbi5naXRodWIuaW8vbW9sX2ljb24vKSoqCgojIyBVc2FnZQoKKioqLnZpZXcudHJlZSoqCgpgYGB0cmVlCjw9IEF0dGFjaF9pY29uICRtb2xfaWNvbl9hdHRhY2gKYGBgCgojIyBEZWZpbmUgY3VzdG9tIGljb24KCmBgYAokbXlfcGx1cyAkbW9sX2ljb24KCXBhdGggXE0zOCAyNkgyNnYxMmgtNFYyNkgxMHYtNGgxMlYxMGg0djEyaDEydjR6CmBgYAoKIyMgUHJvcGVydGllcwoKKipgcGF0aCgpIDogc3Rpcm5nYCoqCgpHZW9tZXRyeSBkZXNjcmlwdGlvbiBpbiBzdmctcGF0aCBmb3JtYXQuCg=="

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/icon/icon.view.css", "[mol_icon] {\n\tfill: currentColor;\n\tstroke: none;\n\twidth: 1em;\n\theight: 1.5em;\n\tflex: 0 0 auto;\n\tvertical-align: top;\n\tdisplay: inline-block;\n\tfilter: drop-shadow(0px 1px 1px var(--mol_theme_back));\n\ttransform-origin: center;\n}\n\n[mol_icon_path] {\n\ttransform-origin: center;\n}\n");
})($ || ($ = {}));

;
"use strict";

;
	($.$mol_icon_clipboard) = class $mol_icon_clipboard extends ($.$mol_icon) {
		path(){
			return "M19,3H14.82C14.4,1.84 13.3,1 12,1C10.7,1 9.6,1.84 9.18,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M12,3A1,1 0 0,1 13,4A1,1 0 0,1 12,5A1,1 0 0,1 11,4A1,1 0 0,1 12,3";
		}
	};


;
"use strict";

;
	($.$mol_icon_clipboard_outline) = class $mol_icon_clipboard_outline extends ($.$mol_icon) {
		path(){
			return "M19,3H14.82C14.4,1.84 13.3,1 12,1C10.7,1 9.6,1.84 9.18,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M12,3A1,1 0 0,1 13,4A1,1 0 0,1 12,5A1,1 0 0,1 11,4A1,1 0 0,1 12,3M7,7H17V5H19V19H5V5H7V7Z";
		}
	};


;
"use strict";

;
	($.$mol_button_copy) = class $mol_button_copy extends ($.$mol_button_minor) {
		text(){
			return (this.title());
		}
		text_blob(next){
			if(next !== undefined) return next;
			const obj = new this.$.$mol_blob([(this.text())], {"type": "text/plain"});
			return obj;
		}
		html(){
			return "";
		}
		html_blob(next){
			if(next !== undefined) return next;
			const obj = new this.$.$mol_blob([(this.html())], {"type": "text/html"});
			return obj;
		}
		Icon(){
			const obj = new this.$.$mol_icon_clipboard_outline();
			return obj;
		}
		title(){
			return "";
		}
		blobs(){
			return [(this.text_blob()), (this.html_blob())];
		}
		data(){
			return {};
		}
		sub(){
			return [(this.Icon()), (this.title())];
		}
	};
	($mol_mem(($.$mol_button_copy.prototype), "text_blob"));
	($mol_mem(($.$mol_button_copy.prototype), "html_blob"));
	($mol_mem(($.$mol_button_copy.prototype), "Icon"));


;
"use strict";
var $;
(function ($) {
    const mapping = {
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        '&': '&amp;',
    };
    function $mol_html_encode(text) {
        return text.replace(/[&<">]/gi, str => mapping[str]);
    }
    $.$mol_html_encode = $mol_html_encode;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    const factories = new WeakMap();
    function factory(val) {
        let make = factories.get(val);
        if (make)
            return make;
        make = $mol_func_name_from((...args) => new val(...args), val);
        factories.set(val, make);
        return make;
    }
    const getters = new WeakMap();
    function get_prop(host, field) {
        let props = getters.get(host);
        let get_val = props?.[field];
        if (get_val)
            return get_val;
        get_val = (next) => {
            if (next !== undefined)
                host[field] = next;
            return host[field];
        };
        Object.defineProperty(get_val, 'name', { value: field });
        if (!props) {
            props = {};
            getters.set(host, props);
        }
        props[field] = get_val;
        return get_val;
    }
    function $mol_wire_sync(obj) {
        return new Proxy(obj, {
            get(obj, field) {
                let val = obj[field];
                const temp = $mol_wire_task.getter(typeof val === 'function' ? val : get_prop(obj, field));
                if (typeof val !== 'function')
                    return temp(obj, []).sync();
                return function $mol_wire_sync(...args) {
                    const fiber = temp(obj, args);
                    return fiber.sync();
                };
            },
            set(obj, field, next) {
                const temp = $mol_wire_task.getter(get_prop(obj, field));
                temp(obj, [next]).sync();
                return true;
            },
            construct(obj, args) {
                const temp = $mol_wire_task.getter(factory(obj));
                return temp(obj, args).sync();
            },
            apply(obj, self, args) {
                const temp = $mol_wire_task.getter(obj);
                return temp(self, args).sync();
            },
        });
    }
    $.$mol_wire_sync = $mol_wire_sync;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/wire/sync/README.md" ] = "IyMgJG1vbF93aXJlX3N5bmMKCkNvbnZlcnQgYXN5bmNocm9ub3VzIChwcm9taXNlLWJhc2VkKSBBUEkgdG8gc3luY2hyb25vdXMgYnkgd3JhcHBpbmcgY2FsbHMgaW4gYSBmaWJlciB3aXRoIHByb3h5LgoKYGBgdHlwZXNjcmlwdApjb25zdCBVc2VyID0gewoJbmFtZSgpIHsKCQljb25zdCByZXNwb25zZSA9ICRtb2xfd2lyZV9zeW5jKCB3aW5kb3cgKS5mZXRjaCggJy9wcm9maWxlJyApCgkJY29uc3QganNvbiA9ICRtb2xfd2lyZV9zeW5jKCByZXNwb25zZSApLmpzb24oKQoJCXJldHVybiBqc29uLnVzZXJfbmFtZQoJfQp9CmBgYAo="

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_button_copy extends $.$mol_button_copy {
            data() {
                return Object.fromEntries(this.blobs().map(blob => [blob.type, blob]));
            }
            html() {
                return $mol_html_encode(this.text());
            }
            attachments() {
                return [new ClipboardItem(this.data())];
            }
            click(event) {
                const cb = $mol_wire_sync(this.$.$mol_dom_context.navigator.clipboard);
                cb.writeText?.(this.text());
                cb.write?.(this.attachments());
                if (cb.writeText === undefined && cb.write === undefined) {
                    throw new Error("doesn't support copy to clipoard");
                }
            }
        }
        __decorate([
            $mol_mem
        ], $mol_button_copy.prototype, "html", null);
        __decorate([
            $mol_mem
        ], $mol_button_copy.prototype, "attachments", null);
        $$.$mol_button_copy = $mol_button_copy;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $.$mol_mem_persist = $mol_wire_solid;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_storage extends $mol_object2 {
        static native() {
            return this.$.$mol_dom_context.navigator.storage ?? {
                persisted: async () => false,
                persist: async () => false,
                estimate: async () => ({}),
                getDirectory: async () => null,
            };
        }
        static persisted(next, cache) {
            $mol_mem_persist();
            if (cache)
                return Boolean(next);
            const native = this.native();
            if (next && !$mol_mem_cached(() => this.persisted())) {
                native.persist().then(actual => {
                    setTimeout(() => this.persisted(actual, 'cache'), 5000);
                    if (actual)
                        this.$.$mol_log3_done({ place: `$mol_storage`, message: `Persist: Yes` });
                    else
                        this.$.$mol_log3_fail({ place: `$mol_storage`, message: `Persist: No` });
                });
            }
            return next ?? $mol_wire_sync(native).persisted();
        }
        static estimate() {
            return $mol_wire_sync(this.native() ?? {}).estimate();
        }
        static dir() {
            return $mol_wire_sync(this.native()).getDirectory();
        }
    }
    __decorate([
        $mol_mem
    ], $mol_storage, "native", null);
    __decorate([
        $mol_mem
    ], $mol_storage, "persisted", null);
    $.$mol_storage = $mol_storage;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_state_local extends $mol_object {
        static 'native()';
        static native() {
            if (this['native()'])
                return this['native()'];
            check: try {
                const native = $mol_dom_context.localStorage;
                if (!native)
                    break check;
                native.setItem('', '');
                native.removeItem('');
                return this['native()'] = native;
            }
            catch (error) {
                console.warn(error);
            }
            return this['native()'] = {
                getItem(key) {
                    return this[':' + key];
                },
                setItem(key, value) {
                    this[':' + key] = value;
                },
                removeItem(key) {
                    this[':' + key] = void 0;
                }
            };
        }
        static changes(next) { return next; }
        static value(key, next) {
            this.changes();
            if (next === void 0)
                return JSON.parse(this.native().getItem(key) || 'null');
            if (next === null) {
                this.native().removeItem(key);
            }
            else {
                this.native().setItem(key, JSON.stringify(next));
                this.$.$mol_storage.persisted(true);
            }
            return next;
        }
        prefix() { return ''; }
        value(key, next) {
            return $mol_state_local.value(this.prefix() + '.' + key, next);
        }
    }
    __decorate([
        $mol_mem
    ], $mol_state_local, "changes", null);
    __decorate([
        $mol_mem_key
    ], $mol_state_local, "value", null);
    $.$mol_state_local = $mol_state_local;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    self.addEventListener('storage', event => $.$mol_state_local.changes(event));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_lock extends $mol_object {
        promise = null;
        async wait() {
            let next = () => { };
            let destructed = false;
            const task = $mol_wire_auto();
            if (!task)
                return next;
            const destructor = task.destructor.bind(task);
            task.destructor = () => {
                destructor();
                destructed = true;
                next();
            };
            let promise;
            do {
                promise = this.promise;
                await promise;
                if (destructed)
                    return next;
            } while (promise !== this.promise);
            this.promise = new Promise(done => { next = done; });
            return next;
        }
        grab() { return $mol_wire_sync(this).wait(); }
    }
    $.$mol_lock = $mol_lock;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_compare_array(a, b) {
        if (a === b)
            return true;
        if (Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))
            return false;
        if (a.length !== b.length)
            return false;
        for (let i = 0; i < a.length; i++)
            if (a[i] !== b[i])
                return false;
        return true;
    }
    $.$mol_compare_array = $mol_compare_array;
})($ || ($ = {}));

;
"use strict";

;
"use strict";
var $;
(function ($) {
    const decoders = {};
    function $mol_charset_decode(buffer, encoding = 'utf8') {
        let decoder = decoders[encoding];
        if (!decoder)
            decoder = decoders[encoding] = new TextDecoder(encoding);
        return decoder.decode(buffer);
    }
    $.$mol_charset_decode = $mol_charset_decode;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    const TextEncoder = globalThis.TextEncoder ?? $node.util.TextEncoder;
    const encoder = new TextEncoder();
    function $mol_charset_encode(value) {
        return encoder.encode(value);
    }
    $.$mol_charset_encode = $mol_charset_encode;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_file_transaction extends $mol_object {
        path() { return ''; }
        modes() { return []; }
        write(options) {
            return 0;
        }
        read() {
            return new Uint8Array();
        }
        truncate(size) { }
        close() { }
        destructor() {
            this.close();
        }
    }
    $.$mol_file_transaction = $mol_file_transaction;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_file_transaction_web extends $mol_file_transaction {
        write(options) {
            throw new Error('Not implemented');
        }
        truncate(size) {
            throw new Error('Not implemented');
        }
        read() {
            throw new Error('Not implemented');
        }
        close() {
            throw new Error('Not implemented');
        }
    }
    $.$mol_file_transaction_web = $mol_file_transaction_web;
    $.$mol_file_transaction = $mol_file_transaction_web;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_file_base extends $mol_object {
        static absolute(path) {
            return this.make({
                path: $mol_const(path)
            });
        }
        static relative(path) {
            throw new Error('Not implemented yet');
        }
        static base = '';
        path() {
            return '.';
        }
        parent() {
            return this.resolve('..');
        }
        exists_cut() { return this.exists(); }
        root() {
            const path = this.path();
            const base = this.constructor.base;
            return base.startsWith(path) || this == this.parent();
        }
        stat(next, virt) {
            const path = this.path();
            const parent = this.parent();
            if (!this.root()) {
                parent.version();
            }
            parent.watcher();
            if (virt)
                return next ?? null;
            return next ?? this.info(path);
        }
        static changed = new Set;
        static frame = null;
        static changed_add(type, path) {
            if (/([\/\\]\.|___$)/.test(path))
                return;
            const file = this.relative(path.at(-1) === '/' ? path.slice(0, -1) : path);
            this.changed.add(file);
            if (!this.watching)
                return;
            this.frame?.destructor();
            this.frame = new this.$.$mol_after_timeout(this.watch_debounce(), () => {
                if (!this.watching)
                    return;
                this.watching = false;
                $mol_wire_async(this).flush();
            });
        }
        static watch_debounce() { return 500; }
        static flush() {
            for (const file of this.changed) {
                const parent = file.parent();
                try {
                    if ($mol_wire_probe(() => parent.sub()))
                        parent.sub(null);
                    file.reset();
                }
                catch (error) {
                    if ($mol_fail_catch(error))
                        $mol_fail_log(error);
                }
            }
            this.changed.clear();
            this.watching = true;
        }
        static watching = true;
        static lock = new $mol_lock;
        static watch_off(path) {
            this.watching = false;
            this.flush();
            this.watching = false;
            this.changed.add(this.absolute(path));
        }
        static unwatched(side_effect, affected_dir) {
            const unlock = this.lock.grab();
            this.watch_off(affected_dir);
            try {
                const result = side_effect();
                this.flush();
                unlock();
                return result;
            }
            catch (e) {
                if (!$mol_promise_like(e)) {
                    this.flush();
                    unlock();
                }
                $mol_fail_hidden(e);
            }
        }
        reset() {
            this.stat(null);
        }
        modified() { return this.stat()?.mtime ?? null; }
        version() {
            const next = this.stat()?.mtime.getTime().toString(36).toUpperCase() ?? '';
            return next;
        }
        info(path) { return null; }
        ensure() { }
        drop() { }
        copy(to) { }
        read() { return new Uint8Array; }
        write(buffer) { }
        kids() {
            return [];
        }
        readable(opts) {
            return new ReadableStream;
        }
        writable(opts) {
            return new WritableStream;
        }
        buffer(next) {
            let readed = new Uint8Array();
            if (next === undefined) {
                if (this.version())
                    readed = this.read();
            }
            const prev = $mol_mem_cached(() => this.buffer());
            const changed = prev === undefined || !$mol_compare_array(prev, next ?? readed);
            if (prev !== undefined && changed) {
                this.$.$mol_log3_rise({
                    place: `$mol_file_node.buffer()`,
                    message: 'Changed',
                    path: this.relate(),
                });
            }
            if (next === undefined)
                return changed ? readed : prev;
            if (!changed && this.exists())
                return prev;
            this.parent().exists(true);
            this.stat(this.stat_make(next.length), 'virt');
            this.write(next);
            return next;
        }
        stat_make(size) {
            const now = new Date();
            return {
                type: 'file',
                size,
                atime: now,
                mtime: now,
                ctime: now,
            };
        }
        clone(to) {
            if (!this.exists())
                return null;
            const target = this.constructor.absolute(to);
            try {
                this.version();
                target.parent().exists(true);
                this.copy(to);
                target.reset();
                return target;
            }
            catch (error) {
                if ($mol_fail_catch(error)) {
                    console.error(error);
                }
            }
            return null;
        }
        watcher() {
            return {
                destructor() { }
            };
        }
        exists(next) {
            const exists = Boolean(this.stat());
            if (next === undefined)
                return exists;
            if (next === exists)
                return exists;
            if (next) {
                this.parent().exists(true);
                this.ensure();
            }
            else {
                this.drop();
            }
            this.reset();
            return next;
        }
        type() {
            return this.stat()?.type ?? '';
        }
        name() {
            return this.path().replace(/^.*\//, '');
        }
        ext() {
            const match = /((?:\.\w+)+)$/.exec(this.path());
            return match ? match[1].substring(1) : '';
        }
        text(next, virt) {
            if (next !== undefined)
                this.exists();
            return this.text_int(next, virt);
        }
        text_int(next, virt) {
            if (virt) {
                this.stat(this.stat_make(0), 'virt');
                return next;
            }
            if (next === undefined) {
                return $mol_charset_decode(this.buffer());
            }
            else {
                const buffer = $mol_charset_encode(next);
                this.buffer(buffer);
                return next;
            }
        }
        sub(reset) {
            if (!this.exists())
                return [];
            if (this.type() !== 'dir')
                return [];
            this.version();
            return this.kids().filter(file => file.exists());
        }
        resolve(path) {
            throw new Error('implement');
        }
        relate(base = this.constructor.relative('.')) {
            const base_path = base.path();
            const path = this.path();
            return path.startsWith(base_path) ? path.slice(base_path.length) : path;
        }
        find(include, exclude) {
            const found = [];
            const sub = this.sub();
            for (const child of sub) {
                const child_path = child.path();
                if (exclude && child_path.match(exclude))
                    continue;
                if (!include || child_path.match(include))
                    found.push(child);
                if (child.type() === 'dir') {
                    const sub_child = child.find(include, exclude);
                    for (const child of sub_child)
                        found.push(child);
                }
            }
            return found;
        }
        size() {
            switch (this.type()) {
                case 'file': return this.stat()?.size ?? 0;
                default: return 0;
            }
        }
        toJSON() {
            return this.path();
        }
        open(...modes) {
            return this.$.$mol_file_transaction.make({
                path: () => this.path(),
                modes: () => modes
            });
        }
    }
    __decorate([
        $mol_action
    ], $mol_file_base.prototype, "exists_cut", null);
    __decorate([
        $mol_mem
    ], $mol_file_base.prototype, "stat", null);
    __decorate([
        $mol_mem
    ], $mol_file_base.prototype, "modified", null);
    __decorate([
        $mol_mem
    ], $mol_file_base.prototype, "version", null);
    __decorate([
        $mol_mem_key
    ], $mol_file_base.prototype, "readable", null);
    __decorate([
        $mol_mem_key
    ], $mol_file_base.prototype, "writable", null);
    __decorate([
        $mol_mem
    ], $mol_file_base.prototype, "buffer", null);
    __decorate([
        $mol_action
    ], $mol_file_base.prototype, "stat_make", null);
    __decorate([
        $mol_mem_key
    ], $mol_file_base.prototype, "clone", null);
    __decorate([
        $mol_mem
    ], $mol_file_base.prototype, "exists", null);
    __decorate([
        $mol_mem
    ], $mol_file_base.prototype, "type", null);
    __decorate([
        $mol_mem
    ], $mol_file_base.prototype, "text_int", null);
    __decorate([
        $mol_mem
    ], $mol_file_base.prototype, "sub", null);
    __decorate([
        $mol_mem
    ], $mol_file_base.prototype, "size", null);
    __decorate([
        $mol_action
    ], $mol_file_base.prototype, "open", null);
    __decorate([
        $mol_mem_key
    ], $mol_file_base, "absolute", null);
    __decorate([
        $mol_action
    ], $mol_file_base, "flush", null);
    __decorate([
        $mol_action
    ], $mol_file_base, "watch_off", null);
    $.$mol_file_base = $mol_file_base;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_file extends $mol_file_base {
    }
    $.$mol_file = $mol_file;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    function $mol_dom_parse(text, type = 'application/xhtml+xml') {
        const parser = new $mol_dom_context.DOMParser();
        const doc = parser.parseFromString(text, type);
        const error = doc.getElementsByTagName('parsererror');
        if (error.length)
            throw new Error(error[0].textContent);
        return doc;
    }
    $.$mol_dom_parse = $mol_dom_parse;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_fetch_response extends $mol_object2 {
        native;
        constructor(native) {
            super();
            this.native = native;
        }
        status() {
            const types = ['unknown', 'inform', 'success', 'redirect', 'wrong', 'failed'];
            return types[Math.floor(this.native.status / 100)];
        }
        code() {
            return this.native.status;
        }
        message() {
            return this.native.statusText || `HTTP Error ${this.code()}`;
        }
        headers() {
            return this.native.headers;
        }
        mime() {
            return this.headers().get('content-type');
        }
        stream() {
            return this.native.body;
        }
        text() {
            const buffer = this.buffer();
            const native = this.native;
            const mime = native.headers.get('content-type') || '';
            const [, charset] = /charset=(.*)/.exec(mime) || [, 'utf-8'];
            const decoder = new TextDecoder(charset);
            return decoder.decode(buffer);
        }
        json() {
            return $mol_wire_sync(this.native).json();
        }
        blob() {
            return $mol_wire_sync(this.native).blob();
        }
        buffer() {
            return $mol_wire_sync(this.native).arrayBuffer();
        }
        xml() {
            return $mol_dom_parse(this.text(), 'application/xml');
        }
        xhtml() {
            return $mol_dom_parse(this.text(), 'application/xhtml+xml');
        }
        html() {
            return $mol_dom_parse(this.text(), 'text/html');
        }
    }
    __decorate([
        $mol_action
    ], $mol_fetch_response.prototype, "stream", null);
    __decorate([
        $mol_action
    ], $mol_fetch_response.prototype, "text", null);
    __decorate([
        $mol_action
    ], $mol_fetch_response.prototype, "xml", null);
    __decorate([
        $mol_action
    ], $mol_fetch_response.prototype, "xhtml", null);
    __decorate([
        $mol_action
    ], $mol_fetch_response.prototype, "html", null);
    $.$mol_fetch_response = $mol_fetch_response;
    class $mol_fetch extends $mol_object2 {
        static request(input, init = {}) {
            const controller = new AbortController();
            let done = false;
            const promise = fetch(input, {
                ...init,
                signal: controller.signal,
            }).finally(() => {
                done = true;
            });
            return Object.assign(promise, {
                destructor: () => {
                    if (!done && !controller.signal.aborted)
                        controller.abort();
                },
            });
        }
        static response(input, init) {
            return new $mol_fetch_response($mol_wire_sync(this).request(input, init));
        }
        static success(input, init) {
            const response = this.response(input, init);
            if (response.status() === 'success')
                return response;
            throw new Error(response.message(), { cause: response });
        }
        static stream(input, init) {
            return this.success(input, init).stream();
        }
        static text(input, init) {
            return this.success(input, init).text();
        }
        static json(input, init) {
            return this.success(input, init).json();
        }
        static blob(input, init) {
            return this.success(input, init).blob();
        }
        static buffer(input, init) {
            return this.success(input, init).buffer();
        }
        static xml(input, init) {
            return this.success(input, init).xml();
        }
        static xhtml(input, init) {
            return this.success(input, init).xhtml();
        }
        static html(input, init) {
            return this.success(input, init).html();
        }
    }
    __decorate([
        $mol_action
    ], $mol_fetch, "response", null);
    __decorate([
        $mol_action
    ], $mol_fetch, "success", null);
    __decorate([
        $mol_action
    ], $mol_fetch, "stream", null);
    __decorate([
        $mol_action
    ], $mol_fetch, "text", null);
    __decorate([
        $mol_action
    ], $mol_fetch, "json", null);
    __decorate([
        $mol_action
    ], $mol_fetch, "blob", null);
    __decorate([
        $mol_action
    ], $mol_fetch, "buffer", null);
    __decorate([
        $mol_action
    ], $mol_fetch, "xml", null);
    __decorate([
        $mol_action
    ], $mol_fetch, "xhtml", null);
    __decorate([
        $mol_action
    ], $mol_fetch, "html", null);
    $.$mol_fetch = $mol_fetch;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_file_webdav extends $mol_file_base {
        static relative(path) {
            return this.absolute(new URL(path, this.base).toString());
        }
        resolve(path) {
            let res = this.path() + '/' + path;
            while (true) {
                let prev = res;
                res = res.replace(/\/[^\/.]+\/\.\.\//, '/');
                if (prev === res)
                    break;
            }
            res = res.replace(/\/\.\.\/?$/, '');
            if (res === this.path())
                return this;
            return this.constructor.absolute(res);
        }
        static headers() { return {}; }
        headers() { return this.constructor.headers(); }
        fetch(init) {
            return this.$.$mol_fetch.success(this.path(), {
                ...init,
                headers: {
                    ...this.headers(),
                    ...init.headers,
                }
            });
        }
        read() {
            try {
                const response = this.fetch({});
                return new Uint8Array(response.buffer());
            }
            catch (error) {
                if (error instanceof Error
                    && error.cause instanceof $mol_fetch_response
                    && error.cause.native.status === 404)
                    return new Uint8Array;
                $mol_fail_hidden(error);
            }
        }
        write(body) { this.fetch({ method: 'PUT', body }); }
        ensure() { this.fetch({ method: 'MKCOL' }); }
        drop() { this.fetch({ method: 'DELETE' }); }
        copy(to) {
            this.fetch({
                method: 'COPY',
                headers: { Destination: to }
            });
        }
        kids() {
            const response = this.fetch({ method: 'PROPFIND' });
            const xml = response.xml();
            const result = [];
            for (const multistatus of xml.childNodes) {
                if (multistatus.nodeName !== 'D:multistatus')
                    continue;
                for (const response of multistatus.childNodes) {
                    let path;
                    if (response.nodeName === 'D:href')
                        path = response.textContent ?? '';
                    if (!path)
                        continue;
                    if (response.nodeName !== 'D:propstat')
                        continue;
                    const stat = webdav_stat(response);
                    const file = this.resolve(path);
                    file.stat(stat, 'virt');
                    result.push(file);
                }
            }
            return result;
        }
        readable(opts) {
            return this.fetch({
                headers: !opts.start ? {} : {
                    'Range': `bytes=${opts.start}-${opts.end ?? ''}`
                }
            }).stream() || $mol_fail(new Error('Not found'));
        }
        info() {
            return this.kids().at(0)?.stat() ?? null;
        }
    }
    __decorate([
        $mol_mem_key
    ], $mol_file_webdav.prototype, "readable", null);
    $.$mol_file_webdav = $mol_file_webdav;
    function webdav_stat(prop_stat) {
        const now = new Date();
        const stat = {
            type: 'file',
            size: 0,
            atime: now,
            mtime: now,
            ctime: now,
        };
        for (const prop of prop_stat.childNodes) {
            if (prop.nodeName !== 'D:prop')
                continue;
            for (const value of prop.childNodes) {
                const name = value.nodeName;
                const text = value.textContent ?? '';
                if (name === 'D:getcontenttype') {
                    stat.type = text.endsWith('directory') ? 'dir' : 'file';
                }
                if (name === 'D:getcontentlength') {
                    stat.size = Number(value.textContent || '0');
                    if (Number.isNaN(stat.size))
                        stat.size = 0;
                }
                if (name === 'D:getlastmodified')
                    stat.mtime = stat.atime = new Date(text);
                if (name === 'D:creationdate')
                    stat.ctime = new Date(text);
            }
        }
        return stat;
    }
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_file_web extends $mol_file_webdav {
        static base = $mol_dom_context.document?.currentScript
            ? new URL('.', $mol_dom_context.document.currentScript['src']).toString()
            : '';
        version() { return '1'; }
        info() {
            try {
                const response = this.fetch({ method: 'HEAD' });
                const headers = response.headers();
                let size = Number(headers.get('Content-Length'));
                if (Number.isNaN(size))
                    size = 0;
                const last = headers.get('Last-Modified');
                const mtime = last ? new Date(last) : new Date();
                return {
                    type: 'file',
                    size,
                    mtime,
                    atime: mtime,
                    ctime: mtime,
                };
            }
            catch (error) {
                if (error instanceof Error
                    && error.cause instanceof $mol_fetch_response
                    && error.cause.native.status === 404)
                    return null;
                $mol_fail_hidden(error);
            }
        }
    }
    $.$mol_file_web = $mol_file_web;
    $.$mol_file = $mol_file_web;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    class $mol_locale extends $mol_object {
        static lang_default() {
            return 'en';
        }
        static lang(next) {
            return this.$.$mol_state_local.value('locale', next) || $mol_dom_context.navigator.language.replace(/-.*/, '') || this.lang_default();
        }
        static source(lang) {
            return JSON.parse(this.$.$mol_file.relative(`web.locale=${lang}.json`).text().toString());
        }
        static texts(lang, next) {
            if (next)
                return next;
            try {
                return this.source(lang).valueOf();
            }
            catch (error) {
                if ($mol_fail_catch(error)) {
                    const def = this.lang_default();
                    if (lang === def)
                        throw error;
                }
            }
            return {};
        }
        static text(key) {
            const lang = this.lang();
            const target = this.texts(lang)[key];
            if (target)
                return target;
            this.warn(key);
            const en = this.texts('en')[key];
            if (!en)
                return key;
            return en;
        }
        static warn(key) {
            console.warn(`Not translated to "${this.lang()}": ${key}`);
            return null;
        }
    }
    __decorate([
        $mol_mem
    ], $mol_locale, "lang_default", null);
    __decorate([
        $mol_mem
    ], $mol_locale, "lang", null);
    __decorate([
        $mol_mem_key
    ], $mol_locale, "source", null);
    __decorate([
        $mol_mem_key
    ], $mol_locale, "texts", null);
    __decorate([
        $mol_mem_key
    ], $mol_locale, "text", null);
    __decorate([
        $mol_mem_key
    ], $mol_locale, "warn", null);
    $.$mol_locale = $mol_locale;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/locale/readme.md" ] = "IyAkbW9sX2xvY2FsZQoKTGFuZ3VhZ2Ugc2VsZWN0aW9uIGNvbXBvbmVudAoKIyMgW09ubGluZSBkZW1vXShodHRwczovL21vbC5oeW9vLnJ1LyMhc2VjdGlvbj1kZW1vcy9yZWFkbWUvZGVtbz1tb2xfbG9jYWxlX2RlbW8pCgoKIyMgVXNhZ2UgZXhhbXBsZQoKQWxsIGxhbmd1YWdlcwoKYGBgCgk8PSBBbGxfbGFuZ3VhZ2VzICRtb2xfbG9jYWxlX3NlbGVjdApgYGAKCk9yIHlvdSBjYW4gZ2l2ZSB1c2VyIHNlbGVjdCBmcm9tIHlvdXIgbGlzdAoKYGBgCgk8PSBMaXN0X29mX2xhbmd1YWdlcyAkbW9sX2xvY2FsZV9zZWxlY3QKCQlkaWN0aW9uYXJ5ICoKCQkJcnUgXFJ1c3NpYW4KCQkJZW4gXEVuZ2xpc2gKYGBgCgpPciBmcm9tIGNvZGUgdXNhZ2UKCmBgYHR5cGVzY3JpcHQKJG1vbF9sb2NhbGUubGFuZygpIC8vICBnZXQgY3VycmVudCBsYW5nCiRtb2xfbG9jYWxlLmxhbmcoImVuIikgLy8gc2V0IGxhbmcKYGBgCgpTYW1wbGUgbGFuZ3VhZ2UgbGlzdCAtIGh0dHBzOi8vZ2l0aHViLmNvbS9oeW9vLXJ1L2xpbmd1YS5oeW9vLnJ1L2Jsb2IvbWFzdGVyL2xhbmdzL2xhbmdzLnRzCg=="

;
	($.$mol_text_code) = class $mol_text_code extends ($.$mol_stack) {
		sidebar_showed(){
			return false;
		}
		render_visible_only(){
			return false;
		}
		row_numb(id){
			return 0;
		}
		row_text(id){
			return "";
		}
		syntax(){
			return null;
		}
		uri_resolve(id){
			return "";
		}
		highlight(){
			return "";
		}
		Row(id){
			const obj = new this.$.$mol_text_code_line();
			(obj.numb_showed) = () => ((this.sidebar_showed()));
			(obj.numb) = () => ((this.row_numb(id)));
			(obj.text) = () => ((this.row_text(id)));
			(obj.syntax) = () => ((this.syntax()));
			(obj.uri_resolve) = (id) => ((this.uri_resolve(id)));
			(obj.highlight) = () => ((this.highlight()));
			return obj;
		}
		rows(){
			return [(this.Row("0"))];
		}
		Rows(){
			const obj = new this.$.$mol_list();
			(obj.render_visible_only) = () => ((this.render_visible_only()));
			(obj.rows) = () => ((this.rows()));
			return obj;
		}
		text_export(){
			return "";
		}
		Copy(){
			const obj = new this.$.$mol_button_copy();
			(obj.hint) = () => ((this.$.$mol_locale.text("$mol_text_code_Copy_hint")));
			(obj.text) = () => ((this.text_export()));
			return obj;
		}
		attr(){
			return {...(super.attr()), "mol_text_code_sidebar_showed": (this.sidebar_showed())};
		}
		text(){
			return "";
		}
		text_lines(){
			return [];
		}
		find_pos(id){
			return null;
		}
		uri_base(){
			return "";
		}
		sub(){
			return [(this.Rows()), (this.Copy())];
		}
	};
	($mol_mem_key(($.$mol_text_code.prototype), "Row"));
	($mol_mem(($.$mol_text_code.prototype), "Rows"));
	($mol_mem(($.$mol_text_code.prototype), "Copy"));


;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_text_code extends $.$mol_text_code {
            render_visible_only() {
                return this.$.$mol_support_css_overflow_anchor();
            }
            text_lines() {
                return (this.text() ?? '').split('\n');
            }
            rows() {
                return this.text_lines().map((_, index) => this.Row(index + 1));
            }
            row_text(index) {
                return this.text_lines()[index - 1];
            }
            row_numb(index) {
                return index;
            }
            find_pos(offset) {
                for (const [index, line] of this.text_lines().entries()) {
                    if (line.length >= offset) {
                        return this.Row(index + 1).find_pos(offset);
                    }
                    else {
                        offset -= line.length + 1;
                    }
                }
                return null;
            }
            sub() {
                return [
                    this.Rows(),
                    ...this.sidebar_showed() ? [this.Copy()] : []
                ];
            }
            syntax() {
                return this.$.$mol_syntax2_md_code;
            }
            uri_base() {
                return $mol_dom_context.document.location.href;
            }
            uri_resolve(uri) {
                if (/^(\w+script+:)+/.test(uri))
                    return null;
                try {
                    const url = new URL(uri, this.uri_base());
                    return url.toString();
                }
                catch (error) {
                    $mol_fail_log(error);
                    return null;
                }
            }
            text_export() {
                return this.text() + '\n';
            }
        }
        __decorate([
            $mol_mem
        ], $mol_text_code.prototype, "text_lines", null);
        __decorate([
            $mol_mem
        ], $mol_text_code.prototype, "rows", null);
        __decorate([
            $mol_mem_key
        ], $mol_text_code.prototype, "row_text", null);
        __decorate([
            $mol_mem_key
        ], $mol_text_code.prototype, "find_pos", null);
        __decorate([
            $mol_mem
        ], $mol_text_code.prototype, "sub", null);
        __decorate([
            $mol_mem_key
        ], $mol_text_code.prototype, "uri_resolve", null);
        $$.$mol_text_code = $mol_text_code;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        const { rem, px } = $mol_style_unit;
        $mol_style_define($mol_text_code, {
            whiteSpace: 'pre-wrap',
            font: {
                family: 'monospace',
            },
            Rows: {
                padding: $mol_gap.text,
            },
            Row: {
                font: {
                    family: 'inherit',
                },
            },
            Copy: {
                alignSelf: 'flex-start',
                justifySelf: 'flex-start',
            },
            '@': {
                'mol_text_code_sidebar_showed': {
                    true: {
                        $mol_text_code_line: {
                            margin: {
                                left: rem(1.75),
                            },
                        },
                    },
                },
            },
        });
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
	($.$mol_float) = class $mol_float extends ($.$mol_view) {
		style(){
			return {...(super.style()), "minHeight": "auto"};
		}
	};


;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/float/float.view.css", "[mol_float] {\n\tposition: sticky;\n\ttop: 0;\n\tleft: 0;\n\tz-index: var(--mol_layer_float);\n\topacity: 1;\n\ttransition: opacity .25s ease-in;\n\tdisplay: block;\n\tbackground: linear-gradient( var(--mol_theme_card), var(--mol_theme_card) ), var(--mol_theme_back);\n\tbox-shadow: 0 0 .5rem hsla(0,0%,0%,.25);\n}\n\n");
})($ || ($ = {}));

;
"use strict";

;
	($.$mol_check) = class $mol_check extends ($.$mol_button_minor) {
		checked(next){
			if(next !== undefined) return next;
			return false;
		}
		aria_checked(){
			return "false";
		}
		aria_role(){
			return "checkbox";
		}
		Icon(){
			return null;
		}
		title(){
			return "";
		}
		Title(){
			const obj = new this.$.$mol_view();
			(obj.sub) = () => ([(this.title())]);
			return obj;
		}
		label(){
			return [(this.Title())];
		}
		attr(){
			return {
				...(super.attr()), 
				"mol_check_checked": (this.checked()), 
				"aria-checked": (this.aria_checked()), 
				"role": (this.aria_role())
			};
		}
		sub(){
			return [(this.Icon()), (this.label())];
		}
	};
	($mol_mem(($.$mol_check.prototype), "checked"));
	($mol_mem(($.$mol_check.prototype), "Title"));


;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/check/check.css", "[mol_check] {\n\tflex: 0 0 auto;\n\tjustify-content: flex-start;\n\talign-content: center;\n\t/* align-items: flex-start; */\n\tborder: none;\n\tfont-weight: inherit;\n\tbox-shadow: none;\n\ttext-align: left;\n\tdisplay: inline-flex;\n\tflex-wrap: nowrap;\n}\n\n[mol_check_title] {\n\tflex-shrink: 1;\n}\n");
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/check/readme.md" ] = "IyAkbW9sX2NoZWNrCgpDaGVja2JveCBVSSBjb21wb25lbnQuIFNlZSBWYXJpYW50cyBmb3IgbW9yZSBjb25jcmV0ZSBpbXBsZW1lbnRhdGlvbnMuCgojIyBWYXJpYW50cwoKLSBbJG1vbF9jaGVja19ib3hdKGJveCkgLSBTaW1wbGUgY2hlY2tib3gKLSBbJG1vbF9jaGVja19ncm91cF0oZ3JvdXApIC0gIEdyb3VwIG9mIGNoZWNrYm94ZXMKLSBbJG1vbF9jaGVja19leHBhbmRdKGV4cGFuZCkgLSBFeHBhbmRlciBmb3IgdHJlZXMsIGxpc3RzLCBldGMKLSBbJG1vbF9jaGVja19pY29uXShpY29uKSAtIEljb24gY2hlY2tib3gKLSBbJG1vbF9jaGVja19saXN0XShsaXN0KSAtIExpc3Qgb2YgY2hlY2tib3hlcwoKIyMgW09ubGluZSBkZW1vc10oaHR0cHM6Ly9tb2wuaHlvby5ydS8jIXNlY3Rpb249ZGVtb3MvZmlsdGVyPSUyMGNoZWNrYm94KQoKIyMgVXNhZ2UgZXhhbXBsZXMKCiMjIyBCYXNpYwoKYGBgCjw9IFNwYW0gJG1vbF9jaGVjawoJdGl0bGUgPD0gc3BhbV90aXRsZSBAIFxTZW5kIG1lIHNvbWUgc3BhbQpgYGAKCiMjIyBCb3gKCmBgYAo8PSBTcGFtICRtb2xfY2hlY2tfYm94Cgl0aXRsZSA8PSBzcGFtX3RpdGxlIEAgXFNlbmQgbWUgc29tZSBzcGFtCgljaGVja2VkPyA8PT4gc3BhbV9uZWVkZWQ/IHRydWUKCWVuYWJsZWQgPD0gc3BhbV9lbmFibGVkIGZhbHNlCmBgYAoKIyMgUHJvcGVydGllcwoKIyMjIEJhc2ljCgoqKmBjaGVja2VkKCBuZXh0PyA6IGJvb2xlYW4gKSA6IGJvb2xlYW5gKioKClJldHVybnMgY2hlY2tlZCBzdGF0ZSBvZiBjaGVja2JveC4gVXNlciBjYW4gc3dpdGNoIHRoZW0gd2hlbiBjaGVja2JveCBpcyBlbmFibGVkLgoKIyMjIGBib3hgLCBgZXhwYW5kYAoKKipgZW5hYmxlZCgpIDogYm9vbGVhbmAqKgoKV2hldGhlciB0aGUgY29udHJvbCBpcyBpbnRlcmFjdGl2ZS4K"

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_check extends $.$mol_check {
            click(next) {
                if (next?.defaultPrevented)
                    return;
                this.checked(!this.checked());
                if (next)
                    next.preventDefault();
            }
            sub() {
                return [
                    ...$mol_maybe(this.Icon()),
                    ...this.label(),
                ];
            }
            label() {
                return this.title() ? super.label() : [];
            }
            aria_checked() {
                return String(this.checked());
            }
        }
        $$.$mol_check = $mol_check;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
	($.$mol_icon_chevron) = class $mol_icon_chevron extends ($.$mol_icon) {
		path(){
			return "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z";
		}
	};


;
"use strict";

;
	($.$mol_check_expand) = class $mol_check_expand extends ($.$mol_check) {
		level_style(){
			return "0px";
		}
		expanded(next){
			if(next !== undefined) return next;
			return false;
		}
		expandable(){
			return false;
		}
		Icon(){
			const obj = new this.$.$mol_icon_chevron();
			return obj;
		}
		level(){
			return 0;
		}
		style(){
			return {...(super.style()), "paddingLeft": (this.level_style())};
		}
		checked(next){
			return (this.expanded(next));
		}
		enabled(){
			return (this.expandable());
		}
	};
	($mol_mem(($.$mol_check_expand.prototype), "expanded"));
	($mol_mem(($.$mol_check_expand.prototype), "Icon"));


;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_check_expand extends $.$mol_check_expand {
            level_style() {
                return `${this.level() * 1 - 1}rem`;
            }
            expandable() {
                return this.expanded() !== null;
            }
        }
        $$.$mol_check_expand = $mol_check_expand;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/check/expand/expand.view.css", "[mol_check_expand] {\n\tmin-width: 20px;\n}\n\n:where([mol_check_expand][disabled]) [mol_check_expand_icon] {\n\tvisibility: hidden;\n}\n\n[mol_check_expand_icon] {\n\tbox-shadow: none;\n\tmargin-left: -0.375rem;\n}\n[mol_check_expand_icon] {\n\ttransform: rotateZ(0deg);\n}\n\n:where([mol_check_checked]) [mol_check_expand_icon] {\n\ttransform: rotateZ(90deg);\n}\n\n[mol_check_expand_icon] {\n\tvertical-align: text-top;\n}\n\n[mol_check_expand_label] {\n\tmargin-left: 0;\n}\n");
})($ || ($ = {}));

;
	($.$mol_grid) = class $mol_grid extends ($.$mol_view) {
		rows(){
			return [];
		}
		Table(){
			const obj = new this.$.$mol_grid_table();
			(obj.sub) = () => ((this.rows()));
			return obj;
		}
		head_cells(){
			return [];
		}
		cells(id){
			return [];
		}
		cell_content(id){
			return [];
		}
		cell_content_text(id){
			return (this.cell_content(id));
		}
		cell_content_number(id){
			return (this.cell_content(id));
		}
		col_head_content(id){
			return [];
		}
		cell_level(id){
			return 0;
		}
		cell_expanded(id, next){
			if(next !== undefined) return next;
			return false;
		}
		needle(){
			return "";
		}
		cell_value(id){
			return "";
		}
		Cell_dimmer(id){
			const obj = new this.$.$mol_dimmer();
			(obj.needle) = () => ((this.needle()));
			(obj.haystack) = () => ((this.cell_value(id)));
			return obj;
		}
		row_height(){
			return 32;
		}
		row_ids(){
			return [];
		}
		row_id(id){
			return null;
		}
		col_ids(){
			return [];
		}
		records(){
			return {};
		}
		record(id){
			return null;
		}
		hierarchy(){
			return null;
		}
		hierarchy_col(){
			return "";
		}
		minimal_width(){
			return 0;
		}
		sub(){
			return [(this.Head()), (this.Table())];
		}
		Head(){
			const obj = new this.$.$mol_grid_row();
			(obj.cells) = () => ((this.head_cells()));
			return obj;
		}
		Row(id){
			const obj = new this.$.$mol_grid_row();
			(obj.minimal_height) = () => ((this.row_height()));
			(obj.minimal_width) = () => ((this.minimal_width()));
			(obj.cells) = () => ((this.cells(id)));
			return obj;
		}
		Cell(id){
			const obj = new this.$.$mol_view();
			return obj;
		}
		cell(id){
			return null;
		}
		Cell_text(id){
			const obj = new this.$.$mol_grid_cell();
			(obj.sub) = () => ((this.cell_content_text(id)));
			return obj;
		}
		Cell_number(id){
			const obj = new this.$.$mol_grid_number();
			(obj.sub) = () => ((this.cell_content_number(id)));
			return obj;
		}
		Col_head(id){
			const obj = new this.$.$mol_float();
			(obj.dom_name) = () => ("th");
			(obj.sub) = () => ((this.col_head_content(id)));
			return obj;
		}
		Cell_branch(id){
			const obj = new this.$.$mol_check_expand();
			(obj.level) = () => ((this.cell_level(id)));
			(obj.label) = () => ((this.cell_content(id)));
			(obj.expanded) = (next) => ((this.cell_expanded(id, next)));
			return obj;
		}
		Cell_content(id){
			return [(this.Cell_dimmer(id))];
		}
	};
	($mol_mem(($.$mol_grid.prototype), "Table"));
	($mol_mem_key(($.$mol_grid.prototype), "cell_expanded"));
	($mol_mem_key(($.$mol_grid.prototype), "Cell_dimmer"));
	($mol_mem(($.$mol_grid.prototype), "Head"));
	($mol_mem_key(($.$mol_grid.prototype), "Row"));
	($mol_mem_key(($.$mol_grid.prototype), "Cell"));
	($mol_mem_key(($.$mol_grid.prototype), "Cell_text"));
	($mol_mem_key(($.$mol_grid.prototype), "Cell_number"));
	($mol_mem_key(($.$mol_grid.prototype), "Col_head"));
	($mol_mem_key(($.$mol_grid.prototype), "Cell_branch"));
	($.$mol_grid_table) = class $mol_grid_table extends ($.$mol_list) {};
	($.$mol_grid_row) = class $mol_grid_row extends ($.$mol_view) {
		cells(){
			return [];
		}
		sub(){
			return (this.cells());
		}
	};
	($.$mol_grid_cell) = class $mol_grid_cell extends ($.$mol_view) {
		minimal_height(){
			return 40;
		}
	};
	($.$mol_grid_number) = class $mol_grid_number extends ($.$mol_grid_cell) {};


;
"use strict";
var $;
(function ($) {
    class $mol_state_session extends $mol_object {
        static 'native()';
        static native() {
            if (this['native()'])
                return this['native()'];
            check: try {
                const native = $mol_dom_context.sessionStorage;
                if (!native)
                    break check;
                native.setItem('', '');
                native.removeItem('');
                return this['native()'] = native;
            }
            catch (error) {
                console.warn(error);
            }
            return this['native()'] = {
                getItem(key) {
                    return this[':' + key];
                },
                setItem(key, value) {
                    this[':' + key] = value;
                },
                removeItem(key) {
                    this[':' + key] = void 0;
                }
            };
        }
        static value(key, next) {
            if (next === void 0)
                return JSON.parse(this.native().getItem(key) || 'null');
            if (next === null)
                this.native().removeItem(key);
            else
                this.native().setItem(key, JSON.stringify(next));
            return next;
        }
        prefix() { return ''; }
        value(key, next) {
            return $mol_state_session.value(this.prefix() + '.' + key, next);
        }
    }
    __decorate([
        $mol_mem_key
    ], $mol_state_session, "value", null);
    $.$mol_state_session = $mol_state_session;
})($ || ($ = {}));

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_grid extends $.$mol_grid {
            head_cells() {
                return this.col_ids().map(colId => this.Col_head(colId));
            }
            col_head_content(colId) {
                return [colId];
            }
            rows() {
                return this.row_ids().map(id => this.Row(id));
            }
            cells(row_id) {
                return this.col_ids().map(col_id => this.Cell({ row: row_id, col: col_id }));
            }
            col_type(col_id) {
                if (col_id === this.hierarchy_col())
                    return 'branch';
                const rowFirst = this.row_id(0);
                const val = this.record(rowFirst[rowFirst.length - 1])[col_id];
                if (typeof val === 'number')
                    return 'number';
                return 'text';
            }
            Cell(id) {
                switch (this.col_type(id.col).valueOf()) {
                    case 'branch': return this.Cell_branch(id);
                    case 'number': return this.Cell_number(id);
                }
                return this.Cell_text(id);
            }
            cell_content(id) {
                return [this.record(id.row[id.row.length - 1])[id.col]];
            }
            cell_content_text(id) {
                return this.cell_content(id).map(val => typeof val === 'object' ? JSON.stringify(val) : val);
            }
            records() {
                return [];
            }
            record(id) {
                return this.records()[id];
            }
            record_ids() {
                return Object.keys(this.records());
            }
            row_id(index) {
                return this.row_ids().slice(index, index + 1).valueOf()[0];
            }
            col_ids() {
                const rowFirst = this.row_id(0);
                if (rowFirst === void 0)
                    return [];
                const record = this.record(rowFirst[rowFirst.length - 1]);
                if (!record)
                    return [];
                return Object.keys(record);
            }
            hierarchy() {
                const hierarchy = {};
                const root = hierarchy[''] = {
                    id: '',
                    parent: null,
                    sub: [],
                };
                this.record_ids().map(id => {
                    root.sub.push(hierarchy[id] = {
                        id,
                        parent: root,
                        sub: [],
                    });
                });
                return hierarchy;
            }
            row_sub_ids(row) {
                return this.hierarchy()[row[row.length - 1]].sub.map(child => row.concat(child.id));
            }
            row_root_id() {
                return [''];
            }
            cell_level(id) {
                return id.row.length - 1;
            }
            row_ids() {
                const next = [];
                const add = (row) => {
                    next.push(row);
                    if (this.row_expanded(row)) {
                        this.row_sub_ids(row).forEach(child => add(child));
                    }
                };
                this.row_sub_ids(this.row_root_id()).forEach(child => add(child));
                return next;
            }
            row_expanded(row_id, next) {
                if (!this.row_sub_ids(row_id).length)
                    return null;
                const key = `row_expanded(${JSON.stringify(row_id)})`;
                const next2 = $mol_state_session.value(key, next);
                return (next2 == null) ? this.row_expanded_default(row_id) : next2;
            }
            row_expanded_default(row_id) {
                return true;
            }
            cell_expanded(id, next) {
                return this.row_expanded(id.row, next);
            }
            sub() {
                this.head_cells();
                this.rows();
                return super.sub();
            }
        }
        __decorate([
            $mol_mem
        ], $mol_grid.prototype, "head_cells", null);
        __decorate([
            $mol_mem
        ], $mol_grid.prototype, "rows", null);
        __decorate([
            $mol_mem_key
        ], $mol_grid.prototype, "col_type", null);
        __decorate([
            $mol_mem
        ], $mol_grid.prototype, "record_ids", null);
        __decorate([
            $mol_mem
        ], $mol_grid.prototype, "hierarchy", null);
        __decorate([
            $mol_mem
        ], $mol_grid.prototype, "row_ids", null);
        $$.$mol_grid = $mol_grid;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/grid/grid.view.css", "[mol_grid] {\n\tdisplay: block;\n\tflex: 0 1 auto;\n\tposition: relative;\n\toverflow-x: auto;\n}\n\n[mol_grid_gap] {\n\tposition: absolute;\n\tpadding: .1px;\n\ttop: 0;\n\ttransform: translateZ(0);\n}\n\n[mol_grid_table] {\n\tborder-spacing: 0;\n\tdisplay: table-row-group;\n\tposition: relative;\n}\n\n[mol_grid_table] > * {\n\tdisplay: table-row;\n\ttransition: none;\n}\n\n[mol_grid_head] > *,\n[mol_grid_table] > * > * {\n\tdisplay: table-cell;\n\tpadding: var(--mol_gap_text);\n\twhite-space: nowrap;\n\tvertical-align: middle;\n\tbox-shadow: inset 2px 2px 0 -1px var(--mol_theme_line);\n}\n\n[mol_grid_row]:where(:first-child) > * {\n\tbox-shadow: inset 2px 0 0 -1px var(--mol_theme_line);\n}\n\n[mol_grid_table] > * > *:where(:first-child) {\n\tbox-shadow: inset 0px 2px 0 -1px var(--mol_theme_line);\n}\n\n[mol_grid_head] > * {\n\tbox-shadow: inset 2px -2px 0 -1px var(--mol_theme_line);\n}\n\n[mol_grid_head] > *:where(:first-child) {\n\tbox-shadow: inset 0px -2px 0 -1px var(--mol_theme_line);\n}\n\n[mol_grid_table] > [mol_grid_row]:where(:first-child) > *:where(:first-child) {\n\tbox-shadow: none;\n}\t\n\n[mol_grid_head] {\n\tdisplay: table-row;\n\ttransform: none !important;\n}\n\n/* [mol_grid_cell_number] {\n\ttext-align: right;\n} */\n\n[mol_grid_col_head] {\n\tfont-weight: inherit;\n\ttext-align: inherit;\n\tdisplay: table-cell;\n\tcolor: var(--mol_theme_shade);\n}\n\n[mol_grid_cell_dimmer] {\n\tdisplay: inline-block;\n\tvertical-align: inherit;\n}\n");
})($ || ($ = {}));

;
	($.$mol_link) = class $mol_link extends ($.$mol_view) {
		uri_toggle(){
			return "";
		}
		hint(){
			return "";
		}
		hint_safe(){
			return (this.hint());
		}
		target(){
			return "_self";
		}
		file_name(){
			return "";
		}
		current(){
			return false;
		}
		relation(){
			return "";
		}
		event_click(next){
			if(next !== undefined) return next;
			return null;
		}
		click(next){
			return (this.event_click(next));
		}
		uri(){
			return "";
		}
		dom_name(){
			return "a";
		}
		uri_off(){
			return "";
		}
		uri_native(){
			return null;
		}
		external(){
			return false;
		}
		attr(){
			return {
				...(super.attr()), 
				"href": (this.uri_toggle()), 
				"title": (this.hint_safe()), 
				"target": (this.target()), 
				"download": (this.file_name()), 
				"mol_link_current": (this.current()), 
				"rel": (this.relation())
			};
		}
		sub(){
			return [(this.title())];
		}
		arg(){
			return {};
		}
		event(){
			return {...(super.event()), "click": (next) => (this.click(next))};
		}
	};
	($mol_mem(($.$mol_link.prototype), "event_click"));


;
var $node = $node || {} ; $node[ "/mol/link/readme.md" ] = "IyAkbW9sX2xpbmsKCkR5bmFtaWMgaHlwZXJsaW5rLiBJdCBjYW4gdG8gYWRkLCBjaGFuZ2Ugb3IgcmVtb3ZlIHBhcmFtZXRlcnMuIFRoZSBsaW5rIGxlYWRzIHRvIGN1cnJlbnQgcGFnZSB3b3VsZCBiZSBzdHlsaXplZCBpbiBvdGhlciB3YXkuCgojIyBbT25saW5lIGRlbW9dKGh0dHBzOi8vbW9sLmh5b28ucnUvIyFzZWN0aW9uPWRlbW9zL3JlYWRtZS9kZW1vPW1vbF9saW5rX2RlbW8pCgojIyBQcm9wZXJ0aWVzCgoqKmBhcmcoKSA6IHsgWyBuYW1lIDogc3RyaW5nIF0gOiBzdHJpbmcgfWAqKgoKUmV0dXJucyBwYXRjaCB0aGF0IHdpbGwgYmUgYXBwbGllZCB0byBwYWdlIFVSTC4gCgpgYGAKPD0gQ2xvc2UgJG1vbF9saW5rCglhcmcgKgoJCWRlbW8gbnVsbAoJc3ViIC8KCQk8PSBjbG9zZV90aXRsZSBAIFxDbG9zZSBkZW1vCmBgYAoKKipgdXJpKCkgOiBzdHJpbmdgKioKClJldHVybnMgdGFyZ2V0IFVSSS4KCmBgYAo8PSBFeGFtcGxlICRtb2xfbGluawoJdXJpIFxodHRwOi8vZXhhbXBsZS5vcmcKCXN1YiAvCgkJXGV4YW1wbGUub3JnCmBgYAoKKipgaGludCgpIDogc3RyaW5nYCoqCgpSZXR1cm5zIGhpbnQgdGhhdCBkaXNwbGF5cyBvbiBob3Zlci4KCmBgYAo8PSBFeGFtcGxlICRtb2xfbGluawoJdXJpIFxodHRwOi8vZXhhbXBsZS5vcmcKCXRpdGxlIFxleGFtcGxlLm9yZwoJaGludCBcT3BlbiBleHRlcm5hbCBsaW5rCmBgYAoKKipgdGFyZ2V0KCkgOiBzdHJpbmdgKioKCltOYW1lIG9mIHdpbmRvd10oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2EjYXR0ci10YXJnZXQpIHRvIG9wZW4gbGluay4KCmBgYAo8PSBFeHRlcm5hbCAkbW9sX2xpbmsKCXVyaSBcaHR0cDovL2V4YW1wbGUub3JnCgl0aXRsZSBcZXhhbXBsZS5vcmcKCXRhcmdldCBcX2JsYW5rCmBgYAoKKipgZmlsZV9uYW1lKCkgOiBzdHJpbmdgKioKClVzZWQgdG8gZG93bmxvYWQgZmlsZXMuIFNlZSAiRG93bmxvYWQiIGluIFtkZW1vXSguL2RlbW8vZGVtby52aWV3LnRyZWUpCg=="

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_link extends $.$mol_link {
            uri_toggle() {
                return this.current() ? this.uri_off() : this.uri();
            }
            uri() {
                return new this.$.$mol_state_arg(this.state_key()).link(this.arg());
            }
            uri_off() {
                const arg2 = {};
                for (let i in this.arg())
                    arg2[i] = null;
                return new this.$.$mol_state_arg(this.state_key()).link(arg2);
            }
            uri_native() {
                const base = this.$.$mol_state_arg.href();
                return new URL(this.uri(), base);
            }
            current() {
                const base = this.$.$mol_state_arg.href_normal();
                const target = this.uri_native().toString();
                if (base === target)
                    return true;
                const args = this.arg();
                const keys = Object.keys(args).filter(key => args[key] != null);
                if (keys.length === 0)
                    return false;
                for (const key of keys) {
                    if (this.$.$mol_state_arg.value(key) != args[key])
                        return false;
                }
                return true;
            }
            file_name() {
                return null;
            }
            minimal_height() {
                return Math.max(super.minimal_height(), 24);
            }
            external() {
                return this.uri_native().origin !== $mol_dom_context.location.origin;
            }
            target() {
                return this.external() ? '_blank' : '_self';
            }
            hint_safe() {
                try {
                    return this.hint();
                }
                catch (error) {
                    $mol_fail_log(error);
                    return '';
                }
            }
        }
        __decorate([
            $mol_mem
        ], $mol_link.prototype, "uri_toggle", null);
        __decorate([
            $mol_mem
        ], $mol_link.prototype, "uri", null);
        __decorate([
            $mol_mem
        ], $mol_link.prototype, "uri_off", null);
        __decorate([
            $mol_mem
        ], $mol_link.prototype, "uri_native", null);
        __decorate([
            $mol_mem
        ], $mol_link.prototype, "current", null);
        $$.$mol_link = $mol_link;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    const { rem } = $mol_style_unit;
    $mol_style_define($mol_link, {
        textDecoration: 'none',
        color: $mol_theme.control,
        stroke: 'currentcolor',
        cursor: 'pointer',
        padding: $mol_gap.text,
        boxSizing: 'border-box',
        position: 'relative',
        minWidth: rem(2.5),
        gap: $mol_gap.space,
        border: {
            radius: $mol_gap.round,
        },
        ':hover': {
            background: {
                color: $mol_theme.hover,
            },
        },
        ':focus': {
            outline: 'none',
            background: {
                color: $mol_theme.hover,
            },
        },
        ':active': {
            color: $mol_theme.focus,
        },
        '@': {
            mol_link_current: {
                'true': {
                    color: $mol_theme.current,
                    textShadow: '0 0',
                }
            }
        },
    });
})($ || ($ = {}));

;
	($.$mol_image) = class $mol_image extends ($.$mol_view) {
		uri(){
			return "";
		}
		loading(){
			return "eager";
		}
		decoding(){
			return "async";
		}
		cors(){
			return null;
		}
		natural_width(){
			return 0;
		}
		natural_height(){
			return 0;
		}
		load(next){
			if(next !== undefined) return next;
			return null;
		}
		dom_name(){
			return "img";
		}
		field(){
			return {
				...(super.field()), 
				"src": (this.uri()), 
				"alt": (this.title()), 
				"loading": (this.loading()), 
				"decoding": (this.decoding()), 
				"crossOrigin": (this.cors())
			};
		}
		attr(){
			return {
				...(super.attr()), 
				"width": (this.natural_width()), 
				"height": (this.natural_height())
			};
		}
		event(){
			return {"load": (next) => (this.load(next))};
		}
		minimal_width(){
			return 16;
		}
		minimal_height(){
			return 16;
		}
	};
	($mol_mem(($.$mol_image.prototype), "load"));


;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_image extends $.$mol_image {
            natural_width(next) {
                const dom = this.dom_node();
                if (dom.naturalWidth)
                    return dom.naturalWidth;
                const found = this.uri().match(/\bwidth=(\d+)/);
                return found ? Number(found[1]) : null;
            }
            natural_height(next) {
                const dom = this.dom_node();
                if (dom.naturalHeight)
                    return dom.naturalHeight;
                const found = this.uri().match(/\bheight=(\d+)/);
                return found ? Number(found[1]) : null;
            }
            load() {
                this.natural_width(null);
                this.natural_height(null);
            }
        }
        __decorate([
            $mol_mem
        ], $mol_image.prototype, "natural_width", null);
        __decorate([
            $mol_mem
        ], $mol_image.prototype, "natural_height", null);
        $$.$mol_image = $mol_image;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/image/image.view.css", "[mol_image] {\n\tborder-radius: var(--mol_gap_round);\n\toverflow: hidden;\n\tflex: 0 1 auto;\n\tmax-width: 100%;\n\tobject-fit: cover;\n\theight: fit-content;\n}\n");
})($ || ($ = {}));

;
	($.$mol_link_iconed) = class $mol_link_iconed extends ($.$mol_link) {
		icon(){
			return "";
		}
		Icon(){
			const obj = new this.$.$mol_image();
			(obj.uri) = () => ((this.icon()));
			(obj.title) = () => ("");
			return obj;
		}
		title(){
			return (this.uri());
		}
		sub(){
			return [(this.Icon())];
		}
		content(){
			return [(this.title())];
		}
		host(){
			return "";
		}
	};
	($mol_mem(($.$mol_link_iconed.prototype), "Icon"));


;
var $node = $node || {} ; $node[ "/mol/link/iconed/readme.md" ] = "IyAkbW9sX2xpbmtfaWNvbmVkCgpIeXBlcmxpbmsgd2l0aCBpY29uLiAKCiMjIFtPbmxpbmUgZGVtb10oaHR0cHM6Ly9tb2wuaHlvby5ydS8jIXNlY3Rpb249ZGVtb3MvcmVhZG1lL2RlbW89bW9sX2xpbmtfaWNvbmVkX2RlbW8pCgojIyBVc2FnZSBleGFtcGxlCgpgYGAKPD0gU2VhcmNoICRtb2xfbGlua19pY29uZWQKCXVyaSA8PSBzZWFyY2ggXGh0dHA6Ly9nb29nbGUuY29tCmBgYAojIyBFeHRlbmRzOiBbJG1vbF9saW5rXShodHRwczovL21vbC5oeW9vLnJ1LyMhc2VjdGlvbj1kZW1vcy9yZWFkbWUvZGVtbz1tb2xfbGlua19kZW1vKQoKIyMgUHJvcGVydGllcwoKKipgaWNvbigpIDogc3RyaW5nYCoqCgpSZXR1cm5zIGxpbmsgdG8gaWNvbi4gSXQgaXMgZmF2aWNvbiBvZiB0YXJnZXQgaG9zdCBieSBkZWZhdWx0LiAKCioqYGhvc3QoKSA6IHN0cmluZ2AqKgoKUmV0dXJucyBob3N0bmFtZSBvZiB1cmkuCgoK"

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_link_iconed extends $.$mol_link_iconed {
            icon() {
                return `https://favicon.yandex.net/favicon/${this.host()}?color=0,0,0,0&size=32&stub=1`;
            }
            host() {
                const base = this.$.$mol_state_arg.href();
                const url = new URL(this.uri(), base);
                return url.hostname;
            }
            title() {
                const uri = this.uri();
                const host = this.host();
                const suffix = (host ? uri.split(this.host(), 2)[1] : uri)?.replace(/^[\/\?#!]+/, '');
                return decodeURIComponent(suffix || host).replace(/^\//, ' ');
            }
            sub() {
                return [
                    ...this.host() ? [this.Icon()] : [],
                    ...this.content() ? [' ', ...this.content()] : [],
                ];
            }
        }
        __decorate([
            $mol_mem
        ], $mol_link_iconed.prototype, "icon", null);
        __decorate([
            $mol_mem
        ], $mol_link_iconed.prototype, "host", null);
        __decorate([
            $mol_mem
        ], $mol_link_iconed.prototype, "title", null);
        __decorate([
            $mol_mem
        ], $mol_link_iconed.prototype, "sub", null);
        $$.$mol_link_iconed = $mol_link_iconed;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/link/iconed/iconed.view.css", "[mol_link_iconed] {\n\talign-items: baseline;\n\tdisplay: inline-flex;\n\tpadding: var(--mol_gap_text);\n}\n\n[mol_link_iconed_icon] {\n\tbox-shadow: none;\n\theight: 1.5em;\n\twidth: 1em;\n\tflex: 0 0 auto;\n\tdisplay: inline-block;\n\talign-self: normal;\n\tvertical-align: top;\n\tborder-radius: 0;\n\tobject-fit: scale-down;\n\topacity: .75;\n}\n\n[mol_theme=\"$mol_theme_dark\"] [mol_link_iconed_icon] {\n\tfilter: var(--mol_theme_image);\n}\n");
})($ || ($ = {}));

;
	($.$mol_embed_native) = class $mol_embed_native extends ($.$mol_scroll) {
		mime(){
			return "";
		}
		title(){
			return "";
		}
		Fallback(){
			const obj = new this.$.$mol_link();
			(obj.uri) = () => ((this.uri()));
			(obj.sub) = () => ([(this.title())]);
			return obj;
		}
		uri_change(next){
			if(next !== undefined) return next;
			return null;
		}
		uri(next){
			if(next !== undefined) return next;
			return "";
		}
		dom_name(){
			return "object";
		}
		window(){
			return null;
		}
		attr(){
			return {
				...(super.attr()), 
				"data": (this.uri()), 
				"type": (this.mime()), 
				"title": (this.title())
			};
		}
		sub(){
			return [(this.Fallback())];
		}
		message(){
			return {"hashchange": (next) => (this.uri_change(next))};
		}
	};
	($mol_mem(($.$mol_embed_native.prototype), "Fallback"));
	($mol_mem(($.$mol_embed_native.prototype), "uri_change"));
	($mol_mem(($.$mol_embed_native.prototype), "uri"));


;
"use strict";
var $;
(function ($) {
    function $mol_wait_timeout_async(timeout) {
        const promise = new $mol_promise();
        const task = new this.$mol_after_timeout(timeout, () => promise.done());
        return Object.assign(promise, {
            destructor: () => task.destructor()
        });
    }
    $.$mol_wait_timeout_async = $mol_wait_timeout_async;
    function $mol_wait_timeout(timeout) {
        return this.$mol_wire_sync(this).$mol_wait_timeout_async(timeout);
    }
    $.$mol_wait_timeout = $mol_wait_timeout;
})($ || ($ = {}));

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_embed_native extends $.$mol_embed_native {
            window() {
                $mol_wire_solid();
                return $mol_wire_sync(this).load(this.dom_node_actual());
            }
            load(frame) {
                return new Promise((done, fail) => {
                    frame.onload = () => {
                        try {
                            if (frame.contentWindow.location.href === 'about:blank') {
                                return;
                            }
                        }
                        catch { }
                        done(frame.contentWindow);
                    };
                    frame.onerror = (event) => {
                        fail(typeof event === 'string' ? new Error(event) : event.error || event);
                    };
                });
            }
            uri_resource() {
                return this.uri().replace(/#.*/, '');
            }
            message_listener() {
                return new $mol_dom_listener($mol_dom_context, 'message', $mol_wire_async(this).message_receive);
            }
            sub() {
                this.window();
                return super.sub();
            }
            message_receive(event) {
                if (!event)
                    return;
                if (event.source !== this.window())
                    return;
                if (!Array.isArray(event.data))
                    return;
                this.message()[event.data[0]]?.(event);
            }
            uri_change(event) {
                this.$.$mol_wait_timeout(1000);
                this.uri(event.data[1]);
            }
            auto() {
                return [
                    this.message_listener(),
                    this.window(),
                ];
            }
        }
        __decorate([
            $mol_mem
        ], $mol_embed_native.prototype, "window", null);
        __decorate([
            $mol_mem
        ], $mol_embed_native.prototype, "uri_resource", null);
        __decorate([
            $mol_mem
        ], $mol_embed_native.prototype, "message_listener", null);
        $$.$mol_embed_native = $mol_embed_native;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/embed/native/native.view.css", "[mol_embed_native] {\n\tmax-width: 100%;\n\tmax-height: 100vh;\n\tobject-fit: cover;\n\tdisplay: flex;\n\tflex: 1 1 auto;\n\tobject-position: top left;\n\tborder-radius: var(--mol_gap_round);\n\taspect-ratio: 4/3;\n}\n");
})($ || ($ = {}));

;
	($.$mol_icon_youtube) = class $mol_icon_youtube extends ($.$mol_icon) {
		path(){
			return "M10,15L15.19,12L10,9V15M21.56,7.17C21.69,7.64 21.78,8.27 21.84,9.07C21.91,9.87 21.94,10.56 21.94,11.16L22,12C22,14.19 21.84,15.8 21.56,16.83C21.31,17.73 20.73,18.31 19.83,18.56C19.36,18.69 18.5,18.78 17.18,18.84C15.88,18.91 14.69,18.94 13.59,18.94L12,19C7.81,19 5.2,18.84 4.17,18.56C3.27,18.31 2.69,17.73 2.44,16.83C2.31,16.36 2.22,15.73 2.16,14.93C2.09,14.13 2.06,13.44 2.06,12.84L2,12C2,9.81 2.16,8.2 2.44,7.17C2.69,6.27 3.27,5.69 4.17,5.44C4.64,5.31 5.5,5.22 6.82,5.16C8.12,5.09 9.31,5.06 10.41,5.06L12,5C16.19,5 18.8,5.16 19.83,5.44C20.73,5.69 21.31,6.27 21.56,7.17Z";
		}
	};


;
"use strict";

;
	($.$mol_frame) = class $mol_frame extends ($.$mol_embed_native) {
		allow(){
			return "";
		}
		uri(next){
			if(next !== undefined) return next;
			return "about:config";
		}
		html(){
			return null;
		}
		dom_name(){
			return "iframe";
		}
		attr(){
			return {
				...(super.attr()), 
				"data": null, 
				"type": null, 
				"allow": (this.allow()), 
				"src": (this.uri()), 
				"srcdoc": (this.html())
			};
		}
		fullscreen(){
			return true;
		}
		accelerometer(){
			return true;
		}
		autoplay(){
			return true;
		}
		encription(){
			return true;
		}
		gyroscope(){
			return true;
		}
		pip(){
			return true;
		}
		clipboard_read(){
			return true;
		}
		clipboard_write(){
			return true;
		}
	};
	($mol_mem(($.$mol_frame.prototype), "uri"));


;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_frame extends $.$mol_frame {
            window() {
                return super.window();
            }
            allow() {
                return [
                    ...this.fullscreen() ? ['fullscreen'] : [],
                    ...this.accelerometer() ? ['accelerometer'] : [],
                    ...this.autoplay() ? ['autoplay'] : [],
                    ...this.encription() ? ['encrypted-media'] : [],
                    ...this.gyroscope() ? ['gyroscope'] : [],
                    ...this.pip() ? ['picture-in-picture'] : [],
                    ...this.clipboard_read() ? [`clipboard-read ${this.uri()}`] : [],
                    ...this.clipboard_write() ? [`clipboard-write ${this.uri()}`] : [],
                ].join('; ');
            }
        }
        $$.$mol_frame = $mol_frame;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_define($mol_frame, {
        border: {
            style: 'none',
        },
        maxHeight: $mol_style_unit.vh(100),
    });
})($ || ($ = {}));

;
	($.$mol_embed_service) = class $mol_embed_service extends ($.$mol_check) {
		active(next){
			if(next !== undefined) return next;
			return false;
		}
		title(){
			return "";
		}
		video_preview(){
			return "";
		}
		Image(){
			const obj = new this.$.$mol_image();
			(obj.title) = () => ((this.title()));
			(obj.uri) = () => ((this.video_preview()));
			return obj;
		}
		Hint(){
			const obj = new this.$.$mol_icon_youtube();
			return obj;
		}
		video_embed(){
			return "";
		}
		Frame(){
			const obj = new this.$.$mol_frame();
			(obj.title) = () => ((this.title()));
			(obj.uri) = () => ((this.video_embed()));
			return obj;
		}
		uri(){
			return "";
		}
		video_id(){
			return "";
		}
		checked(next){
			return (this.active(next));
		}
		sub(){
			return [
				(this.Image()), 
				(this.Hint()), 
				(this.Frame())
			];
		}
	};
	($mol_mem(($.$mol_embed_service.prototype), "active"));
	($mol_mem(($.$mol_embed_service.prototype), "Image"));
	($mol_mem(($.$mol_embed_service.prototype), "Hint"));
	($mol_mem(($.$mol_embed_service.prototype), "Frame"));


;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_embed_service extends $.$mol_embed_service {
            sub() {
                return this.active()
                    ? [this.Frame()]
                    : [this.Image(), this.Hint()];
            }
        }
        __decorate([
            $mol_mem
        ], $mol_embed_service.prototype, "sub", null);
        $$.$mol_embed_service = $mol_embed_service;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/embed/service/service.view.css", "[mol_embed_service] {\n\tpadding: 0;\n\tmax-width: 100%;\n}\n\n[mol_embed_service_image] {\n\tflex: auto 1 1;\n\twidth: 100vw;\n}\n\n[mol_embed_service_frame] {\n\twidth: 100vw;\n}\n\n[mol_embed_service_hint] {\n\tposition: absolute;\n    left: 50%;\n    top: 50%;\n    width: 50%;\n    height: 50%;\n    opacity: 0.3;\n    transform: translate(-50%, -50%);\n}\n\n[mol_embed_service]:hover [mol_embed_service_hint] {\n\topacity: .6;\n}\n");
})($ || ($ = {}));

;
	($.$mol_embed_youtube) = class $mol_embed_youtube extends ($.$mol_embed_service) {};


;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_embed_youtube extends $.$mol_embed_youtube {
            video_embed() {
                return `https://www.youtube.com/embed/${encodeURIComponent(this.video_id())}?autoplay=1&loop=1`;
            }
            video_id() {
                return this.uri().match(/^https\:\/\/www\.youtube\.com\/(?:embed\/|shorts\/|watch\?v=)([^\/&?#]+)/)?.[1]
                    ?? this.uri().match(/^https\:\/\/youtu\.be\/([^\/&?#]+)/)?.[1]
                    ?? 'about:blank';
            }
            video_preview() {
                return `https://i.ytimg.com/vi/${this.video_id()}/sddefault.jpg`;
            }
        }
        __decorate([
            $mol_mem
        ], $mol_embed_youtube.prototype, "video_embed", null);
        __decorate([
            $mol_mem
        ], $mol_embed_youtube.prototype, "video_id", null);
        __decorate([
            $mol_mem
        ], $mol_embed_youtube.prototype, "video_preview", null);
        $$.$mol_embed_youtube = $mol_embed_youtube;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
	($.$mol_embed_rutube) = class $mol_embed_rutube extends ($.$mol_embed_service) {};


;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_embed_rutube extends $.$mol_embed_rutube {
            video_embed() {
                return `https://rutube.ru/play/embed/${encodeURIComponent(this.video_id())}`;
            }
            video_id() {
                return this.uri().match(/^https:\/\/rutube.ru\/video\/([^\/&?#]+)/)?.[1] ?? 'about:blank';
            }
            video_preview() {
                return `https://rutube.ru/api/video/${this.video_id()}/thumbnail/?redirect=1`;
            }
        }
        __decorate([
            $mol_mem
        ], $mol_embed_rutube.prototype, "video_embed", null);
        __decorate([
            $mol_mem
        ], $mol_embed_rutube.prototype, "video_id", null);
        __decorate([
            $mol_mem
        ], $mol_embed_rutube.prototype, "video_preview", null);
        $$.$mol_embed_rutube = $mol_embed_rutube;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
	($.$mol_embed_any) = class $mol_embed_any extends ($.$mol_view) {
		title(){
			return "";
		}
		uri(){
			return "";
		}
		Image(){
			const obj = new this.$.$mol_image();
			(obj.title) = () => ((this.title()));
			(obj.uri) = () => ((this.uri()));
			return obj;
		}
		Object(){
			const obj = new this.$.$mol_embed_native();
			(obj.title) = () => ((this.title()));
			(obj.uri) = () => ((this.uri()));
			return obj;
		}
		Youtube(){
			const obj = new this.$.$mol_embed_youtube();
			(obj.title) = () => ((this.title()));
			(obj.uri) = () => ((this.uri()));
			return obj;
		}
		Rutube(){
			const obj = new this.$.$mol_embed_rutube();
			(obj.title) = () => ((this.title()));
			(obj.uri) = () => ((this.uri()));
			return obj;
		}
	};
	($mol_mem(($.$mol_embed_any.prototype), "Image"));
	($mol_mem(($.$mol_embed_any.prototype), "Object"));
	($mol_mem(($.$mol_embed_any.prototype), "Youtube"));
	($mol_mem(($.$mol_embed_any.prototype), "Rutube"));


;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_embed_any extends $.$mol_embed_any {
            type() {
                try {
                    const uri = this.uri();
                    if (/\b(png|gif|jpg|jpeg|jfif|webp|svg)\b/.test(uri))
                        return 'image';
                    if (/^https:\/\/www\.youtube\.com\//.test(uri))
                        return 'youtube';
                    if (/^https:\/\/youtu\.be\//.test(uri))
                        return 'youtube';
                    if (/^https:\/\/rutube\.ru\//.test(uri))
                        return 'rutube';
                }
                catch (error) {
                    $mol_fail_log(error);
                    return 'image';
                }
                return 'object';
            }
            sub() {
                switch (this.type()) {
                    case 'image': return [this.Image()];
                    case 'youtube': return [this.Youtube()];
                    case 'rutube': return [this.Rutube()];
                    default: return [this.Object()];
                }
            }
        }
        __decorate([
            $mol_mem
        ], $mol_embed_any.prototype, "type", null);
        __decorate([
            $mol_mem
        ], $mol_embed_any.prototype, "sub", null);
        $$.$mol_embed_any = $mol_embed_any;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
	($.$mol_expander) = class $mol_expander extends ($.$mol_list) {
		expanded(next){
			if(next !== undefined) return next;
			return false;
		}
		expandable(){
			return true;
		}
		label(){
			return [(this.title())];
		}
		Trigger(){
			const obj = new this.$.$mol_check_expand();
			(obj.checked) = (next) => ((this.expanded(next)));
			(obj.expandable) = () => ((this.expandable()));
			(obj.label) = () => ((this.label()));
			return obj;
		}
		Tools(){
			return null;
		}
		Label(){
			const obj = new this.$.$mol_view();
			(obj.sub) = () => ([(this.Trigger()), (this.Tools())]);
			return obj;
		}
		content(){
			return [];
		}
		Content(){
			const obj = new this.$.$mol_list();
			(obj.rows) = () => ((this.content()));
			return obj;
		}
		rows(){
			return [(this.Label()), (this.Content())];
		}
	};
	($mol_mem(($.$mol_expander.prototype), "expanded"));
	($mol_mem(($.$mol_expander.prototype), "Trigger"));
	($mol_mem(($.$mol_expander.prototype), "Label"));
	($mol_mem(($.$mol_expander.prototype), "Content"));


;
var $node = $node || {} ; $node[ "/mol/expander/readme.md" ] = "IyAkbW9sX2V4cGFuZGVyCgpDb21wb25lbnQgd2hpY2ggZXhwYW5kcyBhbnkgY29udGVudCBvbiB0aXRsZSBjbGljay4KCiMjIFtPbmxpbmUgZGVtb10oaHR0cHM6Ly9tb2wuaHlvby5ydS8jIXNlY3Rpb249ZGVtb3MvcmVhZG1lL2RlbW89bW9sX2V4cGFuZGVyX2RlbW8pCgojIyBVc2FnZSBleGFtcGxlCgpgYGAKPD0gU3BvaWxlciAkbW9sX2V4cGFuZGVyCglsYWJlbCAvIFxNdXJkZXIgaXMuLgoJY29udGVudCAvIFxtYWpvcmRvbW8KCVRvb2xzIDw9IFNwb2lsZXJfdG9vbHMgJG1vbF92aWV3CgkJc3ViIC8KCQkJPD0gTG9ja19pY29uICRtb2xfaWNvbl9sb2NrCmBgYAoKIyMgUHJvcGVydGllcwoKKipgbGFiZWwoKTogW11gKiogIAoKUmV0dXJucyBidXR0b24gY29udGVudC4gCgoqKmBjb250ZW50KCk6IGFueWAqKiAgCgpSZXR1cm5zIGV4cGFuZGFibGUgY29udGVudC4KCioqYGV4cGFuZGVkKCBuZXh0PyA6IGJvb2xlYW4gKTogYm9vbGVhbmAqKgoKUmV0dXJucyBzaG93aW5nIHN0YXRlIG9mIGNvbnRlbnQuCgoqKmBUb29scygpOiAkbW9sX3ZpZXdgKioKClRvIGRpc3BsYXkgYWRkaXRpb25hbCBpdGVtcwo="

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_expander extends $.$mol_expander {
            rows() {
                return [
                    this.Label(),
                    ...this.expanded() ? [this.Content()] : []
                ];
            }
            expandable() {
                return this.content().length > 0;
            }
        }
        __decorate([
            $mol_mem
        ], $mol_expander.prototype, "rows", null);
        $$.$mol_expander = $mol_expander;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/expander/expander.view.css", "[mol_expander] {\n\tflex-direction: column;\n}\n\n[mol_expander_label] {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tborder-radius: var(--mol_gap_round);\n}\n\n[mol_expander_trigger] {\n\tflex: auto;\n\tposition: relative;\n}\n");
})($ || ($ = {}));

;
	($.$mol_text) = class $mol_text extends ($.$mol_list) {
		auto_scroll(){
			return null;
		}
		block_content(id){
			return [];
		}
		uri_resolve(id){
			return "";
		}
		quote_text(id){
			return "";
		}
		highlight(){
			return "";
		}
		list_type(id){
			return "-";
		}
		list_text(id){
			return "";
		}
		header_level(id){
			return 1;
		}
		header_arg(id){
			return {};
		}
		pre_text(id){
			return "";
		}
		code_sidebar_showed(){
			return true;
		}
		pre_sidebar_showed(){
			return (this.code_sidebar_showed());
		}
		table_head_cells(id){
			return [];
		}
		table_rows(id){
			return [];
		}
		table_cells(id){
			return [];
		}
		table_cell_text(id){
			return "";
		}
		grid_rows(id){
			return [];
		}
		grid_cells(id){
			return [];
		}
		grid_cell_text(id){
			return "";
		}
		line_text(id){
			return "";
		}
		line_type(id){
			return "";
		}
		line_content(id){
			return [];
		}
		code_syntax(){
			return null;
		}
		link_uri(id){
			return "";
		}
		link_host(id){
			return "";
		}
		spoiler_label(id){
			return "";
		}
		Spoiler_label(id){
			const obj = new this.$.$mol_text();
			(obj.text) = () => ((this.spoiler_label(id)));
			return obj;
		}
		spoiler_content(id){
			return "";
		}
		Spoiler_content(id){
			const obj = new this.$.$mol_text();
			(obj.text) = () => ((this.spoiler_content(id)));
			return obj;
		}
		uri_base(){
			return "";
		}
		text(){
			return "";
		}
		param(){
			return "";
		}
		flow_tokens(){
			return [];
		}
		block_text(id){
			return "";
		}
		auto(){
			return [(this.auto_scroll())];
		}
		Paragraph(id){
			const obj = new this.$.$mol_paragraph();
			(obj.sub) = () => ((this.block_content(id)));
			return obj;
		}
		Quote(id){
			const obj = new this.$.$mol_text();
			(obj.uri_resolve) = (id) => ((this.uri_resolve(id)));
			(obj.text) = () => ((this.quote_text(id)));
			(obj.highlight) = () => ((this.highlight()));
			(obj.auto_scroll) = () => (null);
			return obj;
		}
		List(id){
			const obj = new this.$.$mol_text_list();
			(obj.uri_resolve) = (id) => ((this.uri_resolve(id)));
			(obj.type) = () => ((this.list_type(id)));
			(obj.text) = () => ((this.list_text(id)));
			(obj.highlight) = () => ((this.highlight()));
			return obj;
		}
		item_index(id){
			return 0;
		}
		Header(id){
			const obj = new this.$.$mol_text_header();
			(obj.minimal_height) = () => (40);
			(obj.level) = () => ((this.header_level(id)));
			(obj.content) = () => ((this.block_content(id)));
			(obj.arg) = () => ((this.header_arg(id)));
			return obj;
		}
		Pre(id){
			const obj = new this.$.$mol_text_code();
			(obj.text) = () => ((this.pre_text(id)));
			(obj.highlight) = () => ((this.highlight()));
			(obj.uri_resolve) = (id) => ((this.uri_resolve(id)));
			(obj.sidebar_showed) = () => ((this.pre_sidebar_showed()));
			return obj;
		}
		Cut(id){
			const obj = new this.$.$mol_view();
			(obj.dom_name) = () => ("hr");
			return obj;
		}
		Table(id){
			const obj = new this.$.$mol_grid();
			(obj.head_cells) = () => ((this.table_head_cells(id)));
			(obj.rows) = () => ((this.table_rows(id)));
			return obj;
		}
		Table_row(id){
			const obj = new this.$.$mol_grid_row();
			(obj.cells) = () => ((this.table_cells(id)));
			return obj;
		}
		Table_cell(id){
			const obj = new this.$.$mol_text();
			(obj.auto_scroll) = () => (null);
			(obj.highlight) = () => ((this.highlight()));
			(obj.uri_resolve) = (id) => ((this.uri_resolve(id)));
			(obj.text) = () => ((this.table_cell_text(id)));
			return obj;
		}
		Grid(id){
			const obj = new this.$.$mol_grid();
			(obj.rows) = () => ((this.grid_rows(id)));
			return obj;
		}
		Grid_row(id){
			const obj = new this.$.$mol_grid_row();
			(obj.cells) = () => ((this.grid_cells(id)));
			return obj;
		}
		Grid_cell(id){
			const obj = new this.$.$mol_text();
			(obj.auto_scroll) = () => (null);
			(obj.highlight) = () => ((this.highlight()));
			(obj.uri_resolve) = (id) => ((this.uri_resolve(id)));
			(obj.text) = () => ((this.grid_cell_text(id)));
			return obj;
		}
		String(id){
			const obj = new this.$.$mol_dimmer();
			(obj.dom_name) = () => ("span");
			(obj.needle) = () => ((this.highlight()));
			(obj.haystack) = () => ((this.line_text(id)));
			return obj;
		}
		Span(id){
			const obj = new this.$.$mol_text_span();
			(obj.dom_name) = () => ("span");
			(obj.type) = () => ((this.line_type(id)));
			(obj.sub) = () => ((this.line_content(id)));
			return obj;
		}
		Code_line(id){
			const obj = new this.$.$mol_text_code_line();
			(obj.numb_showed) = () => (false);
			(obj.highlight) = () => ((this.highlight()));
			(obj.text) = () => ((this.line_text(id)));
			(obj.uri_resolve) = (id) => ((this.uri_resolve(id)));
			(obj.syntax) = () => ((this.code_syntax()));
			return obj;
		}
		Link(id){
			const obj = new this.$.$mol_link_iconed();
			(obj.uri) = () => ((this.link_uri(id)));
			(obj.content) = () => ((this.line_content(id)));
			return obj;
		}
		Link_http(id){
			const obj = new this.$.$mol_link_iconed();
			(obj.uri) = () => ((this.link_uri(id)));
			(obj.content) = () => ([(this.link_host(id))]);
			return obj;
		}
		Embed(id){
			const obj = new this.$.$mol_embed_any();
			(obj.uri) = () => ((this.link_uri(id)));
			(obj.title) = () => ((this.line_text(id)));
			return obj;
		}
		Spoiler(id){
			const obj = new this.$.$mol_expander();
			(obj.label) = () => ([(this.Spoiler_label(id))]);
			(obj.content) = () => ([(this.Spoiler_content(id))]);
			return obj;
		}
	};
	($mol_mem_key(($.$mol_text.prototype), "Spoiler_label"));
	($mol_mem_key(($.$mol_text.prototype), "Spoiler_content"));
	($mol_mem_key(($.$mol_text.prototype), "Paragraph"));
	($mol_mem_key(($.$mol_text.prototype), "Quote"));
	($mol_mem_key(($.$mol_text.prototype), "List"));
	($mol_mem_key(($.$mol_text.prototype), "Header"));
	($mol_mem_key(($.$mol_text.prototype), "Pre"));
	($mol_mem_key(($.$mol_text.prototype), "Cut"));
	($mol_mem_key(($.$mol_text.prototype), "Table"));
	($mol_mem_key(($.$mol_text.prototype), "Table_row"));
	($mol_mem_key(($.$mol_text.prototype), "Table_cell"));
	($mol_mem_key(($.$mol_text.prototype), "Grid"));
	($mol_mem_key(($.$mol_text.prototype), "Grid_row"));
	($mol_mem_key(($.$mol_text.prototype), "Grid_cell"));
	($mol_mem_key(($.$mol_text.prototype), "String"));
	($mol_mem_key(($.$mol_text.prototype), "Span"));
	($mol_mem_key(($.$mol_text.prototype), "Code_line"));
	($mol_mem_key(($.$mol_text.prototype), "Link"));
	($mol_mem_key(($.$mol_text.prototype), "Link_http"));
	($mol_mem_key(($.$mol_text.prototype), "Embed"));
	($mol_mem_key(($.$mol_text.prototype), "Spoiler"));
	($.$mol_text_header) = class $mol_text_header extends ($.$mol_paragraph) {
		arg(){
			return {};
		}
		content(){
			return [];
		}
		Link(){
			const obj = new this.$.$mol_link();
			(obj.arg) = () => ((this.arg()));
			(obj.hint) = () => ((this.$.$mol_locale.text("$mol_text_header_Link_hint")));
			(obj.sub) = () => ((this.content()));
			return obj;
		}
		level(){
			return 1;
		}
		sub(){
			return [(this.Link())];
		}
	};
	($mol_mem(($.$mol_text_header.prototype), "Link"));
	($.$mol_text_span) = class $mol_text_span extends ($.$mol_paragraph) {
		type(){
			return "";
		}
		dom_name(){
			return "span";
		}
		attr(){
			return {...(super.attr()), "mol_text_type": (this.type())};
		}
	};


;
var $node = $node || {} ; $node[ "/mol/text/text/readme.md" ] = "IyAkbW9sX3RleHQKCk1hcmtkb3duIHZpc3VhbGl6ZXIuCgojIyBbT25saW5lIGRlbW9dKGh0dHBzOi8vbW9sLmh5b28ucnUvIyFzZWN0aW9uPWRlbW9zL3JlYWRtZS9kZW1vPW1vbF90ZXh0X2RlbW8pCgojIyBVc2FnZSBleGFtcGxlCgpgYGB0cmVlCjw9IERlc2NyaXB0aW9uICRtb2xfdGV4dAoJaGlnaGxpZ2h0IDw9IHNlYXJjaCBcbWFtCgl0ZXh0IDw9IGRlc2NyaXB0aW9uIFwKCQlcIyBRdWljayBzdGFydAoJCVwKCQlcIyMgU3RhcnQgZGV2IHNlcnZlcgoJCVwJZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9uaW4tamluL21hbS5naXQKCQlcCWNkIG1hbQoJCVwJbnBtIGluc3RhbGwKCQlcCW5wbSBzdGFydApgYGAK"

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_text extends $.$mol_text {
            flow_tokens() {
                const tokens = [];
                this.$.$mol_syntax2_md_flow.tokenize(this.text(), (name, found, chunks) => tokens.push({ name, found, chunks }));
                return tokens;
            }
            block_type(index) {
                return this.flow_tokens()[index].name;
            }
            rows() {
                return this.flow_tokens().map(({ name }, index) => {
                    switch (name) {
                        case 'quote': return this.Quote(index);
                        case 'spoiler': return this.Spoiler(index);
                        case 'header': return this.Header(index);
                        case 'list': return this.List(index);
                        case 'code': return this.Pre(index);
                        case 'code-indent': return this.Pre(index);
                        case 'table': return this.Table(index);
                        case 'grid': return this.Grid(index);
                        case 'cut': return this.Cut(index);
                        default: return this.Paragraph(index);
                    }
                });
            }
            param() {
                return this.toString().replace(/^.*?[\)>]\./, '').replace(/[(<>)]/g, '');
            }
            header_level(index) {
                return this.flow_tokens()[index].chunks[0].length;
            }
            header_arg(index) {
                return {
                    [this.param()]: this.block_text(index)
                };
            }
            list_type(index) {
                return this.flow_tokens()[index].chunks[1] ?? '';
            }
            item_index(index) {
                return this.flow_tokens().slice(0, index).filter(token => token.name === 'block').length + 1;
            }
            pre_text(index) {
                const token = this.flow_tokens()[index];
                return (token.chunks[2] ?? token.chunks[0].replace(/^(\t| (?:\+\+|--|\*\*|  ) )/gm, '')).replace(/[\n\r]*$/, '');
            }
            quote_text(index) {
                return this.flow_tokens()[index].chunks[0].replace(/^[>"] /mg, '');
            }
            list_text(index) {
                return this.flow_tokens()[index].chunks[0].replace(/^([-*+]|(?:\d+[\.\)])+) ?/mg, '').replace(/^  ?/mg, '');
            }
            cell_content(indexBlock) {
                return this.flow_tokens()[indexBlock].chunks[0]
                    .split(/\r?\n/g)
                    .filter(row => row && !/\|--/.test(row))
                    .map((row, rowId) => {
                    return row.split(/\|/g)
                        .filter(cell => cell)
                        .map((cell, cellId) => cell.trim());
                });
            }
            table_rows(blockId) {
                return this.cell_content(blockId)
                    .slice(1)
                    .map((row, rowId) => this.Table_row({ block: blockId, row: rowId + 1 }));
            }
            table_head_cells(blockId) {
                return this.cell_content(blockId)[0]
                    .map((cell, cellId) => this.Table_cell({ block: blockId, row: 0, cell: cellId }));
            }
            table_cells(id) {
                return this.cell_content(id.block)[id.row]
                    .map((cell, cellId) => this.Table_cell({ block: id.block, row: id.row, cell: cellId }));
            }
            table_cell_text(id) {
                return this.cell_content(id.block)[id.row][id.cell];
            }
            grid_content(indexBlock) {
                return [...this.flow_tokens()[indexBlock].chunks[0].match(/(?:^! .*?$\r?\n?)+(?:^ +! .*?$\r?\n?)*/gm)]
                    .map((row, rowId) => {
                    const cells = [];
                    for (const line of row.trim().split(/\r?\n/)) {
                        const [_, indent, content] = /^( *)! (.*)/.exec(line);
                        const col = Math.ceil(indent.length / 2);
                        cells[col] = (cells[col] ? cells[col] + '\n' : '') + content;
                    }
                    return cells;
                });
            }
            grid_rows(blockId) {
                return this.grid_content(blockId)
                    .map((row, rowId) => this.Grid_row({ block: blockId, row: rowId }));
            }
            grid_cells(id) {
                return this.grid_content(id.block)[id.row]
                    .map((cell, cellId) => this.Grid_cell({ block: id.block, row: id.row, cell: cellId }));
            }
            grid_cell_text(id) {
                return this.grid_content(id.block)[id.row][id.cell];
            }
            uri_base() {
                return $mol_dom_context.document.location.href;
            }
            uri_base_abs() {
                return new URL(this.uri_base(), $mol_dom_context.document.location.href);
            }
            uri_resolve(uri) {
                if (/^(\w+script+:)+/.test(uri))
                    return null;
                if (/^#\!/.test(uri)) {
                    const params = {};
                    for (const chunk of uri.slice(2).split(this.$.$mol_state_arg.separator)) {
                        if (!chunk)
                            continue;
                        const vals = chunk.split('=').map(decodeURIComponent);
                        params[vals.shift()] = vals.join('=');
                    }
                    return this.$.$mol_state_arg.link(params);
                }
                try {
                    const url = new URL(uri, this.uri_base_abs());
                    return url.toString();
                }
                catch (error) {
                    $mol_fail_log(error);
                    return null;
                }
            }
            code_syntax() {
                return this.$.$mol_syntax2_md_code;
            }
            block_text(index) {
                const token = this.flow_tokens()[index];
                switch (token.name) {
                    case 'header': return token.chunks[2];
                    default: return token.chunks[0];
                }
            }
            block_content(index) {
                return this.line_content([index]);
            }
            line_tokens(path) {
                const tokens = [];
                this.$.$mol_syntax2_md_line.tokenize(this.line_text(path), (name, found, chunks) => tokens.push({ name, found, chunks }));
                return tokens;
            }
            line_token(path) {
                const tokens = this.line_tokens(path.slice(0, path.length - 1));
                return tokens[path[path.length - 1]];
            }
            line_type(path) {
                return this.line_token(path).name;
            }
            line_text(path) {
                if (path.length === 1)
                    return this.block_text(path[0]);
                const { name, found, chunks } = this.line_token(path);
                switch (name) {
                    case 'link': return chunks[0] || chunks[1].replace(/^.*?\/\/|\/.*$/g, '');
                    case 'text-link': return chunks[0] || chunks[1].replace(/^.*?\/\/|\/.*$/g, '');
                    default: return (chunks[0] || chunks[1] || chunks[2]) ?? found;
                }
            }
            line_content(path) {
                return this.line_tokens(path).map(({ name, chunks }, index) => {
                    const path2 = [...path, index];
                    switch (name) {
                        case 'embed': return this.Embed(path2);
                        case 'link': return this.Link(path2);
                        case 'text-link-http': return this.Link_http(path2);
                        case 'text-link': return this.Link(path2);
                        case 'image-link': return this.Embed(path2);
                        case 'code': return this.Code_line(path2);
                        case '': return this.String(path2);
                        default: return this.Span(path2);
                    }
                });
            }
            link_uri(path) {
                const token = this.line_token(path);
                const uri = this.uri_resolve(token.chunks[1] ?? token.found);
                if (!uri)
                    throw new Error('Bad link');
                return uri;
            }
            link_host(path) {
                return this.link_uri(path).replace(/^.*?\/\/|\/.*$/g, '');
            }
            auto_scroll() {
                for (const [index, token] of this.flow_tokens().entries()) {
                    if (token.name !== 'header')
                        continue;
                    const header = this.Header(index);
                    if (!header.Link().current())
                        continue;
                    new $mol_after_tick(() => this.ensure_visible(header));
                }
            }
            spoiler_rows(index) {
                return this.flow_tokens()[index].chunks[0].replace(/^[\?] /mg, '').split('\n');
            }
            spoiler_label(index) {
                return this.spoiler_rows(index)[0];
            }
            spoiler_content(index) {
                return this.spoiler_rows(index).slice(1).join('\n');
            }
        }
        __decorate([
            $mol_mem
        ], $mol_text.prototype, "flow_tokens", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "block_type", null);
        __decorate([
            $mol_mem
        ], $mol_text.prototype, "rows", null);
        __decorate([
            $mol_mem
        ], $mol_text.prototype, "param", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "header_level", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "header_arg", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "pre_text", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "quote_text", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "list_text", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "cell_content", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "table_rows", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "table_head_cells", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "table_cells", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "table_cell_text", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "grid_content", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "grid_rows", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "grid_cells", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "grid_cell_text", null);
        __decorate([
            $mol_mem
        ], $mol_text.prototype, "uri_base_abs", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "uri_resolve", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "block_text", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "line_tokens", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "line_token", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "line_type", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "line_text", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "line_content", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "link_uri", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "link_host", null);
        __decorate([
            $mol_mem
        ], $mol_text.prototype, "auto_scroll", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "spoiler_rows", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "spoiler_label", null);
        __decorate([
            $mol_mem_key
        ], $mol_text.prototype, "spoiler_content", null);
        $$.$mol_text = $mol_text;
        class $mol_text_header extends $.$mol_text_header {
            dom_name() {
                return 'h' + this.level();
            }
        }
        $$.$mol_text_header = $mol_text_header;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/text/text/text.view.css", "[mol_text] {\n\tline-height: 1.5em;\n\tbox-sizing: border-box;\n\tborder-radius: var(--mol_gap_round);\n\twhite-space: pre-line;\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 0 0 auto;\n\ttab-size: 4;\n}\n\n[mol_text_paragraph] {\n\tpadding: var(--mol_gap_text);\n\toverflow: auto;\n\toverflow-x: overlay;\n\tmax-width: 100%;\n\tdisplay: block;\n\tmax-width: 60rem;\n\tbreak-inside: avoid;\n}\n\n[mol_text_spoiler_label_paragraph] {\n\tpadding: 0;\n}\n\n[mol_text_span] {\n\tdisplay: inline;\n}\n\n[mol_text_string] {\n\tdisplay: inline;\n\tflex: 0 1 auto;\n\twhite-space: normal;\n}\n\n[mol_text_quote] {\n\tmargin: var(--mol_gap_block);\n\tpadding: var(--mol_gap_block);\n\tbackground: var(--mol_theme_card);\n\tbox-shadow: 0 0 0 1px var(--mol_theme_back);\n\tbreak-inside: avoid;\n}\n\n[mol_text_header] {\n\tdisplay: block;\n\ttext-shadow: 0 0;\n\tfont-weight: normal;\n\tbreak-after: avoid;\n}\n\n* + [mol_text_header] {\n\tmargin-top: 0.75rem;\n}\n\nh1[mol_text_header] {\n\tfont-size: 1.5rem;\n}\n\nh2[mol_text_header] {\n\tfont-size: 1.5rem;\n\tfont-style: italic;\n}\n\nh3[mol_text_header] {\n\tfont-size: 1.25rem;\n}\n\nh4[mol_text_header] {\n\tfont-size: 1.25em;\n\tfont-style: italic;\n}\n\nh5[mol_text_header] {\n\tfont-size: 1rem;\n}\n\nh6[mol_text_header] {\n\tfont-size: 1rem;\n\tfont-style: italic;\n}\n\n[mol_text_header_link] {\n\tcolor: inherit;\n}\n\n[mol_text_table] {\n\tbreak-inside: avoid;\n}\n\n[mol_text_table_cell] {\n\twidth: auto;\n\tdisplay: table-cell;\n\tvertical-align: baseline;\n\tpadding: 0;\n\tborder-radius: 0;\n}\n\n[mol_text_grid] {\n\tbreak-inside: avoid;\n}\n\n[mol_text_grid_cell] {\n\twidth: auto;\n\tdisplay: table-cell;\n\tvertical-align: top;\n\tpadding: 0;\n\tborder-radius: 0;\n}\n\n[mol_text_cut] {\n\tborder: none;\n\twidth: 100%;\n\tbox-shadow: 0 0 0 1px var(--mol_theme_line);\n}\n\n[mol_text_link_http],\n[mol_text_link] {\n\tpadding: 0;\n\tdisplay: inline;\n\twhite-space: nowrap;\n}\n\n[mol_text_link_icon] + [mol_text_embed] {\n\tmargin-left: -1.5rem;\n}\n\n[mol_text_embed_youtube] {\n\tdisplay: inline;\n}\n\n[mol_text_embed_youtube_image],\n[mol_text_embed_youtube_frame],\n[mol_text_embed_object] {\n\tobject-fit: contain;\n\tobject-position: center;\n\twidth: 100vw;\n\tmax-height: calc( 100vh - 6rem );\n}\n[mol_text_embed_object_fallback] {\n\tpadding: 0;\n}\n[mol_text_embed_image] {\n\tobject-fit: contain;\n\tobject-position: center;\n\tdisplay: inline;\n\t/* max-height: calc( 100vh - 6rem ); */\n\tvertical-align: top;\n}\n\n[mol_text_pre] {\n\twhite-space: pre;\n\toverflow-x: auto;\n\toverflow-x: overlay;\n\ttab-size: 2;\n\tbreak-inside: avoid;\n}\n\n[mol_text_code_line] {\n\tdisplay: inline-block;\n}\n\n[mol_text_type=\"strong\"] {\n\ttext-shadow: 0 0;\n\tfilter: contrast(1.5);\n}\n\n[mol_text_type=\"emphasis\"] {\n\tfont-style: italic;\n}\n\n[mol_text_type=\"insert\"] {\n\tcolor: var(--mol_theme_special);\n}\n\n[mol_text_type=\"delete\"] {\n\tcolor: var(--mol_theme_shade);\n}\n\n[mol_text_type=\"remark\"] {\n\tcolor: var(--mol_theme_shade);\n}\n\n[mol_text_type=\"quote\"] {\n\tfont-style: italic;\n}\n");
})($ || ($ = {}));

;
	($.$mol_text_list) = class $mol_text_list extends ($.$mol_text) {
		type(){
			return "";
		}
		auto_scroll(){
			return null;
		}
		attr(){
			return {...(super.attr()), "mol_text_list_type": (this.type())};
		}
		Paragraph(id){
			const obj = new this.$.$mol_text_list_item();
			(obj.index) = () => ((this.item_index(id)));
			(obj.sub) = () => ((this.block_content(id)));
			return obj;
		}
	};
	($mol_mem_key(($.$mol_text_list.prototype), "Paragraph"));
	($.$mol_text_list_item) = class $mol_text_list_item extends ($.$mol_paragraph) {
		index(){
			return 0;
		}
		attr(){
			return {...(super.attr()), "mol_text_list_item_index": (this.index())};
		}
	};


;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/text/list/list.view.css", "[mol_text_list] {\r\n\tpadding-left: 1.75rem;\r\n}\r\n\r\n[mol_text_list_item] {\r\n\tcontain: none;\r\n\tdisplay: list-item;\r\n}\r\n\r\n[mol_text_list_item]::before {\r\n\tcontent: attr( mol_text_list_item_index ) \".\";\r\n\twidth: 1.25rem;\r\n\tdisplay: inline-block;\r\n\tposition: absolute;\r\n\tmargin-left: -1.75rem;\r\n\ttext-align: end;\r\n}\r\n\r\n[mol_text_list_type=\"-\"] > [mol_text_list_item]::before,\r\n[mol_text_list_type=\"*\"] > [mol_text_list_item]::before {\r\n\tcontent: \"•\";\r\n}\r\n");
})($ || ($ = {}));

;
"use strict";

;
	($.$hyper_handbook) = class $hyper_handbook extends ($.$mol_page) {
		seo_description(){
			const obj = new this.$.$mol_meta_description();
			(obj.content) = () => ("$mol_button | Рудока Хэндбук по молу");
			return obj;
		}
		Button_page(){
			const obj = new this.$.$hyper_handbook_text();
			(obj.url) = () => ("#fetch/hyper/handbook/wiki/$mol_button.mt");
			return obj;
		}
		title(){
			return "Рудока (Handbook) по фремворку $mol";
		}
		head(){
			return [(this.seo_description())];
		}
		body(){
			return [(this.Button_page())];
		}
	};
	($mol_mem(($.$hyper_handbook.prototype), "seo_description"));
	($mol_mem(($.$hyper_handbook.prototype), "Button_page"));
	($.$hyper_handbook_text) = class $hyper_handbook_text extends ($.$mol_text) {
		url(){
			return "";
		}
		text(){
			return (this.url());
		}
	};


;
	($.$hyper_handbook_scenes) = class $hyper_handbook_scenes extends ($.$mol_page) {
		scenes(){
			return [];
		}
		body(){
			return (this.scenes());
		}
		Head(){
			return null;
		}
	};


;
"use strict";

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("hyper/handbook/scenes/scenes.view.tree.css", "[hyper_handbook_scenes_body_content] {\n\tpadding: 0;\n\tmargin: 0;\n}\n");
})($ || ($ = {}));

;
	($.$mol_button_major) = class $mol_button_major extends ($.$mol_button_minor) {
		theme(){
			return "$mol_theme_base";
		}
	};


;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/button/major/major.view.css", "[mol_button_major] {\n\tbackground-color: var(--mol_theme_back);\n\tcolor: var(--mol_theme_text);\n}\n");
})($ || ($ = {}));

;
"use strict";

;
	($.$hyper_handbook_scene) = class $hyper_handbook_scene extends ($.$mol_view) {
		scene(){
			return null;
		}
		sub(){
			return [(this.scene())];
		}
	};


;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $hyper_handbook_scene extends $.$hyper_handbook_scene {
            sub() {
                let sub = super.sub();
                const need_filter = this.$.$mol_state_arg.value("filter");
                if (need_filter == "false") {
                    return sub;
                }
                let id = this.$.$mol_state_arg.value("scene");
                return sub.filter(scene => {
                    return Object.keys(scene.attr_static()).includes(id);
                });
            }
        }
        $$.$hyper_handbook_scene = $hyper_handbook_scene;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
	($.$mol_icon_plus) = class $mol_icon_plus extends ($.$mol_icon) {
		path(){
			return "M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z";
		}
	};


;
"use strict";

;
"use strict";

;
"use strict";
var $;
(function ($) {
    $.$mol_jsx_prefix = '';
    $.$mol_jsx_crumbs = '';
    $.$mol_jsx_booked = null;
    $.$mol_jsx_document = {
        getElementById: () => null,
        createElementNS: (space, name) => $mol_dom_context.document.createElementNS(space, name),
        createDocumentFragment: () => $mol_dom_context.document.createDocumentFragment(),
    };
    $.$mol_jsx_frag = '';
    function $mol_jsx(Elem, props, ...childNodes) {
        const id = props && props.id || '';
        const guid = id ? $.$mol_jsx_prefix ? $.$mol_jsx_prefix + '/' + id : id : $.$mol_jsx_prefix;
        const crumbs_self = id ? $.$mol_jsx_crumbs.replace(/(\S+)/g, `$1_${id.replace(/\/.*/i, '')}`) : $.$mol_jsx_crumbs;
        if (Elem && $.$mol_jsx_booked) {
            if ($.$mol_jsx_booked.has(id)) {
                $mol_fail(new Error(`JSX already has tag with id ${JSON.stringify(guid)}`));
            }
            else {
                $.$mol_jsx_booked.add(id);
            }
        }
        let node = guid ? $.$mol_jsx_document.getElementById(guid) : null;
        if ($.$mol_jsx_prefix) {
            const prefix_ext = $.$mol_jsx_prefix;
            const booked_ext = $.$mol_jsx_booked;
            const crumbs_ext = $.$mol_jsx_crumbs;
            for (const field in props) {
                const func = props[field];
                if (typeof func !== 'function')
                    continue;
                const wrapper = function (...args) {
                    const prefix = $.$mol_jsx_prefix;
                    const booked = $.$mol_jsx_booked;
                    const crumbs = $.$mol_jsx_crumbs;
                    try {
                        $.$mol_jsx_prefix = prefix_ext;
                        $.$mol_jsx_booked = booked_ext;
                        $.$mol_jsx_crumbs = crumbs_ext;
                        return func.call(this, ...args);
                    }
                    finally {
                        $.$mol_jsx_prefix = prefix;
                        $.$mol_jsx_booked = booked;
                        $.$mol_jsx_crumbs = crumbs;
                    }
                };
                $mol_func_name_from(wrapper, func);
                props[field] = wrapper;
            }
        }
        if (typeof Elem !== 'string') {
            if ('prototype' in Elem) {
                const view = node && node[String(Elem)] || new Elem;
                Object.assign(view, props);
                view[Symbol.toStringTag] = guid;
                view.childNodes = childNodes;
                if (!view.ownerDocument)
                    view.ownerDocument = $.$mol_jsx_document;
                view.className = (crumbs_self ? crumbs_self + ' ' : '') + (Elem['name'] || Elem);
                node = view.valueOf();
                node[String(Elem)] = view;
                return node;
            }
            else {
                const prefix = $.$mol_jsx_prefix;
                const booked = $.$mol_jsx_booked;
                const crumbs = $.$mol_jsx_crumbs;
                try {
                    $.$mol_jsx_prefix = guid;
                    $.$mol_jsx_booked = new Set;
                    $.$mol_jsx_crumbs = (crumbs_self ? crumbs_self + ' ' : '') + (Elem['name'] || Elem);
                    return Elem(props, ...childNodes);
                }
                finally {
                    $.$mol_jsx_prefix = prefix;
                    $.$mol_jsx_booked = booked;
                    $.$mol_jsx_crumbs = crumbs;
                }
            }
        }
        if (!node) {
            node = Elem
                ? $.$mol_jsx_document.createElementNS(props?.xmlns ?? 'http://www.w3.org/1999/xhtml', Elem)
                : $.$mol_jsx_document.createDocumentFragment();
        }
        $mol_dom_render_children(node, [].concat(...childNodes));
        if (!Elem)
            return node;
        if (guid)
            node.id = guid;
        for (const key in props) {
            if (key === 'id')
                continue;
            if (typeof props[key] === 'string') {
                if (typeof node[key] === 'string')
                    node[key] = props[key];
                node.setAttribute(key, props[key]);
            }
            else if (props[key] &&
                typeof props[key] === 'object' &&
                Reflect.getPrototypeOf(props[key]) === Reflect.getPrototypeOf({})) {
                if (typeof node[key] === 'object') {
                    Object.assign(node[key], props[key]);
                    continue;
                }
            }
            else {
                node[key] = props[key];
            }
        }
        if ($.$mol_jsx_crumbs)
            node.className = (props?.['class'] ? props['class'] + ' ' : '') + crumbs_self;
        return node;
    }
    $.$mol_jsx = $mol_jsx;
})($ || ($ = {}));

;
var $node = $node || {} ; $node[ "/mol/jsx/readme.md" ] = "IyAkbW9sX2pzeAoKSlNYIGFkYXB0ZXIgdGhhdCBtYWtlcyBET00gdHJlZS4gR2VuZXJhdGVzIGdsb2JhbCB1bmlxdWUgaWRzIGZvciBldmVyeSBET00tZWxlbWVudCBieSBjb21wb25lbnRzIHRyZWUgd2l0aCBpZHMuIEVuc3VyZXMgYWxsIGxvY2FsIGlkcyBhcmUgdW5pcXVlLiBDYW4gcmV1c2UgYW4gZXhpc3Rpbmcgbm9kZXMgYnkgR1VJRHMgd2hlbiB1c2VkIGluc2lkZSBbYCRtb2xfanN4X2F0dGFjaGBdKGh0dHBzOi8vZ2l0aHViLmNvbS9oeW9vLXJ1L21hbV9tb2wvdHJlZS9tYXN0ZXIvanN4L2F0dGFjaCkuCgojIyBVc2FnZSBleGFtcGxlCgpgYGB0c3gKLyoqIEBqc3ggJG1vbF9qc3ggKi8KCmNvbnN0ICRteV9tZXNzYWdlID0gKCBwcm9wcyA6IHsgY29udGVudCA6IHN0cmluZyB9ICk9PiAoCgk8ZGl2IGNsYXNzTGlzdD17WyAnZm9vIGJhcicgXX0gPgoJCXsgcHJvcHMuY29udGVudCB9IGlzCgkJPHN0cm9uZyBpZD0iL3RleHRfbm9kZXMiID4KCQkJdGV4dCBub2RlcwoJCTwvc3Ryb25nPgoJCW1peGVkIHdpdGgKCQk8c3Ryb25nIGlkPSIvZWxlbWVudHMiID4KCQkJZWxlbWVudHMKCQk8L3N0cm9uZz4KCQkhCgk8L2Rpdj4KKQoKY29uc3QgZG9tID0gKAoJPGh0bWw+CgkJPGJvZHk+CgkJCTwkbXlfbWVzc2FnZSBpZD0iJG15X2FwcCIgY29udGVudD0iQ29udGVudCIgLz4KCQk8L2JvZHk+Cgk8L2h0bWw+CikKYGBgCgpSZXN1bHQ6CgpgYGBodG1sCjxodG1sPgoJPGJvZHk+CgkJPGRpdiBpZD0iJG15X2FwcCIgY2xhc3M9ImZvbyBiYXIiID4KCQkJQ29udGVudCBpcwoJCQk8c3Ryb25nIGlkPSIkbXlfYXBwL3RleHRfbm9kZXMiID4KCQkJCXRleHQgbm9kZXMKCQkJPC9zdHJvbmc+CgkJCW1peGVkIHdpdGgKCQkJPHN0cm9uZyBpZD0iJG15X2FwcC9lbGVtZW50cyIgPgoJCQkJZWxlbWVudHMKCQkJPC9zdHJvbmc+CgkJCSEKCQk8L2Rpdj4KCTwvYm9keT4KPC9odG1sPgpgYGAKCltNb3JlIGV4YW1wbGVzIGluIHRlc3RzLl0oaHR0cHM6Ly9naXRodWIuY29tL2h5b28tcnUvbWFtX21vbC90cmVlL21hc3Rlci9qc3gvanN4LnRlc3QudHN4KQoKIyBTZWUgYWxzbwoKLSBbJG1vbF9qc3hfYXR0YWNoXShodHRwczovL2dpdGh1Yi5jb20vaHlvby1ydS9tYW1fbW9sL3RyZWUvbWFzdGVyL2pzeC9hdHRhY2gpIC0gcmVuZGVyIEpTWCB0byBleGlzdGluZyBkb2N1bWVudAotIFskbW9sX2pzeF92aWV3XShodHRwczovL2dpdGh1Yi5jb20vaHlvby1ydS9tYW1fbW9sL3RyZWUvbWFzdGVyL2pzeC92aWV3KSAtIHN0YXRlZnVsIHZpZXcgYm91bmQgdG8gRE9NLWVsZW1lbnQK"

;
	($.$mol_icon_download) = class $mol_icon_download extends ($.$mol_icon) {
		path(){
			return "M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z";
		}
	};


;
"use strict";

;
	($.$mol_button_download) = class $mol_button_download extends ($.$mol_button_minor) {
		Icon(){
			const obj = new this.$.$mol_icon_download();
			return obj;
		}
		title(){
			return "";
		}
		blob(){
			return null;
		}
		uri(){
			return "";
		}
		file_name(){
			return "blob.bin";
		}
		sub(){
			return [(this.Icon()), (this.title())];
		}
	};
	($mol_mem(($.$mol_button_download.prototype), "Icon"));


;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_button_download extends $.$mol_button_download {
            uri() {
                return URL.createObjectURL(this.blob());
            }
            click() {
                const a = $mol_jsx("a", { href: this.uri(), download: this.file_name() });
                a.click();
            }
        }
        __decorate([
            $mol_mem
        ], $mol_button_download.prototype, "uri", null);
        $$.$mol_button_download = $mol_button_download;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";

;
	($.$mol_icon_upload) = class $mol_icon_upload extends ($.$mol_icon) {
		path(){
			return "M9,16V10H5L12,3L19,10H15V16H9M5,20V18H19V20H5Z";
		}
	};


;
"use strict";

;
	($.$mol_button_open) = class $mol_button_open extends ($.$mol_button_minor) {
		Icon(){
			const obj = new this.$.$mol_icon_upload();
			return obj;
		}
		files(next){
			if(next !== undefined) return next;
			return [];
		}
		accept(){
			return "";
		}
		multiple(){
			return true;
		}
		Native(){
			const obj = new this.$.$mol_button_open_native();
			(obj.files) = (next) => ((this.files(next)));
			(obj.accept) = () => ((this.accept()));
			(obj.multiple) = () => ((this.multiple()));
			return obj;
		}
		sub(){
			return [(this.Icon()), (this.Native())];
		}
	};
	($mol_mem(($.$mol_button_open.prototype), "Icon"));
	($mol_mem(($.$mol_button_open.prototype), "files"));
	($mol_mem(($.$mol_button_open.prototype), "Native"));
	($.$mol_button_open_native) = class $mol_button_open_native extends ($.$mol_view) {
		accept(){
			return "";
		}
		multiple(){
			return true;
		}
		picked(next){
			if(next !== undefined) return next;
			return null;
		}
		dom_name(){
			return "input";
		}
		files(next){
			if(next !== undefined) return next;
			return [];
		}
		attr(){
			return {
				"type": "file", 
				"accept": (this.accept()), 
				"multiple": (this.multiple())
			};
		}
		event(){
			return {"change": (next) => (this.picked(next))};
		}
	};
	($mol_mem(($.$mol_button_open_native.prototype), "picked"));
	($mol_mem(($.$mol_button_open_native.prototype), "files"));


;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_button_open_native extends $.$mol_button_open_native {
            dom_node() {
                return super.dom_node();
            }
            picked() {
                const files = this.dom_node().files;
                if (!files || !files.length)
                    return;
                this.files([...files]);
            }
        }
        $$.$mol_button_open_native = $mol_button_open_native;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("mol/button/open/open.view.css", "[mol_button_open_native] {\n\tposition: absolute;\n\tleft: 0;\n\ttop: -100%;\n\twidth: 100%;\n\theight: 200%;\n\tcursor: pointer;\n\topacity: 0;\n}\n");
})($ || ($ = {}));

;
	($.$mol_icon_share) = class $mol_icon_share extends ($.$mol_icon) {
		path(){
			return "M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z";
		}
	};


;
"use strict";

;
	($.$mol_icon_share_variant) = class $mol_icon_share_variant extends ($.$mol_icon) {
		path(){
			return "M18,16.08C17.24,16.08 16.56,16.38 16.04,16.85L8.91,12.7C8.96,12.47 9,12.24 9,12C9,11.76 8.96,11.53 8.91,11.3L15.96,7.19C16.5,7.69 17.21,8 18,8A3,3 0 0,0 21,5A3,3 0 0,0 18,2A3,3 0 0,0 15,5C15,5.24 15.04,5.47 15.09,5.7L8.04,9.81C7.5,9.31 6.79,9 6,9A3,3 0 0,0 3,12A3,3 0 0,0 6,15C6.79,15 7.5,14.69 8.04,14.19L15.16,18.34C15.11,18.55 15.08,18.77 15.08,19C15.08,20.61 16.39,21.91 18,21.91C19.61,21.91 20.92,20.61 20.92,19A2.92,2.92 0 0,0 18,16.08Z";
		}
	};


;
"use strict";

;
	($.$mol_button_share) = class $mol_button_share extends ($.$mol_button_minor) {
		Icon(){
			const obj = new this.$.$mol_icon_share_variant();
			return obj;
		}
		title(){
			return "";
		}
		uri(){
			return "";
		}
		capture(){
			return null;
		}
		hint(){
			return (this.$.$mol_locale.text("$mol_button_share_hint"));
		}
		sub(){
			return [(this.Icon()), (this.title())];
		}
	};
	($mol_mem(($.$mol_button_share.prototype), "Icon"));


;
"use strict";
var $;
(function ($) {
    function $mol_dom_serialize(node) {
        const serializer = new $mol_dom_context.XMLSerializer;
        return serializer.serializeToString(node);
    }
    $.$mol_dom_serialize = $mol_dom_serialize;
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    async function $mol_dom_capture_svg(el) {
        function restyle(el, styles) {
            for (let i = 0; i < styles.length; ++i) {
                const prop = styles[i];
                el.style[prop] = styles[prop];
            }
        }
        function clone(el) {
            const re = el.cloneNode();
            if (el instanceof HTMLImageElement && !/^(data|blob):/.test(el.src)) {
                const canvas = $mol_jsx("canvas", { width: el.naturalWidth, height: el.naturalHeight });
                const context = canvas.getContext('2d');
                context.drawImage(el, 0, 0);
                try {
                    ;
                    re.src = canvas.toDataURL();
                }
                catch (error) {
                    $mol_fail_log(error);
                }
            }
            if (re instanceof HTMLInputElement) {
                re.setAttribute('value', el.value);
                if (el.checked)
                    re.setAttribute('checked', '');
            }
            if (re instanceof HTMLTextAreaElement) {
                re.setAttribute('value', el.value);
            }
            const styles = $mol_dom_context.getComputedStyle(el);
            restyle(re, styles);
            const before = $mol_dom_context.getComputedStyle(el, ':before');
            if (before.content[0] === '"') {
                const kid = $mol_jsx("span", null, JSON.parse(before.content));
                restyle(kid, before);
                re.appendChild(kid);
            }
            for (const kid of el.childNodes) {
                const dup = (kid.nodeType === kid.ELEMENT_NODE)
                    ? clone(kid)
                    : kid.cloneNode();
                re.appendChild(dup);
            }
            const after = $mol_dom_context.getComputedStyle(el, ':after');
            if (after.content[0] === '"') {
                const kid = $mol_jsx("span", null, JSON.parse(after.content));
                restyle(kid, after);
                re.appendChild(kid);
            }
            return re;
        }
        const { width, height } = el.getBoundingClientRect();
        return $mol_jsx("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: `0 0 ${width} ${height}`, width: String(width), height: String(height) },
            $mol_jsx("foreignObject", { xmlns: "http://www.w3.org/2000/svg", width: String(width), height: String(height) }, clone(el)));
    }
    $.$mol_dom_capture_svg = $mol_dom_capture_svg;
    async function $mol_dom_capture_image(el) {
        const xml = $mol_dom_serialize(await $mol_dom_capture_svg(el));
        const uri = 'data:image/svg+xml,' + encodeURIComponent(xml);
        const image = $mol_jsx("img", { src: uri });
        await wait_load(image);
        return image;
    }
    $.$mol_dom_capture_image = $mol_dom_capture_image;
    async function $mol_dom_capture_canvas(el) {
        const image = await $mol_dom_capture_image(el);
        const canvas = $mol_jsx("canvas", { width: image.width, height: image.height });
        const context = canvas.getContext('2d');
        context.drawImage(image, 0, 0);
        return canvas;
    }
    $.$mol_dom_capture_canvas = $mol_dom_capture_canvas;
    function wait_load(el) {
        return new Promise((done, fail) => {
            el.onload = () => done(el);
            el.onerror = fail;
        });
    }
})($ || ($ = {}));

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $mol_button_share extends $.$mol_button_share {
            capture() {
                return this.$.$mol_dom_context.document.body;
            }
            uri() {
                return this.$.$mol_state_arg.href();
            }
            async click() {
                const title = this.title();
                const url = this.uri() ?? undefined;
                const files = [];
                let el = this.capture();
                if (el) {
                    if (el instanceof $mol_view)
                        el = el.dom_tree();
                    const canvas = await $mol_dom_capture_canvas(el);
                    const blob = await new Promise(done => canvas.toBlob(done));
                    const file = new File([blob], title + '.png', { type: blob.type });
                    files.push(file);
                }
                await this.$.$mol_dom_context.navigator.share({ title, files, url });
            }
        }
        $$.$mol_button_share = $mol_button_share;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
	($.$hyper_handbook_demo_button) = class $hyper_handbook_demo_button extends ($.$hyper_handbook_scenes) {
		Major(){
			const obj = new this.$.$mol_button_major();
			(obj.title) = () => ("Нажми на меня");
			return obj;
		}
		Major_scene(){
			const obj = new this.$.$hyper_handbook_scene();
			(obj.scene) = () => ((this.Major()));
			return obj;
		}
		Major_disabled(){
			const obj = new this.$.$mol_button_major();
			(obj.enabled) = () => (false);
			(obj.title) = () => ("Не можешь на меня нажать?");
			return obj;
		}
		Major_disabled_scene(){
			const obj = new this.$.$hyper_handbook_scene();
			(obj.scene) = () => ((this.Major_disabled()));
			return obj;
		}
		click_action(next){
			if(next !== undefined) return next;
			return null;
		}
		Major_click(){
			const obj = new this.$.$mol_button_major();
			(obj.click) = (next) => ((this.click_action(next)));
			(obj.title) = () => ("Нажми на меня");
			return obj;
		}
		Major_click_scene(){
			const obj = new this.$.$hyper_handbook_scene();
			(obj.scene) = () => ((this.Major_click()));
			return obj;
		}
		Minor(){
			const obj = new this.$.$mol_button_minor();
			(obj.title) = () => ("Нажми на меня");
			return obj;
		}
		Minor_scene(){
			const obj = new this.$.$hyper_handbook_scene();
			(obj.scene) = () => ((this.Minor()));
			return obj;
		}
		Left_icon_plus(){
			const obj = new this.$.$mol_icon_plus();
			return obj;
		}
		With_icon(){
			const obj = new this.$.$mol_button_major();
			(obj.sub) = () => ([(this.Left_icon_plus()), (this.title())]);
			return obj;
		}
		With_icon_scene(){
			const obj = new this.$.$hyper_handbook_scene();
			(obj.scene) = () => ((this.With_icon()));
			return obj;
		}
		Icon_plus(){
			const obj = new this.$.$mol_icon_plus();
			return obj;
		}
		Only_icon(){
			const obj = new this.$.$mol_button_major();
			(obj.sub) = () => ([(this.Icon_plus())]);
			return obj;
		}
		Only_icon_scene(){
			const obj = new this.$.$hyper_handbook_scene();
			(obj.scene) = () => ((this.Only_icon()));
			return obj;
		}
		Copy(){
			const obj = new this.$.$mol_button_copy();
			(obj.title) = () => ("Скопировать \"$mol\"");
			(obj.text) = () => ("$mol");
			return obj;
		}
		Copy_scene(){
			const obj = new this.$.$hyper_handbook_scene();
			(obj.scene) = () => ((this.Copy()));
			return obj;
		}
		image_blob(){
			const obj = new this.$.$mol_blob();
			return obj;
		}
		Download(){
			const obj = new this.$.$mol_button_download();
			(obj.title) = () => ("Скачать изображение $mol-хендбука");
			(obj.blob) = () => ((this.image_blob()));
			(obj.file_name) = () => ("$mol-handbook.jpeg");
			return obj;
		}
		Download_scene(){
			const obj = new this.$.$hyper_handbook_scene();
			(obj.scene) = () => ((this.Download()));
			return obj;
		}
		Open(){
			const obj = new this.$.$mol_button_open();
			return obj;
		}
		Open_scene(){
			const obj = new this.$.$hyper_handbook_scene();
			(obj.scene) = () => ((this.Open()));
			return obj;
		}
		Share_link(){
			const obj = new this.$.$mol_button_share();
			(obj.title) = () => ("Поделиться хендбуком");
			(obj.uri) = () => ("https://page.hyoo.ru/#!=egnum3_mpctj5");
			(obj.capture) = () => (null);
			return obj;
		}
		Share_link_scene(){
			const obj = new this.$.$hyper_handbook_scene();
			(obj.scene) = () => ((this.Share_link()));
			return obj;
		}
		Share_screenshot(){
			const obj = new this.$.$mol_button_share();
			(obj.title) = () => ("Поделиться скриншотом страницы");
			return obj;
		}
		Share_screenshot_scene(){
			const obj = new this.$.$hyper_handbook_scene();
			(obj.scene) = () => ((this.Share_screenshot()));
			return obj;
		}
		scenes(){
			return [
				(this.Major_scene()), 
				(this.Major_disabled_scene()), 
				(this.Major_click_scene()), 
				(this.Minor_scene()), 
				(this.With_icon_scene()), 
				(this.Only_icon_scene()), 
				(this.Copy_scene()), 
				(this.Download_scene()), 
				(this.Open_scene()), 
				(this.Share_link_scene()), 
				(this.Share_screenshot_scene())
			];
		}
	};
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Major"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Major_scene"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Major_disabled"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Major_disabled_scene"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "click_action"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Major_click"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Major_click_scene"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Minor"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Minor_scene"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Left_icon_plus"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "With_icon"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "With_icon_scene"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Icon_plus"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Only_icon"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Only_icon_scene"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Copy"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Copy_scene"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "image_blob"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Download"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Download_scene"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Open"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Open_scene"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Share_link"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Share_link_scene"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Share_screenshot"));
	($mol_mem(($.$hyper_handbook_demo_button.prototype), "Share_screenshot_scene"));


;
"use strict";

;
	($.$hyper_handbook_demo) = class $hyper_handbook_demo extends ($.$hyper_handbook_scenes) {
		Button(){
			const obj = new this.$.$hyper_handbook_demo_button();
			return obj;
		}
		scenes(){
			return [(this.Button())];
		}
	};
	($mol_mem(($.$hyper_handbook_demo.prototype), "Button"));


;
"use strict";

;
"use strict";

;
"use strict";
var $;
(function ($) {
    var $$;
    (function ($$) {
        class $hyper_handbook_text extends $.$hyper_handbook_text {
            text() {
                return $mol_fetch.text("https://koplenov.github.io/seo_test/hyper/handbook/wiki/$mol_button.mt");
            }
        }
        $$.$hyper_handbook_text = $hyper_handbook_text;
    })($$ = $.$$ || ($.$$ = {}));
})($ || ($ = {}));

;
"use strict";
var $;
(function ($) {
    $mol_style_attach("hyper/handbook/handbook.view.css", "[hyper_handbook_text_embed_object] {\n\taspect-ratio: unset;\n}\n");
})($ || ($ = {}));


//# sourceMappingURL=web.js.map
